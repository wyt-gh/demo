# Host: localhost  (Version: 5.5.53)
# Date: 2020-12-15 13:57:42
# Generator: MySQL-Front 5.3  (Build 4.234)

/*!40101 SET NAMES utf8 */;

#
# Structure for table "em_admin"
#

DROP TABLE IF EXISTS `em_admin`;
CREATE TABLE `em_admin` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(30) NOT NULL DEFAULT '' COMMENT '用户名',
  `password` char(32) NOT NULL DEFAULT '' COMMENT '密码',
  `login_time` datetime NOT NULL COMMENT '最后登录时间',
  `login_ip` varchar(30) NOT NULL COMMENT '最后登录ip地址',
  `status` tinyint(4) NOT NULL DEFAULT '1' COMMENT '状态:1是,0否',
  `add_time` datetime NOT NULL COMMENT '添加时间',
  `on_off` tinyint(4) NOT NULL DEFAULT '1' COMMENT '开关状态 1开启 0关闭',
  `login_site` varchar(50) NOT NULL COMMENT 'ip物理地址',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=89 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

#
# Data for table "em_admin"
#

INSERT INTO `em_admin` VALUES (1,'changchun','123456','2020-12-14 16:08:38','127.0.0.1',0,'2019-10-08 21:21:11',0,'本机地址'),(2,'dongshao','123456','0000-00-00 00:00:00','',0,'2019-10-24 12:38:37',0,''),(3,'liuyougang','123456','0000-00-00 00:00:00','',0,'2019-10-24 12:38:39',0,''),(4,'zhangxudong','123456','2019-12-10 11:34:04','127.0.0.1',0,'2019-10-24 12:38:41',0,'本机地址'),(5,'changsheng','123456','0000-00-00 00:00:00','',0,'2019-10-26 18:55:20',0,''),(19,'tom','123456','0000-00-00 00:00:00','',1,'2019-10-09 08:39:47',1,''),(20,'user','123456','2020-12-02 11:12:21','127.0.0.1',1,'2019-10-09 10:00:29',1,''),(30,'li','123456','2020-09-18 15:21:01','127.0.0.1',1,'2019-10-09 10:10:29',1,'本机地址'),(32,'check','123456','0000-00-00 00:00:00','',1,'2019-10-09 10:24:57',1,''),(35,'peter','123456','2020-12-14 15:39:39','127.0.0.1',1,'2019-10-10 08:42:30',1,''),(36,'tomk','123456','0000-00-00 00:00:00','',1,'2019-10-29 21:39:26',1,''),(37,'yt','123456','0000-00-00 00:00:00','',0,'2019-10-29 21:41:24',1,''),(38,'王正相','123456','2020-12-14 14:51:59','127.0.0.1',1,'2019-10-31 22:44:54',1,'本机地址'),(39,'张兴强','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(40,'赵昌','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(41,'李宗伟','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(42,'王宏','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(43,'马政','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(44,'王鑫','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(45,'梁月辉','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(46,'汪道彬','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(47,'李龙强','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(48,'肖体莲','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(49,'王伟','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(50,'郭伟','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(51,'郭腾芳','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(52,'任红吏','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(53,'康 颗','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(54,'陈雪冬','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(55,'杨孝明','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(56,'吕军','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(57,'郑欣','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(58,'蒋伟','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(59,'李阳勇','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(60,'龙炳全','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(61,'叶俊利','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(62,'樊家岐','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(63,'肖恒','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(64,'刘晓晶','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(65,'成亮','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(66,'叶何林','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(67,'李金柯','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:54',1,''),(68,'侯晓轩','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(69,'叶鉴原','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(70,'凌娟','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(71,'翁邦维','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(72,'李鑫全','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(73,'田玲玲','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(74,'卿舒心','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(75,'谢鑫','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(76,'吕平','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(77,'廖雅婷','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(78,'黄鑫宇','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(79,'王佩文','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(80,'丁洋','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(81,'钱程','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(82,'廖理','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(83,'吴寻','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(84,'刘庆花','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(85,'黄婧','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(86,'卿文浩','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(87,'黎莉媛','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,''),(88,'刘富腾','123456','0000-00-00 00:00:00','',1,'2019-10-31 22:44:55',1,'');

#
# Structure for table "em_admin_role"
#

DROP TABLE IF EXISTS `em_admin_role`;
CREATE TABLE `em_admin_role` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `admin_id` int(11) NOT NULL DEFAULT '0' COMMENT '用户ID',
  `role_id` varchar(50) NOT NULL DEFAULT '0' COMMENT '角色ID',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=81 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

#
# Data for table "em_admin_role"
#

INSERT INTO `em_admin_role` VALUES (6,20,'4'),(11,30,'8'),(13,32,'4'),(16,1,'1'),(17,19,'6'),(18,35,'4'),(19,36,'4,8'),(20,2,'1'),(21,3,'1'),(22,4,'1'),(28,5,'1'),(29,37,'1'),(30,38,'9'),(31,39,'9'),(32,40,'9'),(33,41,'9'),(34,42,'9'),(35,43,'9'),(36,44,'9'),(37,45,'9'),(38,46,'9'),(39,47,'9'),(40,48,'9'),(41,49,'9'),(42,50,'9'),(43,51,'9'),(44,52,'9'),(45,53,'9'),(46,54,'9'),(47,55,'9'),(48,56,'9'),(49,57,'9'),(50,58,'9'),(51,59,'9'),(52,60,'9'),(53,61,'9'),(54,62,'9'),(55,63,'9'),(56,64,'9'),(57,65,'9'),(58,66,'9'),(59,67,'9'),(60,68,'9'),(61,69,'9'),(62,70,'9'),(63,71,'9'),(64,72,'9'),(65,73,'9'),(66,74,'9'),(67,75,'9'),(68,76,'9'),(69,77,'9'),(70,78,'9'),(71,79,'9'),(72,80,'9'),(73,81,'9'),(74,82,'9'),(75,83,'9'),(76,84,'9'),(77,85,'9'),(78,86,'9'),(79,87,'9'),(80,88,'9');

#
# Structure for table "em_book"
#

DROP TABLE IF EXISTS `em_book`;
CREATE TABLE `em_book` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `admin_id` int(6) DEFAULT NULL COMMENT '作者id',
  `book_name` varchar(100) DEFAULT NULL COMMENT '书名',
  `cover_img` varchar(255) DEFAULT NULL COMMENT '封面图片',
  `grade` float(2,1) DEFAULT '5.0' COMMENT '评分',
  `read` int(10) DEFAULT '0' COMMENT '阅读量/点击量',
  `title` varchar(150) DEFAULT NULL COMMENT '标签',
  `synopsis` varchar(255) DEFAULT NULL COMMENT '书籍简介',
  `vip` int(1) DEFAULT '0' COMMENT '1为vip/0为免费',
  `end` int(1) DEFAULT '0' COMMENT '1为完本,0为在更',
  `status` int(1) DEFAULT '1' COMMENT '1为存在/0为删除',
  `on_off` int(1) DEFAULT '1' COMMENT '1为上架/0为下架',
  `major_id` int(3) DEFAULT NULL COMMENT '专业id',
  `subject_id` int(3) DEFAULT NULL COMMENT '科目id',
  `add_time` datetime DEFAULT '0000-00-00 00:00:00' COMMENT '添加时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COMMENT='书本';

#
# Data for table "em_book"
#

/*!40000 ALTER TABLE `em_book` DISABLE KEYS */;
INSERT INTO `em_book` VALUES (1,1,'李炎恢HTML/CSS教程','uploads\\book\\1\\image\\20201214\\e0dda0ce205ac15cef92cc4017041740.png',5.0,1,'1,3,5','李炎恢HTML/CSS，HTML5，CSS3教程',0,1,1,1,1,1,'2020-12-14 16:08:53'),(2,1,'前端工程师手册','uploads\\book\\1\\image\\20201214\\8aa748d2f43eb4d5bf28cb6078304fef.png',5.0,1,'1,2,3','前端工程师手册，囊括前端各种知识点，从JavaScript到js框架，从HTML5到UI，以及CSS3动画，还有一些浏览器前端访问跨域等的方案。',1,1,1,1,1,1,'2020-12-14 16:08:57'),(3,1,'前端开发规范手册','uploads\\book\\1\\image\\20201214\\f10765f3ba5738b7012065084bd6f2c5.png',5.0,2,'1,5','此手册主要实现的目标：代码一致性和最佳实践。通过代码风格的一致性，降低维护代码的成本以及改善多人协作的效率。同时遵守最佳实践，确保页面性能得到最佳优化和高效的代码。 此手册是在开发中积累下来的经验和参考其它规范/指南制定的，它只是起指导作用，除个别条目强制之外，大多数为非强制约束，开发者可根据自己的实际情况自行决定是否要遵守 该指南只是保证大方向一致性和最佳实践的阶段性总结，不是最后结论，它会随着时间而变化。',0,1,1,1,1,1,'2020-12-14 16:09:01'),(4,1,'前端开发者手册2019','uploads\\book\\1\\image\\20201214\\41cdef2fde2ca3b3579218722449fe6f.png',5.0,2,'1,2,5','这是一本每个人都可以用来学习前端开发实践的指南。它大致总结和讨论了前端工程的实践：如何学习它以及在2019年实践它时会使用到的工具。',1,1,1,1,1,1,'2020-12-14 16:09:07'),(5,1,'文档与源码编写风格','uploads\\book\\1\\image\\20201214\\eabe144a33caf20b80aba09681951bd9.png',5.0,1,'1,2','开源项目目录规范 Javascript 编码规范 CSS 编码规范 HTML 编码规范 Markdown 编写规范\n',0,1,1,1,1,1,'2020-12-14 16:09:12'),(6,38,'全端工程师修炼手册','uploads\\book\\38\\image\\20201214\\7bf13550129e4d3d7e21f34c48bc2ac5.png',5.0,1,'2,6','全端工程师修炼手册',0,0,1,1,1,1,'2020-12-14 14:12:27'),(7,38,'前端开发者指南（2017）','uploads\\book\\38\\image\\20201214\\4437ec2f47b6d61192ed268a84ad9cda.png',5.0,1,'1,2','这是一本可供任何人使用的指南，用于学习前端开发实践。该指南大体上勾勒出了前端工程的轮廓，同时也讨论了前端工程的实践：2017 年，如何学习前端工程，用什么工具来实践？',1,0,1,1,1,1,'2020-12-14 15:19:05'),(8,38,'前端开发者指南 2018','uploads\\book\\38\\image\\20201214\\e014112a9b126f7ce5fdeda196e1d96d.png',5.0,1,'2,3,4','这是一个任何人都可以用来学习前端开发实践的指南。它大致地概括并讨论了前端工程的实践：如何学习前端以及在 2018 年开发中用到的工具。',1,0,1,1,1,1,'2020-12-14 15:35:16'),(9,35,'优达学城（Udacity）前端样式指南','uploads\\book\\35\\image\\20201214\\12f75d83eb629a6d09b98436f54cb82f.png',5.0,1,'1,2,3','优达学城（Udacity）前端样式指南',0,1,1,1,1,1,'2020-12-14 15:43:51'),(10,35,'CSS创作指南','uploads\\book\\35\\image\\20201214\\699cf2b0bf69da14fb1d12f3262ac6a5.png',5.0,1,'1,6','CSS 是一种领域语言（DSL），层叠与继承赋予了 CSS 优雅多姿的无限创造力。正是由于它如此「简单」， 我们需要一些规范来使其变得更加可依赖。在使用 CSS 的时候不要把它当做一种编程语言，应该把它当做 绘画或者创作。所以本文档不仅仅是一份 CSS 书写规范，更像是 CSS 创作的调色盘。',0,0,1,1,1,1,'2020-12-14 15:44:58'),(11,35,'Kubespray v2.10.4 Document','uploads\\book\\35\\image\\20201214\\2ea3375e93cb46be4e890247be4162b5.png',5.0,1,'1,2','Kubespray - Deploy a Production Ready Kubernetes Cluster。Can be deployed on AWS, GCE, Azure, OpenStack, vSphere, Packet (bare metal), Oracle Cloud Infrastructure (Experimental), or Baremetal；Highly available cluster；Composable (Choice of the network plugi',0,0,1,1,1,4,'2020-12-14 15:55:30'),(12,35,'SqlSugar 5.0 文档','uploads\\book\\35\\image\\20201214\\1d81e7a5d98c05ef5e7c43037ec3b182.png',5.0,0,'1,2,3','SqlSugar 是一款简单易用的开源 ORM 框架，支持.NET CORE 和 MySql、SqlServer、Sqlite、Oracle 、 postgresql 、达梦、人大金仓 数据库，具有 EF NH 的功能，比 EF 更人性化的语法，支持真实的批量操作，另外还有媲美 DAPPER 的性能。',0,0,1,1,1,4,'2020-12-14 15:58:13');
/*!40000 ALTER TABLE `em_book` ENABLE KEYS */;

#
# Structure for table "em_book_search"
#

DROP TABLE IF EXISTS `em_book_search`;
CREATE TABLE `em_book_search` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `student_id` int(8) DEFAULT '0' COMMENT '学生id',
  `search_content` varchar(255) DEFAULT NULL COMMENT '搜索内容',
  `search_num` int(11) DEFAULT '1' COMMENT '搜索次数',
  `add_time` datetime DEFAULT '0000-00-00 00:00:00' COMMENT '添加或更新时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='搜索历史';

#
# Data for table "em_book_search"
#

/*!40000 ALTER TABLE `em_book_search` DISABLE KEYS */;
/*!40000 ALTER TABLE `em_book_search` ENABLE KEYS */;

#
# Structure for table "em_book_section"
#

DROP TABLE IF EXISTS `em_book_section`;
CREATE TABLE `em_book_section` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `book_id` int(11) DEFAULT NULL COMMENT '书本id',
  `section_num` int(6) DEFAULT NULL COMMENT '第几章',
  `section_name` varchar(100) DEFAULT NULL COMMENT '章节名称',
  `section_content` text COMMENT '章节内容',
  `add_time` datetime DEFAULT '0000-00-00 00:00:00' COMMENT '章节添加时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=43 DEFAULT CHARSET=utf8 COMMENT='所以书籍的所以章节';

#
# Data for table "em_book_section"
#

/*!40000 ALTER TABLE `em_book_section` DISABLE KEYS */;
INSERT INTO `em_book_section` VALUES (1,1,1,'HTML5 概述','<h1>第 1 章 HTML5 概述</h1><p><strong>学习要点：</strong></p><p>1.HTML5 的历史</p><p>2.HTML5 的功能</p><p>3.HTML5 的特点</p><p>4.课程学习问题</p><p>主讲教师：李炎恢</p><p>HTML5 是继 HTML4.01 和 XHTML1.0 之后的超文本标记语言的最新版本。 它是由一群自由思想者组成的团队设计出来，并最终实现多媒体支持、交互性、更加智能的表单，以及更好的语义化标记。</p><p>HTML5 并不仅仅是 HTML 规范的最新版本，而是一系列用来制作现代富 Web 内容的相关技术的总称，其中最重要的三项技术分别为：HTML5 核心规范（标签元素）、CSS（层叠样式表第三代）、和 JavaScript。</p><p><strong>一．HTML5 的历史</strong></p><p>1993 年 HTML 首次以因特网草案的形式发布， 然后经历了 2.0、 3.2 和 4.0， 直到 1999年的 HTML4.01 版本稳定下来。由于发展缓慢，逐渐的被更加严格的 XHTML 取代。</p><p><strong>XHTML 的兴衰史</strong></p><p>自从 HTML4.01 版本之后，掌握着 HTML 规范的万维网联盟（W3C）组织没有再发布新的标准，而是围绕着 XHTML1.0 以及之后的 XHTML2.0 展开工作。XHTML 是基于 XML、致力于实现更加严格并且统一的编码规范的 HTML 版本，解决之前 HTML4.01 版本时，由于编码不规范导致浏览器的各种古怪行为。所以，Web 开发者对 XHTML 非常的拥护。XHTML 极大的好处，就是强迫开发者养成良好的编码习惯，放弃 HTML 的凌乱写法，最终降低了浏览器解析页面的难度，方便移植到更多平台。</p><p>可是，越是想往好的方面发展，往往可能是带来的却是毁灭性的灾难，世间万物就是如此。XHTML2.0 规范了更严格的错误处理规则，强制要求浏览器拒绝无效的 XHTML2 页面，强制 Web 开发者写出绝对正确规范的代码，同时不得向下兼容，摒弃 HTML 遗留的怪异行为和编码习惯。按理说，取其精华、舍其糟粕应该是好事。但是，这样的话，数亿的页面将无法兼容，Web 开发者的难度又被加大，并且制定这个标准又太过久远，最终被抛弃。</p><p><strong>HTML5 的回归</strong></p><p>2008 年 W3C 发布了 HTML5 的工作草案，2009 年停止了 XHTML2 计划。又过去大概一年， HTML5 规范进一步解决了诸多非常实际的问题， 各大浏览器厂商开始对旗下的产品进行升级，以便支持 HTML5。这样，得益于浏览器的实验反馈，HTML5 规范得到了持续的进步和完善，从而迅速融入到 Web 平台的实质性改进中。</p><p>和 XHTML2.0 不同， 制定 HTML5 规范的一群人并不想挑出以往 HTML 的各种毛病为其改正，而是尽可能的补全 Web 开发者急需的各种功能。这些功能包括更强大的 CSS3、表单验证、音频视频、本地存储、地理定位、绘画（Canvas）、Web 通信等等。</p><p><strong>二．HTML5 的功能</strong></p><p>HTML5 到底涵盖了哪些功能？这些功能到底在主流的浏览器支持情况如何？</p><p><strong>1.HTML5 核心</strong>：这部分主要由 W3C 官方的规范组成，涉及新的语义元素、新的增强的Web 表单、音频和视频、以及通过 JavaScript 绘图的 Canvas。这部分大多数主流浏览器均得到很好的支持；</p><p><strong>2.曾经的 HTML5 标准</strong>：这部分主要来自于最初制定的 HTML5 规范，其中大多数功能需要 JavaScript 且支持富 Web 应用开发。比如：本地数据存储、离线应用和消息传递；3.非 HTML5 标准：这部分通常指下一代功能，虽然从未进入 HTML5 标准，但人们还是会把它认做 HTML5 的一部分。这些包括最为常见的 CSS3，以及很热门的地理定位。</p><p>对于最为常用且实用的部分， 基本上主流的浏览器都支持的比较好。 而那些特殊需求的部分，则需要根据不同的浏览器检测才能知道是否支持自己想要的功能。</p><p><strong>三．HTML5 的特点</strong></p><p>在 HTML5 发展的同时，XHTML2.0 也在不断发展，那么到底是哪些特点导致 HTML5 取得最终的胜利呢？</p><p><strong>1.向下兼容</strong></p><p>对于 XHTML2.0 要求遵循规则，否则不予显示的方式，HTML5 却实行“不破坏 Web” 的原则。也就是说，以往已存在的 Web 页面，还可以保持正确的显示。</p><p>当然，面对开发者，HTML5 规范要求摒弃过去那些编码坏习惯和废弃的标签元素；而面对浏览器厂商，要求它们兼容 HTML 遗留的一切，以做到向下兼容。</p><p><strong>2.用户至上</strong></p><p>HTML5 遵循“用户至上”的原则，在出现具体问题时，会把用户放在第一位，其次是开发者，然后是浏览器厂商，最后才是规范制定者。比如，开发者在编码时不严谨导致本该出现警告或错误时，却正常显示了页面。</p><p><strong>3.化繁为简</strong></p><p>HTML5 对比之前的 XHTML，做了大量的简化工作。具体如下：</p><p>(1).以浏览器的原生能力代替复杂的 JavaScript；</p><p>(2).DOCTYPE 被简化到极致；</p><p>(3).字符集声明被简化；</p><p>(4).简单强大的 API。</p><p><strong>4.无插件范式</strong></p><p>在 HTML5 出现之前，很多功能只能通过插件或 hack（如绘图 API）来实现，但 HTML5原生提供了这些支持。使用插件有很多问题，具体如下：</p><p>(1).插件安装容易失败；</p><p>(2).插件被浏览器或软件禁用屏蔽（如 Flash 插件）；</p><p>(3).插件经常会被爆出漏洞被利用攻击；</p><p>(4).插件不容易与 HTML 文档其他部分集成（比如整体透明化等）。</p><p><strong>5.访问通用性</strong></p><p>这个原则分为三个概念：</p><p>(1).可访问性：比如更加利于残障人士的阅读方案；</p><p>(2).媒体中立：比如 HTML5 的媒体播放在不同设备或平台均能正常运行；</p><p>(3).支持所有语种：比如新元素&lt;ruby&gt;。</p><p><strong>6.引入语义</strong></p><p>HTML5 引入了一些用来区分不同含义和内容的标记元素。 这种方式极大的提供的编码人员的可读性和代码区域查询的便利性。</p><p><strong>7.引入原生媒体支持</strong></p><p>HTML5 的一次大改进救生衣支持在浏览器中直接播放视频和音频文件， 以前都需要借助插件才能实现此类功能。</p><p><strong>8.引入可编程内容</strong></p><p>HTML5 最大的变化就是引入了需要通过 JavaScript 编程才能完全的各种效果， 而这些很多都是 HTML5 原生的。那么现在 HTML5 可以理解为 HTML + CSS + JavaScript 的总称。</p><p><strong>四．课程学习问题</strong></p><p>学习 HTML5 需要一些测试用的浏览器、编码用的开发工具、以及建议推荐的学习方法。</p><p><strong>1.浏览器选择</strong></p><p>　　IE9+</p><p>　　Firefox 3.5+</p><p>　　Chrome 3.0+</p><p>　　Safari 3.0+</p><p>　　Opera 10.5+</p><p>这里重点要说明一下 IE 浏览器。由于历史和系统绑定原因，还有相当一部分电脑残留IE9 以下版本的浏览器。虽然微软已经开始发表声明逐步不再维护 IE8，但这部分群体还占有一定的份额。所以，是否要迎合这部分用户，取决于个人对市场的判断和成本的考量。</p><p><strong>2.开发工具</strong></p><p>本课程我们使用 Sublime Text3 作为 HTML5 课程的编码工具。使用了 Soda Dark 3作为软件界面的主题。</p><p><strong>3.学习方式</strong></p><p>本课程原则上是零基础、初学者可学，但如果你已经有 XHTML 课程基础，那么学习起来将非常轻松。当然，虽然我们已经录制了 XHTML 基础，在录制 HTML5 课程时，还是将所有学员当作刚接触的初学者来对待。 再当然， 这里所说的零基础和初学者也是需要一定经验，因为长期的教学工作，我们接触到很多连 QQ 不会用、邮件不会发送、迅雷不会下载的学员。这些学员是初学者之前的、负基础的学员，所以，如果是初学者一般问题不大。</p>','2020-12-14 09:41:25'),(2,1,2,'基本格式','<p>第 2 章 基本格式<br>学习要点：<br><br>1.HTML5 文档结构<br><br>2.文档结构解析<br><br>3.元素标签探讨<br><br>主讲教师：李炎恢<br><br>本章主要先从 HTML5 的文档结构谈起。 这些基础元素确定了 HTML 文档的轮廓以及浏览器的初始环境。几乎所有页面都必须首先键入这些元素。<br><br>一．HTML5 文档结构<br><br>1.第一步：打开 Sublime Text 3，打开指定文件夹；<br><br>2.第二步：保存 index.html 文件到磁盘中，.html 是网页后缀；<br><br>3.第三步：开始编写 HTML5 的基本格式。<br><br>&lt;!DOCTYPE html&gt; //文档类型声明 &lt;html lang=\"zh-cn\"&gt; //表示 HTML 文档开始 &lt;head&gt; //包含文档元数据开始 &lt;meta charset=\"utf-8\"&gt; //声明字符编码 &lt;title&gt;基本结构&lt;/title&gt; //设置文档标题 &lt;/head&gt; //包含文档元数据结束 &lt;body&gt; //表示 HTML 文档内容 &lt;a href=\"http://www.baidu.com\"&gt;百度&lt;/a&gt; //一个超链接元素（标签） &lt;/body&gt; //表示 HTML &lt;/html&gt;                                          //表示 HTML 文档结束<br>二．文档结构解析<br><br>1.Doctype<br><br>文档类型声明（Document Type Declaration，也称 Doctype）。它主要告诉浏览器所查看的文件类型。 在以往的 HTML4.01 和 XHTML1.0 中， 它表示具体的 HTML 版本和风格。而如今 HTML5 不需要表示版本和风格了。<br><br>&lt;!DOCTYPE html&gt; //不分区大小写<br>2.html 元素<br><br>首先，元素就是标签的意思，html 元素即 html 标签。html 元素是文档开始和结尾的元素。它是一个双标签，头尾呼应，包含内容。这个元素有一个属性和值：lang=\"zh-cn\"，表示文档采用语言为：简体中文。<br><br>&lt;html lang=\"zh-cn\"&gt; //如果是英文则为 en<br>3.head 元素<br><br>用来包含元数据内容，元数据包括：&lt;link&gt;、&lt;meta&gt;、&lt;noscript&gt;、&lt;script&gt;、&lt;style&gt;、&lt;title&gt;。这些内容用来浏览器提供信息，比如 link 提供 CSS 信息，script提供 JavaScript 信息，title 提供页面标题等。<br><br>&lt;head&gt;...&lt;/head&gt; //这些信息在页面不可见<br>4.meta 元素<br><br>这个元素用来提供关于文档的信息，起始结构有一个属性为：charset=\"utf8\"。表示告诉浏览器页面采用的什么编码，一般来说我们就用 utf8。当然，文件保存的时候也是utf8，而浏览器也设置 utf8 即可正确显示中文。<br><br>&lt;meta charset=\"utf-8\"&gt; //除了设置编码，还有别的<br>5.title 元素<br><br>这个元素很简单，顾名思义：设置浏览器左上角的标题。<br><br>&lt;title&gt;基本结构&lt;/title&gt;<br>6.body 元素<br><br>用来包含文档内容的元素，也就是浏览器可见区域部分。所有的可见内容，都应该在这个元素内部进行添加。<br><br>&lt;body&gt;...&lt;/body&gt;<br>7.a 元素<br><br>一个超链接，后面会详细探讨。<br><br>&lt;a href=\"http://www.baidu.com\"&gt;百度&lt;/a&gt;<br>三．元素标签探讨<br><br>HTML 是一种标记语言，刚才的结构我们已经详细探讨过。这里，我们再剖析一下这些“标记”或者叫“标签”，书面上经常称作为“元素”的东西是怎么构成的。<br><br>1.元素<br><br>元素就是一组告诉浏览器如何处理一些内容的标签。每个元素都有一个关键字，比如&lt;body&gt;、&lt;title&gt;、&lt;meta&gt;都是元素。不同的标签名称代表不同的意义，后面将会涉及到段落标签、文本标签、链接标签、图片标签等。<br><br>元素一般分为两种：单标签（空元素）和双标签。单标签一般用于声明或者插入某个元素，比如声明字符编码就用&lt;meta&gt;，插入图片就用&lt;img&gt;；双标签一般用于设置一段区域的内容，将其包含起来，比如段落&lt;p&gt;…&lt;/p&gt;。<br><br>2.属性和值<br><br>元素除了有单双之分， 元素的内部还可以设置属性和值。 这些属性值用来改变元素某些方面的行为。比如超链接：&lt;a&gt;中的 href 属性，里面替换网址即可链接到不同的网站。当然一个元素里面可以设置多个属性，甚至自定义属性。</p>','2020-12-14 09:42:14'),(3,1,3,'文本元素','<p>第 3 章 文本元素<br>学习要点：<br><br>1.文本元素总汇<br><br>2.文本元素解析<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中的文本元素，所谓文本元素，就是将一段文本设置成相匹配的结构和含义。<br><br>一．文本元素总汇<br><br>HTML5 规范指出：使用元素应该完全从元素的语义出发。但是由于历史遗留及用户至上的原则，这种语义会宽松许多。<br><br>元素名称\t说明<br>a\t生成超链接<br>br\t强制换行<br>wbr\t可安全换行<br>b\t标记一段文字但不强调<br>strong\t表示重要<br>i\t表示外文或科学术语<br>em\t表示强调<br>code\t表示计算机代码<br>var\t表示程序输出<br>samp\t表示变量<br>kbd\t表示用户输入<br>abbr\t表示缩写<br>cite\t表示其他作品的标题<br>del\t表示被删除的文字<br>s\t表示文字已不再确认<br>dfn\t表示术语定义<br>mark\t表示与另一段上下文有关的内容<br>q\t表示引自他处的内容<br>rp\t与 ruby 元素结合使用，标记括号<br>rt\t与 ruby 元素结合使用，标记括号<br>ruby\t表示位于表意文字上方或右方的注音符号<br>bdo\t控制文字的方向<br>small\t表示小号字体内容<br>sub\t表示下标字体<br>sup\t表示上标字体<br>time\t表示时间或日期<br>u\t标记一段文字但不强调<br>span\t通用元素，没有任何语义。一般配合 CSS 修饰。<br>从上面这张表格中，我们发现文本元素还是非常多的。但实际上，在现实应用中，真正常用的也就是那么几个，绝大部分是针对英文的。<br><br>二．文本元素解析<br><br>1.&lt;b&gt;表示关键字和产品名称<br><br>&lt;b&gt;HTML5&lt;/b&gt;<br>解释：&lt;b&gt;元素实际作用就是加粗。从语义上来看，就是标记一段文字，但并不是特别强调或重要性。比如：一段文本中的某些关键字或者产品的名称。<br><br>2.&lt;strong&gt;表示重要的文字<br><br>&lt;strong&gt;HTML5&lt;/strong&gt;<br>解释：&lt;strong&gt;元素实际作用和&lt;b&gt;一样，就是加粗。从语义上来看，就是强调一段重要的文本。<br><br>3.&lt;br&gt;强制换行、&lt;wbr&gt;安全换行<br><br>&lt;br&gt; Thisabc&lt;wbr&gt;dkedkslakdj&lt;wbr&gt;fkdlsakd is apple.<br>解释：在任意文本位置键入&lt;br&gt;都会被换行，而在英文单词过长时使用&lt;wbr&gt;会根据浏览器的宽度适当的裁切换行。<br><br>4.&lt;i&gt;表示外文词汇或科技术语<br><br>&lt;i&gt;HTML5&lt;/i&gt;<br>解释：&lt;i&gt;元素实际作用就是倾斜。从语义上来看，表示区分周围内容，并不是特别强调或重要性。<br><br>5.&lt;em&gt;加以强调<br><br>&lt;em&gt;HTML5&lt;/em&gt;<br>解释：&lt;em&gt;元素实际作用和&lt;i&gt;一样，就是倾斜；从语义上来看，表示对一段文本的强调。<br><br>6.&lt;s&gt;表示不准确或校正<br><br>&lt;s&gt;HTML5&lt;/s&gt;<br>解释：&lt;s&gt;元素实际作用就是删除线；从语义上来看，表示不准确的删除。<br><br>7.&lt;del&gt;表示删除文字<br><br>&lt;del&gt;HTML5&lt;/del&gt;<br>解释：&lt;del&gt;元素实际作用和&lt;s&gt;一样，就是删除线；从语义上来看，表示删除相关文字。<br><br>8.&lt;u&gt;表示给文字加上下划线<br><br>&lt;u&gt;HTML5&lt;/u&gt;<br>解释：&lt;u&gt;元素实际作用就是加一条下划线；从语义上来看，并不强调此段文本。<br><br>9.&lt;ins&gt;添加一段文本<br><br>&lt;ins&gt;HTML5&lt;/ins&gt;<br>解释：&lt;ins&gt;元素实际作用和&lt;u&gt;一样，加一条下划线；从语义上来看，是添加一段文本，起到强调的作用。<br><br>10.&lt;small&gt;添加小号字体<br><br>&lt;small&gt;HTML5&lt;/small&gt;<br>解释：&lt;small&gt;元素实际作用就是将文本放小一号。从语义上来看，用于免责声明和澄清声明。<br><br>11.&lt;sub&gt;&lt;sup&gt;添加上标和下标<br><br>&lt;sub&gt;5&lt;/sub&gt;<br>&lt;sup&gt;5&lt;/sup&gt;<br>解释：&lt;sub&gt;和&lt;sup&gt;元素实际作用就是数学的上标和下标。语义也是如此。<br><br>12.&lt;code&gt;等表示输入和输出<br><br>&lt;code&gt;HTML5&lt;/code&gt;<br>&lt;var&gt;HTML5&lt;/var&gt;<br>&lt;samp&gt;HTML5&lt;/samp&gt;<br>&lt;kdb&gt;HTML5&lt;/kdb&gt;<br>解释：&lt;code&gt;表示计算机代码片段；&lt;var&gt;表示编程语言中的变量；&lt;samp&gt;表示程序或计算机的输出；&lt;kdb&gt;表示用户的输入。由于这属于英文范畴的，必须将 lang=\"en\"英语才能体现效果。<br><br>13.&lt;abbr&gt;表示缩写<br><br>&lt;abbr&gt;HTML5&lt;/abbr&gt;<br>解释：&lt;abbr&gt;元素没有实际作用；从语义上看，是一段文本的缩写。<br><br>14.&lt;dfn&gt;表示定义术语<br><br>&lt;dfn&gt;HTML5&lt;/dfn&gt;<br>解释：&lt;dfn&gt;元素就是一般性的倾斜；从语义上看，表示解释一个词或短语的一段文本。<br><br>15.&lt;q&gt;引用来自他处的内容<br><br>&lt;q&gt;HTML5&lt;/q&gt;<br>解释：&lt;q&gt;元素实际作用就是加了一对双引号。从语义上来看，表示引用来自其他地方的内容。<br><br>16.&lt;cite&gt;引用其他作品的标题<br><br>&lt;cite&gt;HTML5&lt;/cite&gt;<br>解释：&lt;cite&gt;元素实际作用就是加粗。从语义上来看，表示引用其他作品的标题。<br><br>17.&lt;ruby&gt;语言元素<br><br>&lt;ruby&gt; 饕&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;tāo&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; 餮&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;tiè&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; &lt;/ruby&gt;<br>解释：&lt;ruby&gt;用来为非西方语言提供支持。&lt;rp&gt;&lt;rt&gt;用来帮助读者掌握表意语言文字正确发音。比如：汉语拼音在文字的上方。但目前 Firefox 还不支持此特性。<br><br>18.&lt;bdo&gt;设置文字方向<br><br>&lt;bdo dir=\"rtl\"&gt;HTML5&lt;/bdo&gt;<br>解释：&lt;bdo&gt;必须使用属性 dir 才可以设置，一共两个值：rtl（从右到左）和 ltr（从左到右）。一般默认是 ltr。还有一个&lt;bdi&gt;元素也是处理方向的，由于是特殊语言的特殊效果，且主流浏览器大半不支持，忽略。<br><br>19.&lt;mark&gt;突出显示文本<br><br>&lt;mark&gt;HTML5&lt;/mark&gt;<br>解释：&lt;mark&gt;实际作用就是加上一个黄色的背景，黑色的字；从语义上来看，与上下文相关而突出的文本，用于记号。<br><br>20.&lt;time&gt;表示日期和时间<br><br>&lt;time&gt;2015-10-10&lt;/time&gt;<br>解释：&lt;time&gt;元素没有实际作用；从语义上来看，表示日期和时间。<br><br>21.&lt;span&gt;表示一般性文本<br><br>&lt;span&gt;HTML5&lt;/span&gt;<br>解释：&lt;span&gt;元素没有实际作用；语义上就是表示一段文本，我们经常用它来设置 CSS 等操作。</p>','2020-12-14 09:42:47'),(4,1,4,'超链接和路径','<p>第 4 章 超链接和路径<br>学习要点：<br><br>1.超链接的属性<br><br>2.相对与绝对路径<br><br>3.锚点设置<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中文本元素最重要的一个超链接，探讨它自身的属性以及路径问题。<br><br>一．超链接的属性<br><br>&lt;a&gt;元素属于文本元素，有一些私有属性或者叫局部属性。那么，相对应的还有通用属性或叫做全局属性。这方面的知识，后面会详细探讨。<br><br>属性名称\t说明<br>href\t指定&lt;a&gt;元素所指资源的 URL<br>hreflang\t指向的链接资源所使用的语言<br>media\t说明所链接资源用于哪种设备<br>rel\t说明文档与所链接资源的关系类型<br>target\t指定用以打开所链接资源的浏览环境<br>type\t说明所链接资源的 MIME 类型（比如 text/html）<br>在这几个属性当中，只有 href 和 target 一般比较常用，而 href 是必须要用的。其他几个属性，在&lt;a&gt;元素使用较少，将在 CSS 章节再探讨。<br><br>1.href 属性<br><br>&lt;a href=\"http://www.baidu.com\"&gt;百度&lt;/a&gt;<br>解释：href 是必须属性，否则&lt;a&gt;元素就变成空元素了。如果属性值是 http://开头的 URL，意味着点击跳转到指定的外部网站。<br><br>2.target 属性<br><br>&lt;a href=\"http://www.baidu.com\" target=\"_blank\"&gt;百度&lt;/a&gt;<br>解释：target 属性告诉浏览器希望将所链接的资源显示在哪里。<br><br>属性名称\t说明<br>_blank\t在新窗口或标签页中打开文档<br>_parent\t在父窗框组（frameset）中打开文档<br>_self\t在当前窗口打开文档（默认）<br>_top\t在顶层窗口打开文档<br>这四种最常用的是_blank，新建一个窗口。而_self 是默认，当前窗口打开。_parent和_top 是基于框架页面的，分别表示在父窗口打开和在整个窗口打开。而 HTML5 中，框架基本被废弃，只能使用&lt;iframe&gt;元素，且以后大量结合 JavaScript 和 PHP 等语言配合，框架用的就很少了。<br><br>二．相对与绝对路径<br><br>所谓相对路径，就是相对于链接页面而言的另一个页面的路径。而绝对路径，就是直接从 file:///磁盘符开始的完整路径。我们在同一个目录下做上两个页面，其中一个页面链接到另一个页面。<br><br>1.绝对路径<br><br>&lt;a href=\"file:///D:/备课/HTML5 第一季/code/index2.html\"&gt;index2&lt;/a&gt;<br>解释：首先是 file:///开头，然后是磁盘符，然后是一个个的目录层次，找到相应文件。这种方式最致命的问题是，当整个目录转移到另外的盘符或其他电脑时，目录结构一旦出现任何变化，链接当即失效。<br><br>2.相对路径<br><br>&lt;a href=\"index2.html\"&gt;index2&lt;/a&gt;<br>解释：相对路径的条件是必须文件都在一个磁盘或目录下，如果是在同一个目录下，直接属性值就是被链接的文件名.后缀名。如果在同一个主目录下，有多个子目录层次，那就需要使用目录结构语法。<br><br>3.目录语法<br><br>同一个目录：index2.html 或./index2.html；<br><br>在子目录：xxx/index2.html；<br><br>在孙子目录：xxx/xxx/index2.html；<br><br>在父目录：../index2.html；<br><br>在爷爷目录：../../index2.html；<br><br>三．锚点设置<br><br>超链接也可用来将同一个文档中的另一个元素移入视野。通过属性 id 或 name 实现锚点定位。<br><br>//链接<br><br>&lt;a href=\"#1\"&gt;第一章&lt;/a&gt;<br>&lt;a href=\"#2\"&gt;第二章&lt;/a&gt;<br>&lt;a href=\"#3\"&gt;第三章&lt;/a&gt; //锚点<br>&lt;a name=\"1\"&gt;&lt;/a&gt;&lt;a id=\"3\"&gt;&lt;/a&gt;</p>','2020-12-14 09:45:13'),(5,1,5,'分组元素','<p>第 5 章 分组元素<br>学习要点：<br><br>1.分组元素总汇<br><br>2.分组元素解析<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中分组元素的用法。所谓分组，就是用来组织相关内容的 HTML5 元素，清晰有效的进行归类。<br><br>一．分组元素总汇为了页面的排版需要，HTML5 提供了几种语义的分组元素。<br><br>元素名称\t说明<br>p\t表示段落<br>div\t一个没有任何语义的通用元素，和 span 是对应元素<br>blockquote\t表示引自他出的大段内容<br>pre\t表示其格式应被保留的内容<br>hr\t表示段落级别的主题转换，即水平线<br>ul,ol\t表示无序列表，有序列表<br>li\t用于 ul,ol 元素中的列表项<br>dl,dt,dd\t表示包含一系列术语和定义说明的列表。dt 在 dl 内部表示术语，一般充当标题；dd 在 dl 内部表示定义，一般是内容。<br>figure\t表示图片<br>figcaption\t表示 figure 元素的标题<br>二．分组元素解析<br><br>1.&lt;p&gt;建立段落<br><br>&lt;p&gt; 这是一个段落 &lt;/p&gt;<br>&lt;p&gt; 这也是一个段落 &lt;/p&gt;<br>解释：&lt;p&gt;元素实际作用就是将内部包含的文本形成一个段落；而段落和段落之间保持一定量的空隙。<br><br>2.&lt;div&gt;通用分组<br><br>&lt;div&gt; 这是一个通用分组 &lt;/div&gt;<br>&lt;div&gt; 这是又一个通用分组 &lt;/div&gt;<br>解释：&lt;div&gt;元素在早期的版本中非常常用，通过&lt;div&gt;这种一般性分组元素进行布局。<br><br>而在 HTML5 中，由于语义的缘故，被其他各种文档元素所代替。和&lt;p&gt;段落的区别就是，两段文本的上下空隙是没有的，空隙间隔和&lt;br&gt;换行一样。<br><br>3.&lt;blockquote&gt;引用大段他出内容<br><br>&lt;blockquote&gt; 这是一个大段引自他出内容 &lt;/blockquote&gt;<br>&lt;blockquote&gt; 这是另一个大段引自他出内容 &lt;/blockquote&gt;<br>解释：&lt;blockquote&gt;元素实际作用除了和&lt;p&gt;元素一样，有段落空隙的功能，还包含了首尾缩进的功能。语义上表示，大段的引用他出的内容。<br><br>4.&lt;pre&gt;展现格式化内容<br><br>&lt;pre&gt; #####<br>        #####<br>            #####<br>        #####<br>    ##### &lt;/pre&gt;<br>解释：&lt;pre&gt;元素实际作用就是编辑器怎么排版的，原封不动的展现出来。当然，这种只适合简单的排版，复杂的排版就无法满足要求了。<br><br>5.&lt;hr&gt;添加分隔<br><br>&lt;hr&gt;<br>解释：&lt;hr&gt;元素实际作用就是添加一条分割线，意图呈现上下文主题的分割。<br><br>6.&lt;ul&gt;&lt;li&gt;添加无序列表<br><br>&lt;ul&gt;<br>    &lt;li&gt; 张三 &lt;/li&gt;<br>    &lt;li&gt; 李四 &lt;/li&gt;<br>    &lt;li&gt; 王五 &lt;/li&gt;<br>    &lt;li&gt; 马六 &lt;/li&gt;<br>&lt;/ul&gt;<br>解释：&lt;ul&gt;元素表示无序列表，而&lt;li&gt;元素则是内部的列表项。<br><br>7.&lt;ol&gt;&lt;li&gt;添加有序列表<br><br>&lt;ol&gt;<br>    &lt;li&gt; 张三 &lt;/li&gt;<br>    &lt;li&gt; 李四 &lt;/li&gt;<br>    &lt;li&gt; 王五 &lt;/li&gt;<br>    &lt;li&gt; 马六 &lt;/li&gt;<br>&lt;/ol&gt;<br>解释：&lt;ol&gt;元素表示有序列表，而&lt;li&gt;元素则是内部的列表项。&lt;ol&gt;元素目前支持三种属性<br><br>ol 元素属性<br><br>属性名称\t说明<br>start\t从第几个序列开始统计：&lt;ol start=\"2\"&gt;<br>reversed\t是否倒序排列：&lt;ol reversed&gt;，一半主流浏览器不支持<br>type\t表示列表的编号类型，值分别为：1、a、A、i、I<br>li 元素属性<br><br>属性名称\t说明<br>value\t强行设置某个项目的编号。<br>&lt;li value=\"7\"&gt;王五&lt;/li&gt;<br>8.&lt;dl&gt;&lt;dt&gt;&lt;dd&gt;生成说明列表<br><br>&lt;dl&gt;<br>    &lt;dt&gt; 这是一份文件 &lt;/dt&gt;<br>    &lt;dd&gt; 这里是这份文件的详细内容 1 &lt;/dd&gt;<br>    &lt;dd&gt; 这里是这份文件的详细内容 2 &lt;/dd&gt;<br>&lt;/dl&gt;<br>解释：这三个元素是一个整体，但&lt;dt&gt;或&lt;dd&gt;并非都必须出现。<br><br>9.&lt;figure&gt;&lt;figcaption&gt;使用插图<br><br>&lt;figure&gt;<br>    &lt;figcaption&gt; 这是一张图 &lt;/figcaption&gt;<br>    &lt;img src=\"img.png\"&gt;<br>&lt;/figure&gt;<br>解释：这两个元素一般用于图片的布局。</p>','2020-12-14 09:45:41'),(6,1,6,'表格元素','<p>第 6 章 表格元素<br>学习要点：<br><br>1.表格元素总汇<br><br>2.构建表格解析<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中表格元素的用法。表格的主要用途是以网格的形式显示二维数据。<br><br>一．表格元素总汇<br><br>表格的基本构成最少需要三个元素：&lt;table&gt;、&lt;tr&gt;、&lt;td&gt;，其他的一些作为可选辅助存在。<br><br>元素名称\t说明<br>table\t表示表格<br>thead\t表示标题行<br>tbody\t表示表格主体<br>tfoot\t表示表脚<br>tr\t表示一行单元格<br>th\t表示标题行单元格<br>td\t表示单元格<br>col\t表示一列<br>colgroup\t表示一组列<br>caption\t表示表格标题<br>二．构建表格解析<br><br>1.&lt;table&gt;&lt;tr&gt;&lt;td&gt;构建基础表格<br><br>&lt;table border=\"1\"&gt;<br>    &lt;tr&gt;<br>        &lt;td&gt;张三&lt;/td&gt;<br>        &lt;td&gt;男&lt;/td&gt;<br>        &lt;td&gt;未婚&lt;/td&gt;<br>    &lt;/tr&gt;<br>    &lt;tr&gt;<br>        &lt;td&gt;李四&lt;/td&gt;<br>        &lt;td&gt;女&lt;/td&gt;<br>        &lt;td&gt;已婚&lt;/td&gt;<br>    &lt;/tr&gt;<br>&lt;/table&gt;<br>解释：&lt;table&gt;元素表示一个表格的声明，&lt;tr&gt;元素表示表格的一行，&lt;td&gt;元素表示一个单元格。默认情况下表格是没有边框的，所以，在&lt;table&gt;元素增加一个 border 属性，设置为 1 即可显示边框。<br><br>2.&lt;th&gt;为表格添加标题单元格<br><br>&lt;table border=\"1\" style=\"width:300px;\"&gt;<br>    &lt;tr&gt;<br>        &lt;th&gt;姓名&lt;/th&gt;<br>        &lt;th&gt;性别&lt;/th&gt;<br>        &lt;th&gt;婚姻&lt;/th&gt;<br>    &lt;/tr&gt;<br>    &lt;tr&gt;<br>        &lt;td&gt;张三&lt;/td&gt;<br>        &lt;td&gt;男&lt;/td&gt;<br>        &lt;td&gt;未婚&lt;/td&gt;<br>    &lt;/tr&gt;<br>    &lt;tr&gt;<br>        &lt;td&gt;李四&lt;/td&gt;<br>        &lt;td&gt;女&lt;/td&gt;<br>        &lt;td&gt;已婚&lt;/td&gt;<br>    &lt;/tr&gt;<br>&lt;/table&gt;<br>解释：&lt;th&gt;元素主要是添加标题行的单元格，实际作用就是将内部文字居中且加粗。这里使用了一个通用属性 style，主要用于 CSS 样式设置，以后会涉及到。&lt;th&gt;&lt;td&gt;均属于单元格，包含两个合并属性：colspan、rowspan 等。<br><br>3.&lt;thead&gt;添加表头<br><br>&lt;thead&gt;<br>    &lt;tr&gt;<br>        &lt;th&gt;姓名&lt;/th&gt;<br>        &lt;th&gt;性别&lt;/th&gt;<br>        &lt;th&gt;婚姻&lt;/th&gt;<br>    &lt;/tr&gt;<br>&lt;/thead&gt;<br>解释：&lt;thead&gt;元素就是限制和规范了表格的表头部分。尤其是以后动态生成表头，它的位置是不固定的，使用此元素可以限定在开头位置。<br><br>4.&lt;tfoot&gt;添加表脚<br><br>&lt;tfoot&gt;<br>    &lt;tr&gt;<br>        &lt;td colspan=\"3\"&gt;统计：共两名&lt;/td&gt;<br>    &lt;/tr&gt;<br>&lt;/tfoot&gt;<br>解释：&lt;tfoot&gt;元素为表格生成表脚，限制在表格的底部。<br><br>5.&lt;tbody&gt;添加表主体<br><br>&lt;tbody&gt;<br>    &lt;tr&gt;<br>        &lt;td&gt;张三&lt;/td&gt;<br>        &lt;td&gt;男&lt;/td&gt;<br>        &lt;td&gt;未婚&lt;/td&gt;<br>    &lt;/tr&gt;<br>    &lt;tr&gt;<br>        &lt;td&gt;李四&lt;/td&gt;<br>        &lt;td&gt;女&lt;/td&gt;<br>        &lt;td&gt;已婚&lt;/td&gt;<br>    &lt;/tr&gt;<br>&lt;/tbody&gt;<br>解释：&lt;tbody&gt;元素主要是包含住非表头表脚的主体部分，有助于表格格式的清晰，更加有助于后续 CSS 和 JavaScript 的控制。<br><br>6.&lt;caption&gt;添加表格标题<br><br>&lt;caption&gt;这是一个人物表&lt;/caption&gt;<br>解释：&lt;caption&gt;元素给表格添加一个标题。<br><br>7.&lt;colgroup&gt;设置列<br><br>&lt;colgroup span=\"2\" style=\"background:red;\"&gt;<br>解释：&lt;colgroup&gt;元素是为了处理某个列，span 属性定义处理哪些列。1 表示第一列， 2 表示前两列。如果要单独设置第二列，那么需要声明两个，先处理第一个，将列点移入第二位，再处理第二个即可。<br><br>8.&lt;col&gt;更灵活的设置列<br><br>&lt;colgroup&gt;<br>    &lt;col&gt;<br>    &lt;col style=\"background:red;\" span=\"1\"&gt;<br>&lt;/colgroup&gt;<br>解释：&lt;col&gt;元素表示单独一列，一个表示一列，控制更加灵活。如果设置了 span 则，控制多列。</p>','2020-12-14 09:46:07'),(7,1,7,'文档元素','<p>第 7 章 文档元素<br>学习要点：<br><br>1.文档元素总汇<br><br>2.文档元素解析<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中文档元素，文档元素的主要作用是划分各个不同的内容，让整个布局清晰明快。让整个布局元素具有语义，进一步替代 div。<br><br>一．文档元素总汇文档元素基本没有什么实际作用效果，主要目的是在页面布局时区分各个主题和概念。<br><br>元素名称\t说明<br>h1~h6\t表示标题<br>header\t表示首部<br>footer\t表示尾部<br>nav\t表示有意集中在一起的导航元素<br>section\t表示重要概念或主题<br>article\t表示一段独立的内容<br>address\t表示文档或 article 的联系信息<br>aside\t表示与周边内容少有牵涉的内容<br>hgroup\t将一组标题组织在一起<br>details\t生成一个区域，用户将其展开可以获得更多细节<br>summary\t用在 details 元素中，表示该元素内容的标题或说明<br>二．文档元素解析<br><br>文档元素的大部分标签，是没有任何效果的，完全是为了配合语义使用，以强调它的结构性。只有在后面的章节学习 CSS，配合使用才能起到布局和样式的效果。<br><br>1.&lt;header&gt;表示首部<br><br>&lt;header&gt; 　　这里部分一般是页面头部，包括：LOGO、标题、导航等内容 &lt;/header&gt;<br>解释：&lt;header&gt;元素主要设置页面的标头部分。<br><br>2.&lt;footer&gt;表示尾部<br><br>&lt;footer&gt; 这里是页面的尾部，一般包括：版权声明、友情链接等内容 &lt;/footer&gt;<br>解释：&lt;footer&gt;元素主要设置页面的尾部。<br><br>3.&lt;h1&gt;~&lt;h6&gt;添加标题<br><br>&lt;h1&gt;标题部分&lt;/h1&gt;<br>&lt;h4&gt;小标题部分&lt;/h4&gt;<br>解释：&lt;h1&gt;~&lt;h6&gt;实际作用就是加粗并改变字体大小。用于各种标题文档。<br><br>4.&lt;hgroup&gt;组合标题<br><br>&lt;hgroup&gt;<br>    &lt;h1&gt;标题部分&lt;/h1&gt;<br>    &lt;h4&gt;小标题部分&lt;/h4&gt;<br>&lt;/hgroup&gt;<br>解释：&lt;hgroup&gt;元素的作用就是当多个标题出现，干扰到一对或多个本身需要整合的标题，这是使用此元素包含群组。<br><br>5.&lt;section&gt;文档主题<br><br>&lt;section&gt; 这里一般是存放文档主题内容。 &lt;/section&gt;<br>解释：&lt;section&gt;元素的作用是定义一个文档的主题内容。<br><br>6.&lt;nav&gt;添加导航<br><br>&lt;nav&gt;这里存放文档的导航&lt;/nav&gt;<br>解释：&lt;nav&gt;元素给文档页面添加一个导航。<br><br>7.&lt;article&gt;添加一个独立成篇的文档<br><br>&lt;article&gt;<br>    &lt;header&gt;<br>        &lt;nav&gt;&lt;/nav&gt;<br>    &lt;/header&gt;<br>    &lt;section&gt;&lt;/section&gt;<br>    &lt;footer&gt;&lt;/footer&gt;<br>&lt;/article&gt;<br>解释：&lt;article&gt;元素表示独立成篇的文档，里面可以包含头、尾、主题等一系列内容。在比较大的页面中会使用到，比如一片博文的列表，每篇博文，都有自己的头、尾、主题等内容。和此相似的还有论坛的帖子、用户的评论、新闻等。<br><br>8.&lt;aside&gt;生成注释栏<br><br>&lt;aside&gt;这是是一个注释&lt;/aside&gt;<br>解释：&lt;aside&gt;元素专门为某一段内容进行注释使用。<br><br>9.&lt;address&gt;表示文档或 article 元素的联系信息。<br><br>&lt;address&gt;联系信息&lt;/address&gt;<br>解释：如果是在&lt;body&gt;元素下时，表示整个文档的联系信息。如果是在&lt;article&gt;元素下时，表示其下的联系信息。<br><br>10.&lt;details&gt;元素生成详情区域、&lt;summary&gt;元素在其内部生成说明标签<br><br>解释：由于大多数主流浏览器尚未支持，暂略。</p>','2020-12-14 09:46:31'),(8,1,8,'嵌入元素','<p>第 8 章 嵌入元素<br>学习要点：<br><br>1.嵌入元素总汇<br><br>2.嵌入元素解析<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中嵌入元素，嵌入元素主要功能是把外部的一些资源插入到HTML 中。<br><br>一．嵌入元素总汇<br><br>这里所列出的元素，并非本节课全部涉及到，比如音频 audio、视频 video、以及动态图像 canvas 和媒体资源 source、track 等会在后面章节或季度讲解。<br><br>元素名称\t说明<br>img\t嵌入图片<br>map\t定义客户端分区响应图<br>area\t表示一个用户客户端分区响应图的区域<br>audio\t表示一个音频资源<br>video\t表示一个视频资源<br>iframe\t嵌入一个文档<br>embed\t用插件在 HTML 中嵌入内容<br>canvas\t生成一个动态的图形画布<br>meter\t嵌入数值在许可值范围背景中的图形表示<br>object\t在 HTML 文档中嵌入内容<br>param\t表示将通过 object 元素传递给插件的参数<br>progress\t嵌入目标进展或任务完成情况的图形表示<br>source\t表示媒体资源<br>svg\t表示结构化矢量内容<br>track\t表示媒体的附加轨道（例如字幕）<br>二．嵌入元素解析<br><br>1.&lt;img&gt;**嵌入图像**<br><br>&lt;img src=\"img.png\"&gt;<br>解释：&lt;img&gt;元素主要是插入一张外部的图片，那么图片的路径问题和超链接一致。<br><br>img 的私有属性<br><br>属性名称\t说明<br>src\t嵌入图像的 URL<br>alt\t当图片不加载时显示的备用内容<br>width\t定义图片的长度（单位是像素）<br>height\t定义图片的高度（单位是像素）<br>ismap\t创建服务器端分区响应图<br>usemap\t关联&lt;map&gt;元素<br>&lt;a href=\"index.html\"&gt;<br>&lt;img src=\"img.png\" width=\"339\" height=\"229\" alt=\"风景图\" ismap&gt; &lt;/a&gt;<br>2.&lt;map&gt;**创建分区响应图**<br><br>&lt;img src=\"img.png\" alt=\"风景图\" width=\"339\" height=\"229\" usemap=\"#Map\"&gt; &lt;map name=\"Map\"&gt;<br>&lt;area shape=\"rect\" coords=\"31,28,112,100\" href=\"http://www.baidu.com\" target=\"_blank\" alt=\"方形\"&gt;<br>&lt;area shape=\"circle\" coords=\"187,142,47\" href=\"http://www.google.com\" target=\"_blank\" alt=\"圆形\"&gt;<br>&lt;area shape=\"poly\" coords=\"287,26,240,66,308,112\" href=\"http://www.soso.com\" target=\"_blank\" alt=\"多边形\"&gt;<br>&lt;/map&gt;<br>解释：通过图片中的热点进行超链接，这里我们采用 Dreamweaver 进行操作生成的。<br><br>3.&lt;iframe&gt;**嵌入另一个文档**<br><br>&lt;a href=\"index.html\" target=\"in\"&gt;index&lt;/a&gt; | &lt;a href=\"http://www.baidu.com\" target=\"in\"&gt;百度&lt;/a&gt;<br>&lt;iframe src=\"http://www.ycku.com\" width=\"600\" height=\"500\" name=\"in\"&gt;&lt;/iframe&gt;<br>解释：&lt;iframe&gt;表示内嵌一个 HTML 文档。其下的 src 属性表示初始化时显示的页面， width 和 height 表示内嵌文档的长度和高度，name 表示用于 target 的名称。<br><br>4.&lt;embed&gt;**嵌入插件内容**<br><br>&lt;embed src=\"http://www.tudou.com/v/i4ZZvFwfluI/&amp;bid=05&amp;rpid=50797543&amp;resourceId=50797543_05_05_99/v.swf\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"400\"&gt;&lt;/embed&gt;<br>解释：&lt;embed&gt;元素是扩展浏览器的功能，大部分用于添加对插件的支持。这里添加了一个土豆网的 flash 视频。type 类型表示被插入内容的类型，这里不列出所有，后面如果遇到其他类型的文件，再继续探讨；width 和 height 表示宽高；src 表示文件路径。<br><br>5.&lt;object&gt;**和&lt;param&gt;元素**<br><br>解释：&lt;object&gt;元素和&lt;embed&gt;一样，只不过 object 是 html4 的标准，而 embed 是 html5 的标准。而 object 不但可以嵌入 flash，还可以嵌入图片等其他内容。由于图片、音频、视频、插件都有相应标签元素代替，我们这里暂时不对其详细讲解。<br><br>6.&lt;progress&gt;**显示进度**<br><br>&lt;progress value=\"30\" max=\"100\"&gt;&lt;/progress&gt;<br>解释：&lt;progress&gt;元素可以显示一个进度条，一般通过 JS 控制内部的值。IE9 以及更低版本不支持此元素。<br><br>7.&lt;meter&gt;**显示范围里的值**<br><br>&lt;meter value=\"90\" min=\"10\" max=\"100\" low=\"40\" high=\"80\" optimum=\"60\"&gt;&lt;/meter&gt;<br>解释：&lt;meter&gt;元素显示某个范围内的值。其下的属性包含：min 和 max 表示范围边界， low 表示小于它的值过低，high 表示大于它的值过高，optimum 表示最佳值，但不出现效果。IE 浏览器不支持此元素。</p>','2020-12-14 09:46:52'),(9,1,9,'音频和视频','<p>第 9 章 音频和视频<br>学习要点：<br><br>1.音频和视频概述<br><br>2.video 视频元素<br><br>3.audio 音频元素<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中音频和视频元素，通过这两个原生的媒体元素向 HTML 页面中嵌入音频和视频。<br><br>一．音频和视频概述<br><br>首先，我们要理解两个概念：容器（container）和编解码器(codec)。<br><br>1.**视频容器**<br><br>音频文件或视频文件，都只是一个容器文件。视频文件包含了音频轨道、视频轨道和其他一些元数据。视频播放时，音频轨道和视频轨道是绑定在一起的。元数据包含了视频的封面、标题、子标题、字幕等相关信息。主流视频容器支持的格式为：.avi、.flv、.mp4、.mkv、.ogg、.webm。<br><br>2.**编解码器**<br><br>音频和视频编码/解码是一组算法，用来对一段特定音频或视频进行解码和编码，以便音频和视频能够播放。原始的媒体文件体积非常巨大，如果不对其进行编码，那么数据量是非常惊人的，在互联网上传播则要耗费无法忍受的时间；如果不对其进行解码，就无法将编码后的数据重组为原始的媒体数据。主流的音频编解码器：AAC、MPEG-3、Ogg Voribs，视频编解码器：H.264、VP8、Ogg Theora。<br><br>3.**浏览器支持情况**<br><br>起初，HTML5 规范本来打算指定编解码器，但实施起来极为困难。部分厂商已有自己的标准，不愿实现标准；而有一些编解码器受专利保护，需要支付昂贵费用。最终放弃了统一规范的要求，导致各个浏览器实现自己的标准。<br><br>容器格式\t视频编解码\t音频编解码\tIE9+\tFirefox5+\tChrome13+<br>WebM\tVP8\tVorbis\t×\t√\t√<br>OGG\tTheora\tVorbis\t×\t√\t√<br>MPEG-4\tH.264\tAAC\t√\t×\t疑问？<br>除了上面三款浏览器，还有 Safari5+支持 MPEG-4,Opera11 支持 WebM 和 OGG，通过这组数据，只要备好 MP4 和 OGG 格式的即可，但对于新的高清标准 WebM，当然是非常必要的。因为 WebM 不但清晰度高，而且免费，不受限制许可的使用源码和专利权。<br><br>目前 Chrome 浏览器，为了推广 WebM 格式的视频。声称未来将放弃 H.264 编码的视频，所以有可能在以后的版本中无法播放 MP4 的视频。当然，目前演示的版本还是支持的。<br><br>二．**video** 视频元素<br><br>以往的视频播放，需要借助 Flash 插件才可以实现。但 Flash 插件的不稳定性经常让浏览器导致崩溃，因此很多浏览器或系统厂商开始抛弃它。而取代它的正是 HTML5 的 video 元素。<br><br>属性名称\t说明<br>src\t视频资源的 URL<br>width\t视频宽度<br>height\t视频高度<br>autoplay\t设置后，表示立刻开始播放视频<br>preload\t设置后，表示预先载入视频<br>controls\t设置后，表示显示播放控件<br>loop\t设置后，表示反复播放视频<br>muted\t设置后，表示视频处于静音状态<br>poster\t指定视频数据载入时显示的图片<br>1.**嵌入一个 WebM视频**<br><br>&lt;video src=\"test.webm\" width=\"800\" height=\"600\"&gt;&lt;/video&gt;<br>解释：&lt;video&gt;插入一个视频，主流的视频为.webm，.mp4，.ogg 等。src 表示资源<br><br>URL；width 表示宽度；height 表示高度。<br><br>2.**附加一些属性**<br><br>&lt;video src=\"test.webm\" width=\"800\" height=\"600\" autoplay controls loop muted&gt;&lt;/video&gt;<br>解释：autoplay 表示自动开始播放；controls 表示显示播放控件；loop 表示循环播放；muted 表示静音。<br><br>3.**预加载设置**<br><br>&lt;video src=\"http://li.cc/test.webm\" width=\"800\" height=\"600\" controls<br>preload=\"none\"&gt;&lt;/video&gt;<br>解释：preload 属性有三个值：none 表示播放器什么都不加载；metadata 表示播放之前只能加载元数据（宽高、第一帧画面等信息）；auto 表示请求浏览器尽快下载整个视频。<br><br>4.**使用预览图**<br><br>&lt;video src=\"http://li.cc/test.webm\" width=\"800\" height=\"600\" controls poster=\"img.png\"&gt;&lt;/video&gt;<br>解释：poster 属性表示在视频的第一帧，做一张预览图。<br><br>5.**兼容多个浏览器**<br><br>&lt;video width=\"800\" height=\"600\" controls poster=\"img.png\"&gt;<br>    &lt;source src=\"test.webm\"&gt;<br>    &lt;source src=\"test.mp4\"&gt;<br>    &lt;source src=\"test.ogg\"&gt;<br>    &lt;object&gt;这里引入 flash 播放器实现 IE9 以下，但没必要了&lt;/object&gt;<br>&lt;/video&gt;<br>解释：通过&lt;source&gt;元素引入多种格式的视频，让更多的浏览器保持兼容。<br><br>二．**audio** 音频元素<br><br>和 video 元素一样，audio 元素用于嵌入音频内容，而音频元素的属性和视频元素类似。音频的支持度和视频类似，使用&lt;source&gt;元素引入多种格式兼容即可。主流的音频格式有：.mp3，.m4a，.ogg，.wav。<br><br>属性名称\t说明<br>src\t视频资源的 URL<br>autoplay\t设置后，表示立刻开始播放视频<br>preload\t设置后，表示预先载入视频<br>controls\t设置后，表示显示播放控件<br>1.**嵌入一个音频**<br><br>&lt;audio src=\"test.mp3\" controls autoplay&gt;&lt;/audio&gt;<br>解释：和嵌入视频一个道理。<br><br>2.**兼容多个浏览器**<br><br>&lt;audio controls&gt;<br>    &lt;source src=\"test.mp3\"&gt;<br>    &lt;source src=\"test.m4a\"&gt;<br>    &lt;source src=\"test.wav\"&gt;<br>&lt;/audio&gt;<br>解释：略。<br><br>PS：更多设计到 API 的 JavaScript 控制，将在以后的基于 JavaScript 基础后讲解。</p>','2020-12-14 09:47:17'),(10,1,10,'表单元素[上]','<p>第 10 章 表单元素[上]<br>学习要点：<br><br>1.表单元素总汇<br><br>2.表单元素解析<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中表单元素，表单元素用于获取用户的输入数据。<br><br>一．表单元素总汇<br><br>在 HTML5 的表单中，提供了各种可供用户输入的表单控件。<br><br>元素名称\t说明<br>form\t表示 HTML 表单<br>input\t表示用来收集用户输入数据的控件<br>textarea\t表示可以输入多行文本的控件<br>select\t表示用来提供一组固定的选项<br>option\t表示提供提供一个选项<br>optgroup\t表示一组相关的 option 元素<br>button\t表示可用来提交或重置的表单按钮（或一般按钮）<br>datalist\t定义一组提供给用户的建议值<br>fieldset\t表示一组表单元素<br>legend\t表示 fieldset 元素的说明性标签<br>label\t表示表单元素的说明标签<br>output\t表示计算结果<br>二．表单元素解析<br><br>1.&lt;form&gt;**定义表单**<br><br>&lt;form method=\"post\" action=\"http://www.haosou.com/\"&gt;<br>　　&lt;button&gt;提交&lt;/button&gt;<br>&lt;/form&gt;<br>解释：&lt;form&gt;元素主要是定义本身是一组表单。<br><br>元素名称\t说明<br>action\t表示表单提交的页面<br>method\t表示表单的请求方式：有 POST 和 GET 两种，默认 GET<br>enctype\t表示浏览器对发送给服务器的数据所采用的编码格式。有三种：application/x-www-form-urlencoded（默认编码，不能将文件上传到服务器）、multipart/form-data（用于上传文件到服务器）、text/plain（未规范的编码，不建议使用，不同浏览器理解不同）<br>name\t设置表单名称，以便程序调用<br>target\t设置提交时的目标位置：_blank、_parent、_self、_top<br>autocomplete\t设置浏览器记住用户输入的数据，实现自动完成表单。默认为 on 自动完成，如果不想自动完成则设置 off。<br>novalidate\t设置是否执行客户端数据有效性检查，后面课程讲解。<br>//使用 get 提交数据<br><br>method=\"get\"<br>//丧失自动提示功能<br><br>autocomplete=\"off\"<br>//使用_blank 新建目标<br><br>target=\"_blank\"<br>2.&lt;input&gt;**表示用户输入数据**<br><br>&lt;input name=\"user\"&gt;<br>解释：&lt;input&gt;元素默认情况会出现一个单行文本框，有五个属性。<br><br>属性名称\t说明<br>autofocus\t让光标聚焦在某个 input 元素上，让用户直接输入<br>disabled\t禁用 input 元素<br>autocomplete\t单独设置 input 元素的自动完成功能<br>form\t让表单外的元素和指定的表单挂钩提交<br>type\tinput 元素的类型，内容较多，将在下节课展开讲解<br>name\t定义 input 元素的名称，以便接收到相应的值<br>//聚焦光标<br><br>&lt;input name=\"user\" autofocus&gt;<br>//禁用 input<br><br>&lt;input name=\"user\" disabled&gt;<br>//禁止自动完成<br><br>&lt;input name=\"user\" autocomplete=\"off\"&gt;<br>//表单外的 input<br><br>&lt;form method=\"get\" id=\"register\"&gt; ... &lt;/form&gt;<br>&lt;input name=\"email\" form=\"register\"&gt;<br>3.&lt;label&gt;**添加说明标签**<br><br>&lt;p&gt;&lt;label for=\"user\"&gt;用户名：&lt;input id=\"user\" name=\"user\"&gt;&lt;/label&gt;&lt;/p&gt;<br>解释：&lt;label&gt;元素可以关联 input，让用户体验更好。且更加容易设置 CSS 样式。<br><br>4.&lt;fieldset&gt;**对表单进行编组**<br><br>&lt;fieldset&gt;...&lt;/fieldset&gt;<br>解释：&lt;fieldset&gt;元素可以将一些表单元素组织在一起，形成一个整体。<br><br>属性名称\t说明<br>name\t给分组定义一个名称<br>form\t让表单外的分组与表单挂钩<br>disabled\t禁用分组内的表单<br>5.&lt;legend&gt;**添加分组说明标签**<br><br>&lt;fieldset&gt;<br>    &lt;legend&gt; 注册表单 &lt;/legend&gt;<br>&lt;/fieldset&gt;<br>解释：&lt;legend&gt;元素给分组加上一个标题。<br><br>6.&lt;button&gt;**添加按钮**<br><br>&lt;button type=\"submit\"&gt;&lt;/button&gt;<br>解释：&lt;button&gt;元素添加一个按钮，type 属性有如下几个值：<br><br>值名称\t说明<br>submit\t表示按钮的作用是提交表单，默认<br>reset\t表示按钮的作用是重置表单<br>button\t表示按钮为一般性按钮，没有任何作用<br>//提交表单<br><br>&lt;button type=\"submit\"&gt;提交&lt;/button&gt;<br>//重置表单<br><br>&lt;button type=\"reset\"&gt;重置&lt;/button&gt;<br>//普通按钮<br><br>&lt;button type=\"button\"&gt;按钮&lt;/button&gt;<br>对于 type 属性为 submit 时，按钮还会提供额外的属性。<br><br>属性名称\t说明<br>form\t指定按钮关联的表单<br>formaction\t覆盖 form 元素的 action 属性<br>formenctype\t覆盖 form 元素的 enctype 属性<br>formmethod\t覆盖 form 元素的 method 属性<br>formtarget\t覆盖 form 元素的 target 属性<br>formnovalidate\t覆盖 form 元素的 novalidate 属性<br>//表单外关联提交<br><br>&lt;button type=\"submit\" form=\"register\"&gt;提交&lt;/button&gt;</p>','2020-12-14 09:48:06'),(11,1,11,'表单元素[中]','<p>第 10 章 表单元素[中]<br>学习要点：<br><br>1.type 属性总汇<br><br>2.type 属性解析<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中表单中 input 元素的 type 属性，根据不同的值来显示不同的输入框。<br><br>一．**type** 属性总汇<br><br>input 元素可以用来生成一个供用户输入数据的简单文本框。在默认的情况下，什么样的数据均可以输入。而通过不同的属性值，可以限制输入的内容。<br><br>属性名称\t说明<br>text\t一个单行文本框，默认行为<br>password\t隐藏字符的密码框<br>search\t搜索框，在某些浏览器键入内容会出现叉标记取消<br>submit、reset、button\t生成一个提交按钮、重置按钮、普通按钮<br>number、range\t只能输入数值的框；只能输入在一个数值范围的框<br>checkbox、radio\t复选框，用户勾选框；单选框，只能在几个中选一个<br>image、color\t生成一个图片按钮，颜色代码按钮<br>email、tel、url\t生成一个检测电子邮件、号码、网址的文本框<br>date、month、time、week、datetime、datetime-local\t获取日期和时间<br>hidden\t生成一个隐藏控件<br>file\t生成一个上传控件<br>二．**input** 元素解析<br><br>1.type 为 text 值时**<br><br>&lt;input type=\"text\"&gt;<br>解释：当 type 值为 text 时，呈现的就是一个可以输入任意字符的文本框，这也是默认行为。并且，还提供了一些额外的属性。<br><br>属性名称\t说明<br>list\t指定为文本框提供建议值的 datalist 元素，其值为datalist 元素的 id 值<br>maxlength\t设置文本框最大字符长度<br>pattern\t用于输入验证的正则表达式<br>placeholder\t输入字符的提示<br>readonly\t文本框处于只读状态<br>disabled\t文本框处于禁用状态<br>size\t设置文本框宽度<br>value\t设置文本框初始值<br>required\t表明用户必须输入一个值，否则无法通过输入验证<br>//设置文本框长度<br><br>&lt;input type=\"text\" size=\"50\"&gt;<br>//设置文本框输入字符长度<br><br>&lt;input type=\"text\" maxlength=\"10\"&gt;<br>//设置文本框的初始值<br><br>&lt;input type=\"text\" value=\"初始值\"&gt;<br>//设置文本框输入提示<br><br>&lt;input type=\"text\" placeholder=\"请输入内容\"&gt;<br>//设置文本提供的建议值<br><br>&lt;input list=\"footlist\"&gt;<br>&lt;datalist id=\"footlist\"&gt;<br>    &lt;option value=\"苹果\"&gt;苹果&lt;/option&gt;<br>    &lt;option value=\"桔子\"&gt;桔子&lt;/option&gt;<br>    &lt;option value=\"香蕉\" label=\"香蕉\"&gt;<br>    &lt;option value=\"梨子\"&gt;<br>&lt;/datalist&gt;<br>//设置文本框内容为只读，可以提交数据<br><br>&lt;input type=\"text\" readonly&gt;<br>//设置文本框内容不可用，不可以提交数据<br><br>&lt;input type=\"text\" disabled&gt;<br>2.type**为** password值时<br><br>&lt;input type=\"password\"&gt;<br>解释：当 type 值为 password 时，一般用于密码框的输入，所有的字符都会显示星号。密码框也有一些额外属性。<br><br>属性名称\t说明<br>maxlength\t设置密码框最大字符长度<br>pattern\t用于输入验证的正则表达式<br>placeholder\t输入密码的提示<br>readonly\t密码框处于只读状态<br>disabled\t文本框处于禁用状态<br>size\t设置密码框宽度<br>value\t设置密码框初始值<br>required\t表明用户必须输入同一个值<br>这里除了正则和验证需要放在下一节，其余和文本框一致。<br><br>3.type**为** search时<br><br>&lt;input type=\"search\"&gt;<br>解释：和文本框一致，在除 Firefox 浏览器的其他现代浏览器，会显示一个叉来取消搜索内容。额外属性也和 text 一致。<br><br>4.type**为** number、range时<br><br>&lt;input type=\"number\"&gt;<br>&lt;input type=\"range\"&gt;<br>解释：只限输入数字的文本框，不同浏览器可能显示方式不同。生成一个数值范围文本框，只是样式是拖动式。额外属性如下：<br><br>属性名称\t说明<br>list\t指定为文本框提供建议值的 datalist 元素，其值为datalist 元素的 id 值<br>min\t设置可接受的最小值<br>max\t设定可接受的最大值<br>readonly\t设置文本框内容只读<br>required\t表明用户必须输入一个值，否则无法通过输入验证<br>step\t指定上下调节值的步长<br>value\t指定初始值<br>//范围和步长<br><br>&lt;input type=\"number\" step=\"2\" min=\"10\" max=\"100\"&gt;<br>5.type**为** date系列时<br><br>&lt;input type=\"date\"&gt;<br>&lt;input type=\"month\"&gt;<br>&lt;input type=\"time\"&gt;<br>&lt;input type=\"week\"&gt;<br>&lt;input type=\"datetime\"&gt;<br>&lt;input type=\"datetime-local\"&gt;<br>解释：实现文本框可以获取日期和时间的值，但支持的浏览器不完整。我们测试 Chrome 和 Opera 支持，其他浏览器尚未支持。所以，在获取日期和时间，目前还是推荐使用 jQuery 等前端库来实现日历功能。额外属性和 number 一致。<br><br>6.type**为** color时<br><br>&lt;input type=\"color\"&gt;<br>解释：实现文本框获取颜色的功能，最新的现代浏览器测试后 IE 不支持，其余的都能显示一个颜色对话框提供选择。<br><br>7.type**为** checkbox、radio时<br><br>音乐&lt;input type=\"checkbox\"&gt; 体育&lt;input type=\"checkbox\"&gt;<br>&lt;input type=\"radio\" name=\"sex\" value=\"男\"&gt; 男 &lt;input type=\"radio\" name=\"sex\" value=\"女\"&gt; 女<br>解释：生成一个获取布尔值的复选框或固定选项的单选框。额外属性如下：<br><br>属性名称\t说明<br>checked\t设置复选框、单选框是否为勾选状态<br>required\t表示用户必须勾选，否则无法通过验证<br>value\t设置复选框、单选框勾选状态时提交的数据。默认为 on<br>//默认勾选，默认值为 1<br><br>&lt;input type=\"checkbox\" name=\"music\" checked value=\"1\"&gt;<br>8.type**为** submit、reset和** button**时<br><br>&lt;input type=\"submit\"&gt;<br>解释：生成一个按钮，三种模式：提交、重置和一般按钮，和&lt;button&gt;元素相同。<br><br>值名称\t说明<br>submit\t生成一个提交按钮<br>reset\t生成一个重置按钮<br>button\t生成一个普通按钮<br>如果是 submit 时，还提供了和&lt;button&gt;元素一样的额外属性：formaction、formenctype、formmethod、formtarget 和 formnovalidate。<br><br>9.type**为** image时<br><br>&lt;input type=\"image\" src=\"img.png\"&gt;<br>解释：生成一个图片按钮，点击图片就实现提交功能，并且传送了分区响应数据。图片按钮也提供了一些额外属性。<br><br>属性名称\t说明<br>src\t指定要显示图像的 URL<br>alt\t提供图片的文字说明<br>width\t图像的长度<br>height\t图像的高度<br>提交额外属性\tformaction、formenctype、formmethod、formtarget和 formnovalidate。<br>10.type**为** email、tel、url时<br><br>&lt;input type=\"email\"&gt;<br>&lt;input type=\"tel\"&gt;<br>&lt;input type=\"url\"&gt;<br>解释：email 为电子邮件格式、tel 为电话格式、url 为网址格式。额外属性和 text 一致。但对于这几种类型，浏览器支持是不同的。email 支持比较好，现在浏览器都支持格式验证；tel 基本不支持；url 支持一般，部分浏览器只要检测到 http://就能通过。<br><br>11.type**为** hidden时<br><br>&lt;input type=\"hidden\"&gt;<br>解释：生成一个隐藏控件，一般用于表单提交时关联主键 ID 提交，而这个数据作为隐藏存在。<br><br>12.type**为** file时<br><br>&lt;input type=\"file\"&gt;<br>解释：生成一个文件上传控件，用于文件的上传。额外提供了一些属性：<br><br>属性名称\t说明<br>accept\t指定接受的 MIME 类型<br>required\t表明用户必须提供一个值，否则无法通过验证<br>accept=\"image/gif, image/jpeg, image/png\"</p>','2020-12-14 09:48:40'),(12,1,12,'表单元素[下]','<p>第 10 章 表单元素[下]<br>学习要点：<br><br>1.其他元素<br><br>2.输入验证<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中表单中剩余的其他元素，然后重点了解一下表单的输入验证功能。<br><br>一．其他元素<br><br>表单元素还剩下几个元素没有讲解，包括下拉框列表 select、多行文本框 textarea、和 output 计算结果元素。<br><br>元素名称\t说明<br>select\t生成一个下拉列表进行选择<br>optgroup\t对 select 元素进行编组<br>option\tselect 元素中的项目<br>textarea\t生成一个多行文本框<br>output\t表示计算结果<br>1.**生成下拉列表**<br><br>&lt;select name=\"fruit\"&gt;<br>　　&lt;option value=\"1\"&gt;苹果&lt;/option&gt;<br>　　&lt;option value=\"2\"&gt;橘子&lt;/option&gt;<br>　　&lt;option value=\"3\"&gt;香蕉&lt;/option&gt;<br>&lt;/select&gt;<br>解释：&lt;select&gt;下拉列表元素至少包含一个&lt;option&gt;子元素，才能形成有效的选项列表。&lt;select&gt;元素包含两个子元素&lt;option&gt;项目元素和&lt;optgroup&gt;分组元素，还包含了一些额外属性。<br><br>属性名称\t说明<br>name\t设定提交时的名称<br>disabled\t将下拉列表禁用<br>form\t将表单外的下拉列表与某个表单挂钩<br>size\t设置下拉列表的高度<br>multiple\t设置是否可以多选<br>autofocus\t获取焦点<br>required\t选择验证，设置后必须选择才能通过<br>//设置高度并实现多选<br><br>&lt;select name=\"fruit\" size=\"30\" multiple&gt;<br>//默认首选<br><br>&lt;option value=\"2\" selected&gt;橘子&lt;/option&gt;<br>//使用 optgroup 进行分组，label 为分组名称，disabled 可以禁用分组<br><br>&lt;optgroup label=\"水果类\"&gt;<br>    &lt;option value=\"1\"&gt;苹果&lt;/option&gt;<br>    &lt;option value=\"2\" selected&gt;橘子&lt;/option&gt;<br>    &lt;option value=\"3\" label=\"香蕉\"&gt;香蕉&lt;/option&gt;<br>&lt;/optgroup&gt;<br>2.**多行文本框**<br><br>&lt;textarea name=\"content\"&gt;请留下您的建议！ &lt;/textarea&gt;<br>解释：生成一个可变更大小的多行文本框。属性如下：<br><br>属性名称\t说明<br>name\t设定提交时的名称<br>form\t将表单外的多行文本框与某个表单挂钩<br>readonly\t设置多行文本框只读<br>disabled\t将多行文本框禁用<br>maxlength\t设置最大可输入的字符长度<br>autofocus\t获取焦点<br>placeholder\t设置输入时的提示信息<br>rows\t设置行数<br>cols\t设置列数<br>wrap\t设置是否插入换行符，有 soft 和 hard 两种<br>required\t设置必须输入值，否则无法通过验证<br>//设置行高和列宽，设置插入换行符<br><br>&lt;textarea name=\"content\" rows=\"20\" cols=\"30\" wrap=\"hard\"&gt;&lt;/textarea&gt;<br>3.计算结果<br><br>&lt;form oninput=\"res.value = num1.valueAsNumber * num2.valueAsNumber\"&gt;<br>    &lt;input type=\"number\" id=\"num1\"&gt; x &lt;input type=\"number\" id=\"num2\"&gt;<br>    &lt;output for=\"num1 num2\" name=\"res\"&gt;<br>&lt;/form&gt;<br>解释：output 就是计算两个文本框之间的值，其实就是内嵌了 JavaScript 功能。<br><br>二．输入验证<br><br>HTML5 对表单提供了输入验证检查方式，但这种验证还是比较简陋的，并且不同的浏览器支持的成熟度还不同。在大部分情况下，可能还是要借助 jQuery 等前端库来实现丰富的验证功能和显示效果。<br><br>//必须填写一个值<br><br>&lt;input type=\"text\" required&gt;<br>//限定在某一个范围内<br><br>&lt;input type=\"number\" min=\"10\" max=\"100\"&gt;<br>//使用正则表达式<br><br>&lt;input type=\"text\" placeholder=\"请输入区号+座机\" required pattern=\"^[\\d]{2,4}\\-[\\d]{6,8}$\"&gt;<br>//禁止表单验证<br><br>&lt;form action=\"http://li.cc\" novalidate&gt;</p>','2020-12-14 09:49:16'),(13,1,13,'CSS 选择器[上]','<p>第 13 章 CSS 选择器[上]<br>学习要点：<br><br>1.选择器总汇<br><br>2.基本选择器<br><br>3.复合选择器<br><br>4.伪元素选择器<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中 CSS 选择器，通过选择器定位到想要设置样式的元素。目前 CSS 选择器的版本已经升级至第三代，即 CSS3 选择器。CSS3 选择器提供了更多、更丰富的选择器方式，主要分为三大类。<br><br>一．选择器总汇<br><br>本节课主要涉及到三种选择器：基本选择器、复合选择器和伪元素选择器，具体如下：<br><br>选择器\t名称\t说明\tCSS 版本<br>*\t通用选择器\t选择所有元素\t2<br>&lt;type&gt;\t元素选择器\t选择指定类型的元素\t1<br>#&lt;id&gt;\tid 选择器\t选择指定 id 属性的元素\t1<br>.&lt;class&gt;\tclass 选择器\t选择指定 class 属性的元素\t1<br>[attr]系列\t属性选择器\t选择指定 attr 属性的元素\t2 ~ 3<br>s1,s2,s3…\t分组选择器\t选择多个选择器的元素\t1<br>s1 s2\t后代选择器\t选择指定选择器的后代元素\t1<br>s1 &gt; s2\t子选择器\t选择指定选择器的子元素\t2<br>s1 + s2\t相邻兄弟选择器\t选择指定选择器相邻的元素\t2<br>s1 ~ s2\t普通兄弟选择器\t选择指定选择器后面的元素\t3<br>::first-line\t伪元素选择器\t选择块级元素文本的首行\t1<br>::first-letter\t伪元素选择器\t选择块级元素文本的首字母\t1<br>::before\t伪元素选择器\t选择元素之前插入内容\t2<br>::after\t伪元素选择器\t选择元素之后插入内容\t2<br>二．基本选择器<br><br>使用简单且频率高的一些选择器归类为基本选择器。<br><br>1.**通用选择器**<br><br>* { border: 1px solid red;<br>}<br>解释：“*”号选择器是通用选择器，功能是匹配所有 html 元素的选择器包括&lt;html&gt;和&lt;body&gt;标签。可以使用如下元素标记测试效果：<br><br>&lt;p&gt;段落&lt;/p&gt;<br>&lt;b&gt;加粗&lt;/b&gt;<br>&lt;span&gt;无&lt;/span&gt;<br>通用选择器会将所有元素匹配并配置样式，这是把双刃剑，好处就是非常方便，坏处就是将不必要的元素也配置了。目前为止，还不存在所有元素都必须配置的样式，所以，一般来说，不常用。<br><br>2.**元素选择器**<br><br>p { color: red;<br>}<br>&lt;p&gt;段落&lt;/p&gt;<br>解释：直接使用元素名称作为选择器名即可。<br><br>3.ID**选择器**<br><br>#abc { font-size: 20px;<br>}<br>&lt;p id=\"abc\"&gt;段落&lt;/p&gt;<br>解释：通过对元素设置全局属性 id，然后使用#id 值来选择页面唯一元素。<br><br>4.**类选择器**<br><br>.abc { border: 1px solid red;<br>}<br>&lt;b class=\"abc\"&gt;加粗&lt;/b&gt;<br>&lt;span class=\"abc\"&gt;无&lt;/span&gt;<br>解释：通过对元素设置全局属性 class，然后使用.class 值选择页面一个或多个元素。<br><br>b.abc { border: 1px solid red;<br>}<br>解释：也可以使用“元素.class 值”的形式，限定某种类型的元素。<br><br>&lt;span class=\"abc edf\"&gt;无&lt;/span&gt;<br>解释：类选择器还可以调用多个样式，中间用空格隔开进行层叠。<br><br>5.**属性选择器**<br><br>//所需 CSS2 版本<br><br>[href] { color: orange;<br>}<br>解释：属性选择器，直接通过两个中括号里面包含属性名即可。当然，还有更多扩展的属性选择器。<br><br>//所需 CSS2 版本<br><br>[type=\"password\"] { border: 1px solid red;<br>}<br>解释：匹配属性值的属性选择器。<br><br>//所需版本 CSS3<br><br>[href^=\"http\"] { color: orange;<br>}<br>解释：属性值开头匹配的属性选择器。<br><br>//所需版本 CSS3<br><br>[href$=\".com\"] { color: orange;<br>}<br>解释：属性值结尾匹配的属性选择器。<br><br>//所需版本 CSS3<br><br>[href*=\"baidu\"] { color: orange;<br>}<br>解释：属性值包含指定字符的属性选择器。<br><br>//所需版本 CSS2<br><br>[class~=\"edf\"] { font-size: 50px;<br>}<br>解释：属性值具有多个值时，匹配其中一个值的属性选择器。<br><br>//所需版本 CSS2<br><br>[lang|=\"en\"] { color: red;<br>}<br>解释：属性值具有多个值且使用“-”号连接符分割的其中一个值的属性选择器。比如<br><br>&lt;i lang=\"en-us\"&gt;HTML5&lt;/i&gt;<br>二．复合选择器<br><br>将不同的选择器进行组合形成新的特定匹配，我们称为复合选择器。<br><br>1.**分组选择器**<br><br>p,b,i,span { color: red;<br>}<br>解释：将多个选择器通过逗号分割，同时设置一组样式。当然，不但可以分组元素选择器，还可以使用 ID 选择器、类选择器、属性选择器混合使用。<br><br>2.**后代选择器**<br><br>p b { color: red;<br>}<br>解释：选择&lt;p&gt;元素内部所有&lt;b&gt;元素。不在乎&lt;b&gt;的层次深度。当然，后代选择器也可以混合使用 ID 选择器、类选择器、属性选择器。<br><br>3.**子选择器**<br><br>ul &gt; li { border: 1px solid red;<br>}<br>&lt;ul&gt;<br>    &lt;li&gt; 我是儿子 &lt;ol&gt;<br>            &lt;li&gt; 我是孙子 &lt;/li&gt;<br>            &lt;li&gt; 我是孙子 &lt;/li&gt;<br>        &lt;/ol&gt;<br>    &lt;/li&gt;<br>    &lt;li&gt; 我是儿子 &lt;/li&gt;<br>    &lt;li&gt; 我是儿子 &lt;/li&gt;<br>&lt;/ul&gt;<br>解释：子选择器类似与后代选择器，而最大的区别就是子选择器只能选择父元素向下一级的元素，不可以再往下选择。<br><br>4.**相邻兄弟选择器**<br><br>p + b { color: red;<br>}<br>解释：相邻兄弟选择器匹配和第一个元素相邻的第二个元素。<br><br>5.**普通兄弟选择器**<br><br>p ~ b { color: red;<br>}<br>解释：普通兄弟选择器匹配和第一个元素后面的所有元素。<br><br>三．伪元素选择器<br><br>伪选择器分为两种第一种是下节伪类选择器，还有一种就是伪元素选择器。这两种选择器特性上比较容易混淆，在 CSS3 中为了区分，伪元素前置两个冒号（::），伪类前置一个冒号（:）。<br><br>1.::first-line**块级首行**<br><br>::first-line { color: red;<br>}<br>解释：块级元素比如&lt;p&gt;、&lt;div&gt;等的首行文本被选定。如果想限定某种元素，可以加上前置 p::first-line。<br><br>2.::first-letter**块级首字母**<br><br>::first-letter { color: red;<br>}<br>解释：块级元素的首行字母。<br><br>3.::before**文本前插入**<br><br>a::before { content: \'点击-\';<br>}<br>解释：在文本前插入内容。<br><br>4.::after**文本后插入**<br><br>a::before { content: \'-请进\';<br>}<br>解释：在文本后插入内容。</p>','2020-12-14 09:50:07'),(14,1,14,'CSS 颜色与度量单位','<p>第 14 章 CSS 颜色与度量单位<br>学习要点：<br><br>1.颜色表方案<br><br>2.度量单位<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中 CSS 颜色和度量单位等问题，包括颜色的选取方式、相对长度和绝对长度等。<br><br>一．颜色表方案<br><br>颜色的表现形式主要有三种方式：颜色名称、十六进制代码和十进制代码。<br><br>p { color: red;<br>}<br>解释：这是将一个段落内的文字设置为红色，采用的是英文颜色名称。问题是，其他各种颜色我们将如何设置？<br><br>在古老的 HTML4 时，颜色名称只有 16 种。<br><br>颜色名称\t十六进制代码\t十进制代码\t含义<br>black\t#000000\t0,0,0\t黑色<br>silver\t#c0c0c0\t192,192,192\t银灰色<br>gray\t#808080\t128,128,128\t灰色<br>white\t#ffffff\t255,255,255\t白色<br>maroon\t#800000\t128,0,0\t栗色<br>red\t#ff0000\t255,0,0\t红色<br>purple\t#800080\t128,0,128\t紫色<br>fuchsia\t#ff00ff\t255,0,255\t紫红<br>green\t#008000\t0,128,0\t绿色<br>lime\t#00ff00\t0,255,0\t闪光绿<br>olive\t#808000\t128,128,0\t橄榄色<br>yellow\t#ffff00\t255,255,0\t黄色<br>navy\t#000080\t0,0,128\t海军蓝<br>blue\t#0000ff\t0,0,255\t蓝色<br>teal\t#008080\t0,128,128\t水鸭色<br>aqua\t#00ffff\t0,255,255\t浅绿色<br>当然，目前颜色名称远远不止这些，可以搜索更多的 HTML 颜色表或 CSS 颜色表查阅。这里提供一些页面如下：<br><br>http://xh.5156edu.com/page/z1015m9220j18754.html<br><br>http://finle.me/colors.html<br><br>http://www.w3school.com.cn/tags/html_ref_colornames.asp<br><br>在上面的表格中，我们也罗列出对应的十六进制和十进制颜色表示方法。使用方法如下：<br><br>//红色的十六进制方案<br><br>p { color: #ff0000;<br>}<br>十进制表示方法就比较多样化，有四种方案：<br><br>函数\t说明\t示例<br>rgb(r,g,b)\t用 RGB 模型表示颜色\trgb(0,128,128)<br>rgba(r,g,b,a)\t同上，a 表示透明度 0~1 之间\trgba(0,128,128,0.5)<br>hsl(h,s,l)\t用 HSL 模型（色相、饱和度和透明度）来表示颜色\thsl(120,100%,30%)<br>hsla(h,s,l,a)\t同上，a 表示透明度 0~1 之间\thsla(120,100%,30%,0.5)<br>p { color: rgb(112, 128, 114); color: rgba(0, 128, 128, 0.5); color: hsl(120, 100%, 30%); color: hsla(120, 100%, 30%, 0.5);<br>}<br>目前又有一个疑问，这些值从哪里获取。除了颜色表之外，想要微调自己的颜色值。我们可以使用 photoshop 等平面设计软件的调色板获取相应的值。<br><br>第 14 章 CSS 颜色与度量单位  - 图1<br><br>二．度量单位<br><br>在 CSS 长度设置中，我们经常需要使用到度量单位，即以什么样的单位设计我们的字体或边框长度。而在 CSS 中长度单位又分为绝对长度和相对长度。<br><br>绝对长度指的是现实世界的度量单位，CSS 支持五种绝对长度单位。<br>绝对长度单位<br>单位标识符\t说明<br>in\t英寸<br>cm\t厘米<br>mm\t毫米<br>pt\t磅<br>pc\tpica<br>相对长度指的是依托其他类型的单位，也是五种。<br>相对长度单位<br>单位标识符\t说明<br>em\t与元素字号挂钩<br>ex\t与元素字体的“x 高度”挂钩<br>rem\t与根元素的字号挂钩<br>px\t像素，与分辨率挂钩<br>%\t相对另一值的百分比<br>下面我们使用一些常用的单位作为演示，而不做演示的基本用不到了。<br><br>//em 相对单位<br><br>p { margin: 0; padding: 0; background: silver; font-size: 15px; height: 2em;<br>}<br>解释：em 是相对单位，与字号大小挂钩，会根据字体大小改变自己的大小，灵活性很高。<br><br>//px 相对单位，绝对特性<br><br>p { margin: 0; padding: 0; background: silver; font-size: 15px; height: 55px;<br>}<br>解释：虽然 px 也是相对单位，但由于和分辨率挂钩，导致他其实就变成一个绝对单位了，自然灵活性没有 em 高，但是使用难度较低，且大量的开发者习惯性使用它。<br><br>//%百分比<br><br>p { margin: 0; padding: 0; background: silver; font-size: 200%; width: 50%;<br>}<br>解释：长度比较好理解，就是挂钩它所在区块的宽度。而 font-size 则是继承到的原始大小的百分比。</p>','2020-12-14 09:50:33'),(15,1,15,'CSS 文本样式[上]','<p>第 15 章 CSS 文本样式[上]<br>学习要点：<br><br>1.字体总汇<br><br>2.字体设置<br><br>3.Web 字体<br><br>主讲教师：李炎恢<br><br>本章主要探讨 HTML5 中 CSS 文本样式，通过文本样式的设置，更改字体的大小、样式以及文本的方位。<br><br>一．字体总汇<br><br>本节课，我们重点了解一下 CSS 文本样式中字体的一些设置方法，样式表如下：<br><br>属性名\t说明\tCSS 版本<br>font-size\t设置字体的大小\t1<br>font-variant\t设置英文字体是否转换为小型大写\t1<br>font-style\t设置字体是否倾斜\t1<br>font-weight\t设置字体是否加粗\t1<br>font-family\t设置 font 字体\t1<br>font\t设置字体样式复合写法\t1 ~ 2<br>@font-face\t设置 Web 字体\t3<br>二．字体设置<br><br>我们可以通过 CSS 文本样式来修改字体的大小、样式以及形态。<br><br>1.font-size<br><br>p { font-size: 50px;<br>}<br>解释：设置文本的大小。属性值如下表：<br><br>第 15 章 CSS 文本样式[上]  - 图1<br><br>第 15 章 CSS 文本样式[上]  - 图2<br><br>//先设置父元素字体大小<br><br>body { font-size: 50px;<br>}<br>//再设置相对小一些<br><br>p { font-size: smaller;<br>}<br>2.font-variant<br><br>p { font-variant: small-caps;<br>}<br>解释：设置字体是否以小型大写字母显示。<br><br>值\t说明<br>normal\t表示如果以小型大写状态，让它恢复小写状态。<br>small-caps\t让小写字母以小型大写字母显示。<br>//先让父元素设置小型大写<br><br>body { font-variant: small-caps;<br>}<br>//让子元素设置恢复小写<br><br>p { font-size: 50px; font-variant: normal;<br>}<br>3.font-style<br><br>p { font-style: italic;<br>}<br>解释：设置字体是否倾斜。<br><br>值\t说明<br>normal\t表示让倾斜状态恢复到正常状态。<br>italic\t表示使用斜体。<br>oblique\t表示让文字倾斜。区别在没有斜体时使用。<br>p { font-weight: bold;<br>}<br>解释：设置字体是否加粗。<br><br>值\t说明<br>normal\t表示让加粗的字体恢复正常。<br>bold\t粗体<br>bolder\t更粗的字体<br>lighter\t轻细的字体<br>100 ~ 900 之间的数字\t600 及之后是加粗，之前不加粗<br>在目前计算机和浏览器显示中，只有 bold 加粗，其他更粗更细，目前体现不出来。<br><br>5.font-family<br><br>p { font-family: 微软雅黑;<br>}<br>解释：使用指定字体名称。这里使用的字体是浏览者系统的字体。有时为了兼容很多浏览者系统的字体，可以做几个后备字体。<br><br>//备用字体<br><br>p { font-family: 楷体,微软雅黑,宋体;<br>}<br>6.font<br><br>p { font: 50px 楷体;<br>}<br>解释：字体设置简写组合方式。格式如下：[是否倾斜|是否加粗|是否转小型大写] 字体大小 字体名称；<br><br>三．**Web** 字体<br><br>虽说可以通过备用字体来解决用户端字体缺失问题，但终究用户体验不好，且不一定备用字体所有用户都安装了。所以，现在 CSS 提供了 Web 字体，也就是服务器端字体。<br><br>//服务器提供字体<br><br>@font-face { font-family: abc; src: url(\'BrushScriptStd.otf\');<br>} p { font-size: 50px; font-family: abc;<br>}<br>英文字体文件比较小，而中文则很大。所以，中文如果想用特殊字体可以使用图片。大面积使用特殊中文字体，就不太建议了。</p>','2020-12-14 09:51:10'),(16,2,1,'HTML/CSS基础','<p>HTML常用标签<br>div<br>div标签用于组合其他HTML元素，本身无实在意义。常用于页面的布局，比如一个展开式的广告页面框架大致如下：<br><br>&lt;body&gt;<br>    &lt;div id=\"wrap-container\"&gt;<br>        &lt;div id=\"collapsed-container\"&gt;&lt;/div&gt;<br>        &lt;div id=\"expanded-container\"&gt;&lt;/div&gt;<br>    &lt;/div&gt;<br>&lt;/body&gt;<br>h1~h6, p, span, strong, em…<br>此类标签用于设置文本，常见的使用方式是填充段落，比如弹出的legal框文字HTML结构如下:<br><br>&lt;div id=\"legal-window\"&gt;<br>    &lt;h4&gt;LEGAL&lt;/h4&gt;<br>    &lt;img id=\"legal-close\" src=\"img/embed/legal-close.png\" alt=\"close window\"&gt;<br>    &lt;p&gt;*Requires a system with Intel&lt;sup&gt;®&lt;/sup&gt; Turbo Boost Technology. Intel&lt;sup&gt;®&lt;/sup&gt; Turbo Boost Technology and Intel&lt;sup&gt;®&lt;/sup&gt; Turbo Boost Technology 2.0 are only available on select Intel&lt;sup&gt;®&lt;/sup&gt; processors. Consult your PC manufacturer. Performance varies depending on hardware, software, and system configuration. For more information, visit http://www.intel.com/go/turbo. Copyright © 2014 Intel Corporation. All rights reserved. Intel, the Intel logo, Intel Core, Look Inside, Intel Inside, and Pentium are trademarks of Intel Corporation in the U.S. and/or other countries. Other names and brands may be claimed as the property of others.&lt;/p&gt;<br>&lt;/div&gt;<br>ul, li, ol, dl, dt, dd<br>此类标签用于设置带有列表内容的，比如导航栏的下拉菜单，多视频的缩略图等：<br><br>&lt;ul class=\"nav-tools-list\"&gt;<br>    &lt;li&gt;<br>        &lt;div&gt;<br>            &lt;img src=\"shoppingtools-icon-1.png\" alt=\"\"&gt;<br>            &lt;span&gt;Build &amp; Price&lt;/span&gt;<br>        &lt;/div&gt;<br>    &lt;/li&gt;<br>    &lt;li&gt;<br>        &lt;div&gt;<br>            &lt;img src=\"shoppingtools-icon-2.png\" alt=\"\"&gt;<br>            &lt;span&gt;Incentives &amp; Offers&lt;/span&gt;<br>        &lt;/div&gt;<br>    &lt;/li&gt;<br>    &lt;li&gt;<br>        &lt;div&gt;<br>            &lt;img src=\"shoppingtools-icon-3.png\" alt=\"\"&gt;<br>            &lt;span&gt;Request a Local Quote&lt;/span&gt;<br>        &lt;/div&gt;<br>    &lt;/li&gt;<br>    &lt;li&gt;<br>        &lt;div&gt;<br>            &lt;img src=\"shoppingtools-icon-4.png\" alt=\"\"&gt;<br>            &lt;span&gt;Search Dealer Inventory&lt;/span&gt;<br>        &lt;/div&gt;<br>    &lt;/li&gt;<br>&lt;/ul&gt;<br>form表单相关<br>页面中涉及到表单时候，需要使用到form相关标签：<br><br>&lt;form name=\"frm-sample\" class=\"frm-sample\" action=\"try\" method=\"post\"&gt;<br>    &lt;input type=\"text\" class=\"form-control\" placeholder=\"Name\"&gt;<br>    &lt;div id=\"status-message\"&gt;&lt;/div&gt;<br>    &lt;div id=\"sample-captcha\"&gt;&lt;/div&gt;<br>    &lt;a id=\"check-is-filled\" class=\"info-btn\"&gt;Check if visualCaptcha is filled&lt;/a&gt;<br>    &lt;button type=\"submit\" name=\"submit-bt\" class=\"submit\"&gt;Submit form&lt;/button&gt;<br>&lt;/form&gt;<br>table表格相关<br>页面中涉及到table结构，需要使用到table相关标签:<br><br>&lt;talbe&gt;&lt;/talbe&gt;<br>img, canvas<br>用于图像显示。一般不直接操作img,canvas元素，而是在它的外层包裹一层父级元素（可以为span,div等)，对父级元素进行操作：<br><br>&lt;div class=\"preload\" data-src=\"CheddarBacon.png\"&gt;<br>    &lt;img src=\"CheddarBacon.png\" alt=\"\"&gt;<br>&lt;/div&gt;<br>&lt;!-- or --&gt;<br>&lt;div id=\"sprite-car\" class=\"cw-sprite sprite-car\" cw-interval=\"30\" cw-loops=\"1\" cw-auto-play=\"false\" cw-texture=\"images/sprites/expanded/car-texture.png\" cw-mapper=\"car\"&gt;<br>    &lt;canvas class=\"cw-renderer\" width=\"460\" height=\"130\"&gt;&lt;/canvas&gt;<br>&lt;/div&gt;<br>a<br>a标签用于打开链接，发送邮件，段落跳转等功能。使用时需要注意阻止掉标签的默认事件。<br><br>链接跳转，常见的关于分享按钮的HTML结构如下：<br><br>&lt;div id=\"shareBox\"&gt;<br>    &lt;ul&gt;<br>        &lt;li id=\"facebook\"&gt;<br>            &lt;a target=\"_blank\" rel=\"nofollow\" data-shareWay=\"facebook\"&gt;<br>                &lt;img alt=\"Post on Facebook\" src=\"img/embed/f4Icon3.png\" alt=\"Facebook\" /&gt;<br>            &lt;/a&gt;<br>        &lt;/li&gt;<br>        &lt;li id=\"twitter\"&gt;<br>            &lt;a target=\"_blank\" rel=\"nofollow\" data-shareWay=\"twitter\"&gt;<br>                &lt;img alt=\"Tweet this\" src=\"img/embed/f4Icon4.png\" /&gt;<br>            &lt;/a&gt;<br>        &lt;/li&gt;<br>        &lt;li id=\"pinterest\"&gt;<br>            &lt;a data-pin-do=\"buttonPin\" data-pin-config=\"none\" target=\"_blank\" rel=\"nofollow\" data-shareWay=\"pinterest\"&gt;<br>                &lt;img alt=\"Pin it\" src=\"img/embed/f4Icon5.png\" /&gt;<br>            &lt;/a&gt;<br>        &lt;/li&gt;<br>        &lt;li id=\"email\"&gt;<br>            &lt;a target=\"_blank\" rel=\"nofollow\" data-shareWay=\"email\"&gt;<br>                &lt;img src=\"img/embed/f4Icon6.png\" /&gt;<br>            &lt;/a&gt;<br>        &lt;/li&gt;<br>    &lt;/ul&gt;<br>    &lt;p&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>发送邮件的代码片段如下：<br><br>&lt;div class=\"button\"&gt;<br>  &lt;a class=\"mail\" data-img=\"mail.png\" href=\"mailto:example@gmail.com?subject=xxx&amp;body=xxx\"&gt;&lt;/a&gt;<br>&lt;/div&gt;<br>段落跳转代码片段如下：<br><br>&lt;div id=\"html5\"&gt;&lt;/div&gt;<br>&lt;a name=\"user-content-html5\" href=\"#html5\" class=\"headeranchor-link\" aria-hidden=\"true\"&gt;&lt;span class=\"headeranchor\"&gt;&lt;/span&gt;&lt;/a&gt;<br>HTML5标签查询</p><p><img src=\"https://static.bookstack.cn/projects/front-end-database/1d5c3df3a6c9d295aec0aa0f73ab7bd6.png\" alt=\"html5-cheat-sheet\"><br></p>','2020-12-14 09:53:43'),(17,2,2,'理解DOM结构','<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;理解DOM结构<br>W3C DOM 标准<br>DOM节点<br>HTML DOM 节点树<br>节点的关系<br>参考资料<br>理解DOM结构<br>DOM: Document Object Module, 文档对象模型。我们通过JavaScript操作页面的元素，进行添加、移动、改变或移除的方法和属性, 都是DOM提供的。<br><br>W3C DOM 标准<br>被分为 3 个不同的部分:<br><br>核心 DOM - 针对任何结构化文档的标准模型<br>XML DOM - 针对 XML 文档的标准模型<br>HTML DOM - 针对 HTML 文档的标准模型<br>DOM节点<br>根据 W3C 的 HTML DOM 标准，HTML 文档中的所有内容都是节点：<br><br>整个文档是一个文档节点<br>每个 HTML 元素是元素节点<br>HTML 元素内的文本是文本节点<br>每个 HTML 属性是属性节点<br>注释是注释节点<br>HTML DOM 节点树<br>HTML文本会被解析为DOM树, 树中的所有节点均可通过 JavaScript 进行访问。所有 HTML 元素（节点）均可被修改，也可以创建或删除节点。</p><p><img src=\"https://static.bookstack.cn/projects/front-end-database/beda02b6cf48622fe20263302f492f33.gif\" alt=\"ct_htmltree\"></p><p>节点的关系<br>父（parent）、子（child）和同胞（sibling）等术语用于描述这些关系。父节点拥有子节点。同级的子节点被称为同胞（兄弟或姐妹）:<br><br>在节点树中，顶端节点被称为根（root）<br>每个节点都有父节点、除了根（它没有父节点）<br>一个节点可拥有任意数量的子<br>同胞是拥有相同父节点的节点</p><p><img src=\"https://static.bookstack.cn/projects/front-end-database/a8e44fab417ed2b7a4beaaf75c884580.gif\" alt=\"dom_navigate\"><br></p><p>参考资料<br>W3C: Document Object Model (DOM) Technical Reports<br>MDN: DOM API<br>浏览器的工作原理：新式网络浏览器幕后揭秘<br>开发者需要了解的WebKit<br>理解WebKit和Chromium: HTML解析和DOM<br>HTML解析原理</p>','2020-12-14 09:56:37'),(18,2,3,'HTML5新增内容','<p>HTML5新增内容<br>与HTML 4的不同之处<br>新增标签<br>移除的标签<br>修改的标签<br>无障碍（Accessibility）<br>新应用程序接口（API）<br>总结<br>参考资料<br>HTML5新增内容<br>HTML5 是对 HTML 标准的第五次修订。其主要的目标是将互联网语义化，以便更好地被人类和机器阅读，并同时提供更好地支持各种媒体的嵌入。HTML5 的语法是向后兼容的。现在国内普遍说的 H5 是包括了 CSS3，JavaScript 的说法（严格意义上说，这么叫并不合适，但是已经这么叫开了，就将错就错了）。<br><br>与HTML 4的不同之处<br>文件类型声明（）仅有一型：。<br>新的解析顺序：不再基于SGML。<br>新的元素：section, video, progress, nav, meter, time, aside, canvas, command, datalist, details, embed, figcaption, figure, footer, header, hgroup, keygen, mark, output, rp, rt, ruby, source, summary, wbr。<br>input元素的新类型：date, email, url等等。<br>新的属性：ping（用于a与area）, charset（用于meta）, async（用于script）。<br>全域属性：id, tabindex, repeat。<br>新的全域属性：contenteditable, contextmenu, draggable, dropzone, hidden, spellcheck。<br>移除元素：acronym, applet, basefont, big, center, dir, font, frame, frameset, isindex, noframes, strike, tt。<br>新增标签<br>HTML 5提供了一些新的元素和属性，反映典型的现代用法网站。其中有些是技术上类似&lt;div&gt;和&lt;span&gt;标签，但有一定含义，例如&lt;nav&gt;（网站导航块）和&lt;footer&gt;``&lt;audio&gt;和&lt;video&gt;标记。<br><br>移除的标签<br>一些过时的HTML 4标记将取消，其中包括纯粹用作显示效果的标记，如&lt;font&gt;和&lt;center&gt;，因为它们已经被CSS取代。还有一些通过DOM的网络行为。<br><br>修改的标签<br>尽管和SGML在标记上的相似性，HTML5的句法并不再基于它了，而是被设计成向后兼容对老版本的HTML的解析。它有一个新的开始列看起来就像SGML的文档类型声明，&lt;!DOCTYPE HTML&gt;，这会触发和标准兼容的渲染模式。在2009年1月5号，HTML5添加了Web Form 2.0的内容，html5开始发展起来。<br><br>无障碍（Accessibility）<br>为了使HTML5的新元素或新属性获取最大化的兼容性，开发人员需要附加一点额外补助，或者有些特性根本没有被任何浏览器实现，或者浏览器根本不支持补助技术。因此有些特殊的HTML5特性根本不能使用。更多细节可参见HTML5 Accessibility（无障碍）<br><br>新应用程序接口（API）<br>除了原先的DOM接口，HTML5增加了更多样化的API:<br><br>HTML Geolocation<br>HTML Drag and Drop<br>HTML Local Storage<br>HTML Application Cache<br>HTML Web Workers<br>HTML SSE<br>HTML Canvas/WebGL<br>HTML Audio/Video<br>总结<br>最后奉上一张图片：</p><p><img src=\"https://static.bookstack.cn/projects/front-end-database/de80838fb8f6af54abf808a385c0b007.jpg\" alt=\"what-is-html5.jpg\"><span style=\"font-size: 1em;\">参考资料</span><br></p><p>维基百科: html5<br>MDN: HTML5<br>W3Schools: Learn HTML5<br>知乎: HTML5 到底是什么？</p>','2020-12-14 09:57:19'),(19,3,1,'基本原则','<div class=\"article-content\">\n                    <div class=\"help-block article-info\" style=\"padding-bottom: 20px;\"><p>基本原则<br>结构、样式、行为分离<br>缩进<br>文件编码<br>一律使用小写字母<br>省略外链资源 URL 协议部分<br>统一注释<br>HTML 注释<br>CSS 注释<br>JavaScript 注释<br>代码验证<br>基本原则<br>结构、样式、行为分离<br>尽量确保文档和模板只包含 HTML 结构，样式都放到样式表里，行为都放到脚本里。<br><br>缩进<br>统一两个空格缩进（总之缩进统一即可），不要使用 Tab 或者 Tab、空格混搭。<br><br>文件编码<br>使用不带 BOM 的 UTF-8 编码。<br><br>在 HTML中指定编码 &lt;meta charset=\"utf-8\"&gt; ；<br>无需使用 @charset 指定样式表的编码，它默认为 UTF-8 （参考 @charset）；<br>一律使用小写字母<br>&lt;!-- Recommended --&gt;<br>&lt;img src=\"google.png\" alt=\"Google\"&gt;<br>&lt;!-- Not recommended --&gt;<br>&lt;A HREF=\"/\"&gt;Home&lt;/A&gt;<br>/* Recommended */<br>color: #e5e5e5;<br>/* Not recommended */<br>color: #E5E5E5;<br>省略外链资源 URL 协议部分<br>省略外链资源（图片及其它媒体资源）URL 中的 http / https 协议，使 URL 成为相对地址，避免 Mixed Content 问题，减小文件字节数。<br><br>其它协议（ftp 等）的 URL 不省略。<br><br>&lt;!-- Recommended --&gt;<br>&lt;script src=\"//www.google.com/js/gweb/analytics/autotrack.js\"&gt;&lt;/script&gt;<br>&lt;!-- Not recommended --&gt;<br>&lt;script src=\"http://www.google.com/js/gweb/analytics/autotrack.js\"&gt;&lt;/script&gt;<br>/* Recommended */<br>.example {<br>  background: url(//www.google.com/images/example);<br>}<br>/* Not recommended */<br>.example {<br>  background: url(http://www.google.com/images/example);<br>}<br>统一注释<br>通过配置编辑器，可以提供快捷键来输出一致认可的注释模式。<br><br>HTML 注释<br>模块注释<br><br>&lt;!-- 文章列表列表模块 --&gt;<br>&lt;div class=\"article-list\"&gt;<br>...<br>&lt;/div&gt;<br>区块注释<br><br>&lt;!--<br>@name: Drop Down Menu<br>@description: Style of top bar drop down menu.<br>@author: Ashu(Aaaaaashu@gmail.com)<br>--&gt;<br>CSS 注释<br>组件块和子组件块以及声明块之间使用一空行分隔，子组件块之间三空行分隔；<br><br>/* ==========================================================================<br>   组件块<br> ============================================================================ */<br><br>/* 子组件块<br> ============================================================================ */<br>.selector {<br>  padding: 15px;<br>  margin-bottom: 15px;<br>}<br><br><br><br>/* 子组件块<br> ============================================================================ */<br>.selector-secondary {<br>  display: block; /* 注释*/<br>}<br><br>.selector-three {<br>  display: span;<br>}<br>JavaScript 注释<br>单行注释<br>必须独占一行。// 后跟一个空格，缩进与下一行被注释说明的代码一致。<br><br>多行注释<br>避免使用 /*...*/ 这样的多行注释。有多行注释内容时，使用多个单行注释。<br><br>函数/方法注释<br>函数/方法注释必须包含函数说明，有参数和返回值时必须使用注释标识。；<br>参数和返回值注释必须包含类型信息和说明；<br>当函数是内部函数，外部不可访问时，可以使用 @inner 标识；<br>/**<br> * 函数描述<br> *<br> * @param {string} p1 参数1的说明<br> * @param {string} p2 参数2的说明，比较长<br> *     那就换行了.<br> * @param {number=} p3 参数3的说明（可选）<br> * @return {Object} 返回值描述<br> */<br>function foo(p1, p2, p3) {<br>    var p3 = p3 || 10;<br>    return {<br>        p1: p1,<br>        p2: p2,<br>        p3: p3<br>    };<br>}<br>文件注释<br>文件注释用于告诉不熟悉这段代码的读者这个文件中包含哪些东西。 应该提供文件的大体内容, 它的作者, 依赖关系和兼容性信息。如下:<br><br>/**<br> * @fileoverview Description of file, its uses and information<br> * about its dependencies.<br> * @author user@meizu.com (Firstname Lastname)<br> * Copyright 2015 Meizu Inc. All Rights Reserved.<br> */<br>代码验证<br>使用 W3C HTML Validator 来验证你的HTML代码有效性；<br>使用 W3C CSS Validator 来验证你的CSS代码有效性；<br>代码验证不是最终目的，真的目的在于让开发者在经过多次的这种验证过程后，能够深刻理解到怎样的语法或写法是非标准和不推荐的，即使在某些场景下被迫要使用非标准写法，也可以做到心中有数。</p></div><div class=\"bookstack-bars\"><ul>\n                            <li class=\"book-menu visible-xs visible-sm\">\n                                <a href=\"javascript:void(0);\" title=\"菜单\"><i class=\"fa fa-align-justify\"></i></a>\n                            </li>\n                            <li class=\"visible-xs visible-sm bars-menu-toggle\">\n                                <a href=\"#\" title=\"更多功能\"><i class=\"fa fa-plus-circle\"></i><i class=\"fa fa-minus-circle hide\"></i></a>\n                            </li>\n                            <li>\n                                <a href=\"javascript:;\" class=\"view-backtop\"><i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></a>\n                            </li>\n\n                        </ul>\n                    </div>\n                </div>','2020-12-14 10:30:43'),(20,3,2,'通用约定','<p>通用约定<br>标签<br>Class 与 ID<br>属性顺序<br>引号<br>嵌套<br>布尔值属性<br>通用约定<br>标签<br>自闭合（self-closing）标签，无需闭合 ( 例如： img input br hr 等 )；<br>可选的闭合标签（closing tag），需闭合 ( 例如：&lt;/li&gt; 或 &lt;/body&gt; )；<br>尽量减少标签数量；<br>&lt;img src=\"images/google.png\" alt=\"Google\"&gt;<br>&lt;input type=\"text\" name=\"title\"&gt;<br>&lt;ul&gt;<br>  &lt;li&gt;Style&lt;/li&gt;<br>  &lt;li&gt;Guide&lt;/li&gt;<br>&lt;/ul&gt;<br>&lt;!-- Not recommended --&gt;<br>&lt;span class=\"avatar\"&gt;<br>  &lt;img src=\"...\"&gt;<br>&lt;/span&gt;<br>&lt;!-- Recommended --&gt;<br>&lt;img class=\"avatar\" src=\"...\"&gt;<br>Class 与 ID<br>class 应以功能或内容命名，不以表现形式命名；<br>class 与 id 单词字母小写，多个单词组成时，采用中划线-分隔；<br>使用唯一的 id 作为 Javascript hook, 同时避免创建无样式信息的 class；<br>&lt;!-- Not recommended --&gt;<br>&lt;div class=\"j-hook left contentWrapper\"&gt;&lt;/div&gt;<br>&lt;!-- Recommended --&gt;<br>&lt;div id=\"j-hook\" class=\"sidebar content-wrapper\"&gt;&lt;/div&gt;<br>属性顺序<br>HTML 属性应该按照特定的顺序出现以保证易读性。<br><br>id<br>class<br>name<br>data-xxx<br>src, for, type, href<br>title, alt<br>aria-xxx, role<br>&lt;a id=\"...\" class=\"...\" data-modal=\"toggle\" href=\"###\"&gt;&lt;/a&gt;<br>&lt;input class=\"form-control\" type=\"text\"&gt;<br>&lt;img src=\"...\" alt=\"...\"&gt;<br>引号<br>属性的定义，统一使用双引号。<br><br>&lt;!-- Not recommended --&gt;<br>&lt;span id=\'j-hook\' class=text&gt;Google&lt;/span&gt;<br>&lt;!-- Recommended --&gt;<br>&lt;span id=\"j-hook\" class=\"text\"&gt;Google&lt;/span&gt;<br>嵌套<br>a 不允许嵌套 div这种约束属于语义嵌套约束，与之区别的约束还有严格嵌套约束，比如a 不允许嵌套 a。<br><br>严格嵌套约束在所有的浏览器下都不被允许；而语义嵌套约束，浏览器大多会容错处理，生成的文档树可能相互不太一样。<br><br>语义嵌套约束<br><br>&lt;li&gt; 用于 &lt;ul&gt; 或 &lt;ol&gt; 下；<br>&lt;dd&gt;, &lt;dt&gt; 用于 &lt;dl&gt; 下；<br>&lt;thead&gt;, &lt;tbody&gt;, &lt;tfoot&gt;, &lt;tr&gt;, &lt;td&gt; 用于 &lt;table&gt; 下；<br>严格嵌套约束<br><br>inline-Level 元素，仅可以包含文本或其它 inline-Level 元素;<br>&lt;a&gt;里不可以嵌套交互式元素&lt;a&gt;、&lt;button&gt;、&lt;select&gt;等;<br>&lt;p&gt;里不可以嵌套块级元素&lt;div&gt;、&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;ul&gt;/&lt;ol&gt;/&lt;li&gt;、&lt;dl&gt;/&lt;dt&gt;/&lt;dd&gt;、&lt;form&gt;等。<br>更多详情，参考WEB标准系列-HTML元素嵌套<br><br>布尔值属性<br>HTML5 规范中 disabled、checked、selected 等属性不用设置值。<br><br>&lt;input type=\"text\" disabled&gt;<br>&lt;input type=\"checkbox\" value=\"1\" checked&gt;<br>&lt;select&gt;<br>  &lt;option value=\"1\" selected&gt;1&lt;/option&gt;<br>&lt;/select&gt;</p>','2020-12-14 10:31:23'),(21,3,3,'语义化','<p>语义化<br>常见标签语义<br>示例<br>语义化<br>没有 CSS 的 HTML 是一个语义系统而不是 UI 系统。<br><br>通常情况下，每个标签都是有语义的，所谓语义就是你的衣服分为外套， 裤子，裙子，内裤等，各自有对应的功能和含义。所以你总不能把内裤套在脖子上吧。— 一丝<br><br>此外语义化的 HTML 结构，有助于机器（搜索引擎）理解，另一方面多人协作时，能迅速了解开发者意图。<br><br>常见标签语义<br>标签\t语义<br>&lt;p&gt;\t段落<br>&lt;h1&gt; &lt;h2&gt; &lt;h3&gt; ...\t标题<br>&lt;ul&gt;\t无序列表<br>&lt;ol&gt;\t有序列表<br>&lt;blockquote&gt;\t大段引用<br>&lt;cite&gt;\t一般引用<br>&lt;b&gt;\t为样式加粗而加粗<br>&lt;strong&gt;\t为强调内容而加粗<br>&lt;i&gt;\t为样式倾斜而倾斜<br>&lt;em&gt;\t为强调内容而倾斜<br>code\t代码标识<br>abbr\t缩写<br>示例<br>将你构建的页面当作一本书，将标签的语义对应的其功能和含义；<br><br>书的名称：&lt;h1&gt;<br>书的每个章节标题: &lt;h2&gt;<br>章节内的文章标题: &lt;h3&gt;<br>小标题/副标题: &lt;h4&gt; &lt;h5&gt; &lt;h6&gt;<br>章节的段落: &lt;p&gt;<br>更多语义化的内容，参考 sofish 写的文章 这样去写你的 HTML。</p>','2020-12-14 10:31:44'),(22,4,1,'前端开发者是什么？','<p>第1章 前端开发者是什么？<br>本章阐述了前端开发和前端开发者训练的基本说明。<br><br>Web前端开发，也称为客户端开发，是为网站或Web应用程序生成HTML、CSS和JavaScript的实践，以便用户可以直接看到它们并与之交互。与前端开发相关的挑战是，用于前端创建网站的工具和技术不断变化，因此开发者需要持续了解该领域是如何发展的。<br><br>设计一个网站的目的，就是确保当用户打开网站时，看到的信息被格式化成易于阅读且相关联的。更复杂的是，现在用户使用大量、不同的屏幕尺寸和分辨率的设备，从而迫使设计师在设计网站的时候不得不考虑这些问题，他们需要确保页面能够在不同的浏览器(跨浏览器)、不同的操作系统(跨平台)和不同的设备(跨设备)中正确运行，这就需要开发者进行仔细的规划。<br><br>— 维基百科<br><br>第1章 前端开发者是什么？ - 图1<br><br>图片来源：https://www.upwork.com/hiring/development/front-end-developer/<br><br>前端开发者…<br><br>前端开发者使用Web技术（HTML、CSS和JavaScript）来设计和开发网站以及Web应用，这些技术通常运行在开放的Web平台或作为非Web平台本地运行时环境(如React Native)。<br><br>一个人通过学习构建一个依赖于HTML、CSS和JavaScript的网站或Web应用程序进入前端开发领域。这些应用程序通常在Web浏览器中运行，但也能运行于无头浏览器、WebView或者的本地运行时环境中运行。下面将详析这四种运行时场景：<br><br>（最常见的）Web浏览器<br><br>Web浏览器是用来检索、展示、遍历WWW信息的软件。通常，浏览器运行在台式电脑或者笔记本电脑、平板电脑和手机上，但最近几乎能在任何设备（如冰箱、汽车等等）上找到浏览器。<br><br>最常见的Web浏览器（按使用次数排序）是：<br><br>Chrome<br><br>Safari<br><br>Internet Explorer (备注: 不含Edge, 特指IE9至IE11)<br><br>Firefox<br><br>Edge<br><br>无头浏览器<br><br>无头浏览器是一种没有图形用户界面的Web浏览器，可以通过命令行界面以编程方式控制该界面，以实现Web页面自动化(例如，功能测试、抓取、单元测试等)。可以将无头浏览器看作可以从命令行以编程方式运行的浏览器，该命令行可以检索和遍历Web页面代码。<br><br>最常见的无头浏览器有：<br><br>Headless Chromium<br><br>Zombie<br><br>slimerjs<br><br>puppeteer<br><br>webview<br><br>webview被用在原生操作系统上，在原生应用程序中运行Web页面。可以将webview想象成是网页浏览器的一个iframe或一个单标签，它被嵌入在设备里所运行的原生应用程序(例如，iOS、android、windows)中。<br><br>webview开发最常见的解决方案有:<br><br>Cordova (手机和平板的原生应用程序)<br><br>NW.js (桌面应用程序)<br><br>Electron (桌面应用程序)<br><br>Web原生技术<br><br>最后，前端开发者可以从Web浏览器开发中学习到，编写代码不需要考虑浏览器引擎的限制。最近，开发环境正被设想成可以利用Web技术(例如，CSS和JavaScript)来构建原生应用程序，而不使用Web引擎。<br><br>这些环境的一些例子有:<br><br>Flutter<br><br>React Native<br><br>NativeScript<br><br>注：<br><br>1、确定你已经清楚地理解了“Web平台”的含义。阅读“Web开放平台”的维基百科页面。探索构成Web平台相关的众多技术。</p>','2020-12-14 11:22:03'),(23,4,2,'如何成为一名前端开发者','<p>如何成为一名前端开发者呢？这个非常复杂的问题，可以根据下面的路线图思考一下：<br><br>2.1 如何成为一名前端开发者 - 图1图片来源: https://github.com/kamranahmedse/developer-roadmap</p><p><img src=\"https://frontendmasters.com/books/front-end-handbook/2019/assets/images/frontend.png\" alt=\"2.1 如何成为一名前端开发者 - 图1\"><br><br>现在一般来说，没人会指望大学毕业能取得前端工程学位。而且，我很少听到或见到有前端开发者，他们可能拥有一个不受欢迎的计算机科学学位或平面设计学位，最终却要专业地编写HTML、CSS和JavaScript。在我看来，现在从事前端工作的大多数人似乎都是自学成才的，或者是从设计和计算机科学领域跨界进入前端领域的。<br><br>如果你现在想开始成为一名前端开发者，我将大致遵循以下的流程开始说明（第3章和第4章会深入学习资源的更多细节）。<br><br>大致了解Web平台是如何运作的。确保你了解HTML、CSS、DOM、JavaScript、域名、DNS、URL、HTTP、浏览器和服务器与客户端这些概念“是什么”和“使用在哪里”。不要从一开始就深入专研任何东西，只需要了解正在发挥作用的各个部分以及它们是如何组合在一起的。从构建简单的Web页面开始。<br><br>学习HTML<br><br>学习CSS<br><br>学习JavaScript<br><br>学习DOM<br><br>学习用户界面设计的基础原理 (UI模式、交互设计、用户体验设计和可用性)<br><br>学习CLI和命令行<br><br>学习软件工程的实践（例如，应用程序设计与架构、模板、Git、测试、监控、自动化、代码质量和开发方法论）<br><br>不要固执己见，用任何对你的大脑有意义的东西(例如，Webpack、React和Mobx)定制你的工具箱<br><br>学习Node.js<br><br>简单地说一下学习建议，在学习抽象概念前，先学习基础的底层技术。不要学习jQuery，先学DOM。不要学SASS，先学CSS。不要学习JSX，先学HTML，不要学TypeScript，先学JavaScript。不要学Handlebars，先学JavaScript ES6模板，不要学BootStrap，先学UI模式。<br><br>最近出现了许多未经认证的、昂贵的前端代码学校和训练营。这些学校通常是由那些来自官方学院的老师遵循传统教学模式授课（课程大纲、考试、小考、专题、小组专题和成绩等）。<br><br>谨记，如果你正考虑参加一个高价的培训项目，那就选择网上的吧！所有的知识你都可以从网上学到而且几乎不怎么花钱。然而，如果你需要某人告诉你如何低成本学习，你应该考虑传统的教师主导的课堂配置。除此之外，我不知道还有什么职业是可以通过互联网免费学习的、每月几美元的录像课程会员资格筛选费以及强烈的求知欲。<br><br>举个例子，如果你从今天就开始，以下有几个自学的资源供你选择：<br><br>从Web开始 [阅读]<br><br>你想这样成为一名前端工程师吗 [观看]<br><br>前端大师学习之路 [观看][付费]<br><br>Web开发介绍 [观看][付费]<br><br>Treehouse理工大学学位 [观看][付费]<br><br>无学位的Web前端开发者 [观看][付费]<br><br>成为Web前端开发者 [观看][付费]<br><br>freeCodeCamp[互动][观看]<br><br>当你准备开始的时候，你应该会对大部分复杂的内容感到担忧。抽象（例如，jQuery）落入错误的人手中，让人看起来是种高级的技能。但始终隐藏着一个事实，开发者对基础和底层的概念理解较差。<br><br>假设，在这个过程中你不单只是学习，也在实践你所学和研究的工具。有些人建议实践只是为了学习，当其他人建议只学习如何去实践的时候，我建议你找一种与你大脑运作方式相匹配的方法去实践。但是，可以肯定的是，这是一种融合。所以，不要只看不实践。学习，实践。学习，实践。不停地重复，因为事情总是变化得很快。这就是为什么要学习基本原理而不是抽象概念十分重要。</p>','2020-12-14 11:23:34'),(24,5,1,'开源项目目录规范','<p>开源项目目录规范<br>说明<br>目录规范<br>README.md<br>.editorconfig<br>src<br>css、themes、less、sass<br>doc<br>dist<br>build<br>test<br>src_cov<br>开源项目目录规范<br>此为前端开发团队遵循和约定的开源项目目录规范，意在实现开源项目目录结构的一致性。<br><br>说明<br>文档中使用的关键字「MUST」,「MUST NOT」,「REQUIRED」,「SHALL」,「SHALL<br>NOT」,「SHOULD」,「SHOULD NOT」,「RECOMMENDED」,「MAY」和「OPTIONAL」在RFC2119中被说明。<br><br>还未定稿，对规范中提及的点有不赞同的欢迎提出 issues(请添加目录规范标签)讨论。<br><br>目录规范<br>参加的目录结构为：<br><br>.<br>├── .editorconfig<br>├── .travis.yml<br>├── css<br>├── dist<br>├── doc<br>├── README.md<br>├── src<br>README.md<br>每个项目都必须「MUST」包含一个README.md文件，此文件中应当「SHOULD」概要描述此项目的功能和特点等信息。<br><br>.editorconfig<br>每个项目应当「SHOULD」包含.editorconfig，用来统一配置编辑器的换行、缩进存储格式，使用方式请参考editorconfig是什么？。<br><br>src<br>项目中所有 JS 源码应当「SHOULD」存放在此目录下，且所有JS文件编写应当「SHOULD」遵循Javascript 编码规范。<br><br>css、themes、less、sass<br>样式类文件存放应当「SHOULD」遵循以下规律，且文件编写应当「SHOULD」遵循CSS 编码规范。<br><br>不带主题的样式文件应当「SHOULD」统一存放在 css 目录下面，且样式中使用的背景图片资源应当「SHOULD」统一存放在 css/images 目录下面。<br>带主题的样式文件应当「SHOULD」统一存放在 themes 目录下对应的主题目录下，默认的主题应当「SHOULD」采用 default 作为主题名称，且应当「SHOULD」默认提供，样式中对应图片文件应当「SHOULD」存放在样式文件所在的主题目录下的 images 目录下。<br>less 格式的样式文件应当「SHOULD」统一存放在 less 目录下面。<br>sass 格式的样式文件应当「SHOULD」统一存放在 sass 目录下面。<br>doc<br>所有项目应当「SHOULD」包含一个 doc 目录，用来存放详细的 API 使用文档。<br><br>dist<br>dist 作为项目输出目录，所有编译生成、提供给用户使用的文件应当「SHOULD」存放在此目录。<br><br>为了让不太擅长 node.js 的用户可以正常使用编译后的代码，dist 目录应当「SHOULD」包含基本输出结果并提交在 github 中。<br><br>build<br>所有工具类脚本应当「SHOULD」放在此目录。<br><br>test<br>所有测试相关代码应当「SHOULD」放在此目录。<br><br>src_cov<br>为了测试代码覆盖率，所有为测试覆盖率生成的新 JS 文件应当「SHOULD」存放在此目录下面。</p>','2020-12-14 11:58:09');
INSERT INTO `em_book_section` VALUES (25,5,2,'Javascript 编码规范','<p>JavaScript编码规范<br>1 前言<br>2 代码风格<br>2.1 文件<br>[建议] JavaScript 文件使用无 BOM 的 UTF-8 编码。<br>[建议] 在文件结尾处，保留一个空行。<br>2.2 结构<br>2.2.1 缩进<br>[强制] 使用 4 个空格做为一个缩进层级，不允许使用 2 个空格 或 tab 字符。<br>[强制] switch 下的 case 和 default 必须增加一个缩进层级。<br>2.2.2 空格<br>[强制] 二元运算符两侧必须有一个空格，一元运算符与操作对象之间不允许有空格。<br>[强制] 用作代码块起始的左花括号 { 前必须有一个空格。<br>[强制] if / else / for / while / function / switch / do / try / catch / finally 关键字后，必须有一个空格。<br>[强制] 在对象创建时，属性中的 : 之后必须有空格，: 之前不允许有空格。<br>[强制] 函数声明、具名函数表达式、函数调用中，函数名和 ( 之间不允许有空格。<br>[强制] , 和 ; 前不允许有空格。<br>[强制] 在函数调用、函数声明、括号表达式、属性访问、if / for / while / switch / catch 等语句中，() 和 [] 内紧贴括号部分不允许有空格。<br>[强制] 单行声明的数组与对象，如果包含元素，{} 和 [] 内紧贴括号部分不允许包含空格。<br>[强制] 行尾不得有多余的空格。<br>2.2.3 换行<br>[强制] 每个独立语句结束后必须换行。<br>[强制] 每行不得超过 120 个字符。<br>[强制] 运算符处换行时，运算符必须在新行的行首。<br>[强制] 在函数声明、函数表达式、函数调用、对象创建、数组创建、for语句等场景中，不允许在 , 或 ; 前换行。<br>[建议] 不同行为或逻辑的语句集，使用空行隔开，更易阅读。<br>[建议] 在语句的行长度超过 120 时，根据逻辑条件合理缩进。<br>[建议] 对于 if...else...、try...catch...finally 等语句，推荐使用在 } 号后添加一个换行 的风格，使代码层次结构更清晰，阅读性更好。<br>2.2.4 语句<br>[强制] 不得省略语句结束的分号。<br>[强制] 在 if / else / for / do / while 语句中，即使只有一行，也不得省略块 {...}。<br>[强制] 函数定义结束不允许添加分号。<br>[强制] IIFE 必须在函数表达式外添加 (，非 IIFE 不得在函数表达式外添加 (。<br>2.3 命名<br>[强制] 变量 使用 Camel命名法。<br>[强制] 常量 使用 全部字母大写，单词间下划线分隔 的命名方式。<br>[强制] 函数 使用 Camel命名法。<br>[强制] 函数的 参数 使用 Camel命名法。<br>[强制] 类 使用 Pascal命名法。<br>[强制] 类的 方法 / 属性 使用 Camel命名法。<br>[强制] 枚举变量 使用 Pascal命名法，枚举的属性 使用 全部字母大写，单词间下划线分隔 的命名方式。<br>[强制] 命名空间 使用 Camel命名法。<br>[强制] 由多个单词组成的缩写词，在命名中，根据当前命名法和出现的位置，所有字母的大小写与首字母的大小写保持一致。<br>[强制] 类名 使用 名词。<br>[建议] 函数名 使用 动宾短语。<br>[建议] boolean 类型的变量使用 is 或 has 开头。<br>[建议] Promise对象 用 动宾短语的进行时 表达。<br>2.4 注释<br>2.4.1 单行注释<br>[强制] 必须独占一行。// 后跟一个空格，缩进与下一行被注释说明的代码一致。<br>2.4.2 多行注释<br>[建议] 避免使用 /*...*/ 这样的多行注释。有多行注释内容时，使用多个单行注释。<br>2.4.3 文档化注释<br>[强制] 为了便于代码阅读和自文档化，以下内容必须包含以 /**...*/ 形式的块注释中。<br>[强制] 文档注释前必须空一行。<br>[建议] 自文档化的文档说明 what，而不是 how。<br>2.4.4 类型定义<br>[强制] 类型定义都是以{开始, 以}结束。<br>[强制] 对于基本类型 {string}, {number}, {boolean}，首字母必须小写。<br>2.4.5 文件注释<br>[强制] 文件顶部必须包含文件注释，用 @file 标识文件说明。<br>[建议] 文件注释中可以用 @author 标识开发者信息。<br>2.4.6 命名空间注释<br>[建议] 命名空间使用 @namespace 标识。<br>2.4.7 类注释<br>[建议] 使用 @class 标记类或构造函数。<br>[建议] 使用 @extends 标记类的继承信息。<br>[强制] 使用包装方式扩展类成员时， 必须通过 @lends 进行重新指向。<br>[强制] 类的属性或方法等成员信息使用 @public / @protected / @private 中的任意一个，指明可访问性。<br>2.4.8 函数/方法注释<br>[强制] 函数/方法注释必须包含函数说明，有参数和返回值时必须使用注释标识。<br>[强制] 参数和返回值注释必须包含类型信息和说明。<br>[建议] 当函数是内部函数，外部不可访问时，可以使用 @inner 标识。<br>[强制] 对 Object 中各项的描述， 必须使用 @param 标识。<br>[建议] 重写父类方法时， 应当添加 @override 标识。如果重写的形参个数、类型、顺序和返回值类型均未发生变化，可省略 @param、@return，仅用 @override 标识，否则仍应作完整注释。<br>2.4.9 事件注释<br>[强制] 必须使用 @event 标识事件，事件参数的标识与方法描述的参数标识相同。<br>[强制] 在会广播事件的函数前使用 @fires 标识广播的事件，在广播事件代码前使用 @event 标识事件。<br>[建议] 对于事件对象的注释，使用 @param 标识，生成文档时可读性更好。<br>2.4.10 常量注释<br>[强制] 常量必须使用 @const 标记，并包含说明和类型信息。<br>2.4.11 复杂类型注释<br>[建议] 对于类型未定义的复杂结构的注释，可以使用 @typedef 标识来定义。<br>2.4.12 AMD 模块注释<br>[强制] AMD 模块使用 @module 或 @exports 标识。<br>[强制] 对于已使用 @module 标识为 AMD模块 的引用，在 namepaths 中必须增加 module: 作前缀。<br>[建议] 对于类定义的模块，可以使用 @alias 标识构建函数。<br>[建议] 多模块定义时，可以使用 @exports 标识各个模块。<br>[建议] 对于 exports 为 Object 的模块，可以使用@namespace标识。<br>[建议] 对于 exports 为类名的模块，使用 @class 和 @exports 标识。<br>2.4.13 细节注释<br>[建议] 细节注释遵循单行注释的格式。说明必须换行时，每行是一个单行注释的起始。<br>[强制] 有时我们会使用一些特殊标记进行说明。特殊标记必须使用单行注释的形式。下面列举了一些常用标记：<br>3 语言特性<br>3.1 变量<br>[强制] 变量在使用前必须通过 var 定义。<br>[强制] 每个 var 只能声明一个变量。<br>[强制] 变量必须 即用即声明，不得在函数或其它形式的代码块起始位置统一声明所有变量。<br>3.2 条件<br>[强制] 在 Equality Expression 中使用类型严格的 ===。仅当判断 null 或 undefined 时，允许使用 == null。<br>[建议] 尽可能使用简洁的表达式。<br>[建议] 按执行频率排列分支的顺序。<br>[建议] 对于相同变量或表达式的多值条件，用 switch 代替 if。<br>[建议] 如果函数或全局中的 else 块后没有任何语句，可以删除 else。<br>3.3 循环<br>[建议] 不要在循环体中包含函数表达式，事先将函数提取到循环体外。<br>[建议] 对循环内多次使用的不变值，在循环外用变量缓存。<br>[建议] 对有序集合进行遍历时，缓存 length。<br>[建议] 对有序集合进行顺序无关的遍历时，使用逆序遍历。<br>3.4 类型<br>3.4.1 类型检测<br>[建议] 类型检测优先使用 typeof。对象类型检测使用 instanceof。null 或 undefined 的检测使用 == null。<br>3.4.2 类型转换<br>[建议] 转换成 string 时，使用 + \'\'。<br>[建议] 转换成 number 时，通常使用 +。<br>[建议] string 转换成 number，要转换的字符串结尾包含非数字并期望忽略时，使用 parseInt。<br>[强制] 使用 parseInt 时，必须指定进制。<br>[建议] 转换成 boolean 时，使用 !!。<br>[建议] number 去除小数点，使用 Math.floor / Math.round / Math.ceil，不使用 parseInt。<br>3.5 字符串<br>[强制] 字符串开头和结束使用单引号 \'。<br>[建议] 使用 数组 或 + 拼接字符串。<br>[建议] 复杂的数据到视图字符串的转换过程，选用一种模板引擎。<br>3.6 对象<br>[强制] 使用对象字面量 {} 创建新 Object。<br>[强制] 对象创建时，如果一个对象的所有 属性 均可以不添加引号，则所有 属性 不得添加引号。<br>[强制] 对象创建时，如果任何一个 属性 需要添加引号，则所有 属性 必须添加 \'。<br>[强制] 不允许修改和扩展任何原生对象和宿主对象的原型。<br>[建议] 属性访问时，尽量使用 .。<br>[建议] for in 遍历对象时, 使用 hasOwnProperty 过滤掉原型中的属性。<br>3.7 数组<br>[强制] 使用数组字面量 [] 创建新数组，除非想要创建的是指定长度的数组。<br>[强制] 遍历数组不使用 for in。<br>[建议] 不因为性能的原因自己实现数组排序功能，尽量使用数组的 sort 方法。<br>[建议] 清空数组使用 .length = 0。<br>3.8 函数<br>3.8.1 函数长度<br>[建议] 一个函数的长度控制在 50 行以内。<br>3.8.2 参数设计<br>[建议] 一个函数的参数控制在 6 个以内。<br>[建议] 通过 options 参数传递非数据输入型参数。<br>3.8.3 闭包<br>[建议] 在适当的时候将闭包内大对象置为 null。<br>[建议] 使用 IIFE 避免 Lift 效应。<br>3.8.4 空函数<br>[建议] 空函数不使用 new Function() 的形式。<br>[建议] 对于性能有高要求的场合，建议存在一个空函数的常量，供多处使用共享。<br>3.9 面向对象<br>[强制] 类的继承方案，实现时需要修正 constructor。<br>[建议] 声明类时，保证 constructor 的正确性。<br>[建议] 属性在构造函数中声明，方法在原型中声明。<br>[强制] 自定义事件的 事件名 必须全小写。<br>[强制] 自定义事件只能有一个 event 参数。如果事件需要传递较多信息，应仔细设计事件对象。<br>[建议] 设计自定义事件时，应考虑禁止默认行为。<br>3.10 动态特性<br>3.10.1 eval<br>[强制] 避免使用直接 eval 函数。<br>[建议] 尽量避免使用 eval 函数。<br>3.10.2 动态执行代码<br>[建议] 使用 new Function 执行动态代码。<br>3.10.3 with<br>[建议] 尽量不要使用 with。<br>3.10.4 delete<br>[建议] 减少 delete 的使用。<br>[建议] 处理 delete 可能产生的异常。<br>3.10.5 对象属性<br>[建议] 避免修改外部传入的对象。<br>[建议] 具备强类型的设计。<br>4 浏览器环境<br>4.1 模块化<br>4.1.1 AMD<br>[强制] 使用 AMD 作为模块定义。<br>[强制] 模块 id 必须符合标准。<br>4.1.2 define<br>[建议] 定义模块时不要指明 id 和 dependencies。<br>[建议] 使用 return 来返回模块定义。<br>4.1.3 require<br>[强制] 全局运行环境中，require 必须以 async require 形式调用。<br>[强制] 模块定义中只允许使用 local require，不允许使用 global require。<br>[强制] Package在实现时，内部模块的 require 必须使用 relative id。<br>[建议] 不会被调用的依赖模块，在 factory 开始处统一 require。<br>4.2 DOM<br>4.2.1 元素获取<br>[建议] 对于单个元素，尽可能使用 document.getElementById 获取，避免使用document.all。<br>[建议] 对于多个元素的集合，尽可能使用 context.getElementsByTagName 获取。其中 context 可以为 document 或其他元素。指定 tagName 参数为 * 可以获得所有子元素。<br>[建议] 遍历元素集合时，尽量缓存集合长度。如需多次操作同一集合，则应将集合转为数组。<br>[建议] 获取元素的直接子元素时使用 children。避免使用childNodes，除非预期是需要包含文本、注释和属性类型的节点。<br>4.2.2 样式获取<br>[建议] 获取元素实际样式信息时，应使用 getComputedStyle 或 currentStyle。<br>4.2.3 样式设置<br>[建议] 尽可能通过为元素添加预定义的 className 来改变元素样式，避免直接操作 style 设置。<br>[强制] 通过 style 对象设置元素样式时，对于带单位非 0 值的属性，不允许省略单位。<br>4.2.4 DOM 操作<br>[建议] 操作 DOM 时，尽量减少页面 reflow。<br>[建议] 尽量减少 DOM 操作。<br>4.2.5 DOM 事件<br>[建议] 优先使用 addEventListener / attachEvent 绑定事件，避免直接在 HTML 属性中或 DOM 的 expando 属性绑定事件处理。<br>[建议] 使用 addEventListener 时第三个参数使用 false。<br>[建议] 在没有事件自动管理的框架支持下，应持有监听器函数的引用，在适当时候（元素释放、页面卸载等）移除添加的监听器。<br>JavaScript编码规范<br>1 前言<br>JavaScript在百度一直有着广泛的应用，特别是在浏览器端的行为管理。本文档的目标是使JavaScript代码风格保持一致，容易被理解和被维护。<br><br>虽然本文档是针对JavaScript设计的，但是在使用各种JavaScript的预编译语言时(如TypeScript等)时，适用的部分也应尽量遵循本文档的约定。<br><br>2 代码风格<br>2.1 文件<br>[建议] JavaScript 文件使用无 BOM 的 UTF-8 编码。<br>解释：<br><br>UTF-8 编码具有更广泛的适应性。BOM 在使用程序或工具处理文件时可能造成不必要的干扰。<br><br>[建议] 在文件结尾处，保留一个空行。<br>2.2 结构<br>2.2.1 缩进<br>[强制] 使用 4 个空格做为一个缩进层级，不允许使用 2 个空格 或 tab 字符。<br>[强制] switch 下的 case 和 default 必须增加一个缩进层级。<br>示例：<br><br>// good<br>switch (variable) {<br>    case \'1\':<br>        // do...<br>        break;<br>    case \'2\':<br>        // do...<br>        break;<br>    default:<br>        // do...<br>}<br>// bad<br>switch (variable) {<br>case \'1\':<br>    // do...<br>    break;<br>case \'2\':<br>    // do...<br>    break;<br>default:<br>    // do...<br>}<br>2.2.2 空格<br>[强制] 二元运算符两侧必须有一个空格，一元运算符与操作对象之间不允许有空格。<br>示例：<br><br>var a = !arr.length;<br>a++;<br>a = b + c;<br>[强制] 用作代码块起始的左花括号 { 前必须有一个空格。<br>示例：<br><br>// good<br>if (condition) {<br>}<br>while (condition) {<br>}<br>function funcName() {<br>}<br>// bad<br>if (condition){<br>}<br>while (condition){<br>}<br>function funcName(){<br>}<br>[强制] if / else / for / while / function / switch / do / try / catch / finally 关键字后，必须有一个空格。<br>示例：<br><br>// good<br>if (condition) {<br>}<br>while (condition) {<br>}<br>(function () {<br>})();<br>// bad<br>if(condition) {<br>}<br>while(condition) {<br>}<br>(function() {<br>})();<br>[强制] 在对象创建时，属性中的 : 之后必须有空格，: 之前不允许有空格。<br>示例：<br><br>// good<br>var obj = {<br>    a: 1,<br>    b: 2,<br>    c: 3<br>};<br>// bad<br>var obj = {<br>    a : 1,<br>    b:2,<br>    c :3<br>};<br>[强制] 函数声明、具名函数表达式、函数调用中，函数名和 ( 之间不允许有空格。<br>示例：<br><br>// good<br>function funcName() {<br>}<br>var funcName = function funcName() {<br>};<br>funcName();<br>// bad<br>function funcName () {<br>}<br>var funcName = function funcName () {<br>};<br>funcName ();<br>[强制] , 和 ; 前不允许有空格。<br>示例：<br><br>// good<br>callFunc(a, b);<br>// bad<br>callFunc(a , b) ;<br>[强制] 在函数调用、函数声明、括号表达式、属性访问、if / for / while / switch / catch 等语句中，() 和 [] 内紧贴括号部分不允许有空格。<br>示例：<br><br>// good<br>callFunc(param1, param2, param3);<br>save(this.list[this.indexes[i]]);<br>needIncream &amp;&amp; (variable += increament);<br>if (num &gt; list.length) {<br>}<br>while (len--) {<br>}<br>// bad<br>callFunc( param1, param2, param3 );<br>save( this.list[ this.indexes[ i ] ] );<br>needIncreament &amp;&amp; ( variable += increament );<br>if ( num &gt; list.length ) {<br>}<br>while ( len-- ) {<br>}<br>[强制] 单行声明的数组与对象，如果包含元素，{} 和 [] 内紧贴括号部分不允许包含空格。<br>解释：<br><br>声明包含元素的数组与对象，只有当内部元素的形式较为简单时，才允许写在一行。元素复杂的情况，还是应该换行书写。<br><br>示例：<br><br>// good<br>var arr1 = [];<br>var arr2 = [1, 2, 3];<br>var obj1 = {};<br>var obj2 = {name: \'obj\'};<br>var obj3 = {<br>    name: \'obj\',<br>    age: 20,<br>    sex: 1<br>};<br>// bad<br>var arr1 = [ ];<br>var arr2 = [ 1, 2, 3 ];<br>var obj1 = { };<br>var obj2 = { name: \'obj\' };<br>var obj3 = {name: \'obj\', age: 20, sex: 1};<br>[强制] 行尾不得有多余的空格。<br>2.2.3 换行<br>[强制] 每个独立语句结束后必须换行。<br>[强制] 每行不得超过 120 个字符。<br>解释：<br><br>超长的不可分割的代码允许例外，比如复杂的正则表达式。长字符串不在例外之列。<br><br>[强制] 运算符处换行时，运算符必须在新行的行首。<br>示例：<br><br>// good<br>if (user.isAuthenticated()<br>    &amp;&amp; user.isInRole(\'admin\')<br>    &amp;&amp; user.hasAuthority(\'add-admin\')<br>    || user.hasAuthority(\'delete-admin\')<br>) {<br>    // Code<br>}<br>var result = number1 + number2 + number3<br>    + number4 + number5;<br>// bad<br>if (user.isAuthenticated() &amp;&amp;<br>    user.isInRole(\'admin\') &amp;&amp;<br>    user.hasAuthority(\'add-admin\') ||<br>    user.hasAuthority(\'delete-admin\')) {<br>    // Code<br>}<br>var result = number1 + number2 + number3 +<br>    number4 + number5;<br>[强制] 在函数声明、函数表达式、函数调用、对象创建、数组创建、for语句等场景中，不允许在 , 或 ; 前换行。<br>示例：<br><br>// good<br>var obj = {<br>    a: 1,<br>    b: 2,<br>    c: 3<br>};<br>foo(<br>    aVeryVeryLongArgument,<br>    anotherVeryLongArgument,<br>    callback<br>);<br>// bad<br>var obj = {<br>    a: 1<br>    , b: 2<br>    , c: 3<br>};<br>foo(<br>    aVeryVeryLongArgument<br>    , anotherVeryLongArgument<br>    , callback<br>);<br>[建议] 不同行为或逻辑的语句集，使用空行隔开，更易阅读。<br>示例：<br><br>// 仅为按逻辑换行的示例，不代表setStyle的最优实现<br>function setStyle(element, property, value) {<br>    if (element == null) {<br>        return;<br>    }<br>    element.style[property] = value;<br>}<br>[建议] 在语句的行长度超过 120 时，根据逻辑条件合理缩进。<br>示例：<br><br>// 较复杂的逻辑条件组合，将每个条件独立一行，逻辑运算符放置在行首进行分隔，或将部分逻辑按逻辑组合进行分隔。<br>// 建议最终将右括号 ) 与左大括号 { 放在独立一行，保证与 if 内语句块能容易视觉辨识。<br>if (user.isAuthenticated()<br>    &amp;&amp; user.isInRole(\'admin\')<br>    &amp;&amp; user.hasAuthority(\'add-admin\')<br>    || user.hasAuthority(\'delete-admin\')<br>) {<br>    // Code<br>}<br>// 按一定长度截断字符串，并使用 + 运算符进行连接。<br>// 分隔字符串尽量按语义进行，如不要在一个完整的名词中间断开。<br>// 特别的，对于HTML片段的拼接，通过缩进，保持和HTML相同的结构。<br>var html = \'\' // 此处用一个空字符串，以便整个HTML片段都在新行严格对齐<br>    + \'&lt;article&gt;\'<br>    +     \'&lt;h1&gt;Title here&lt;/h1&gt;\'<br>    +     \'&lt;p&gt;This is a paragraph&lt;/p&gt;\'<br>    +     \'&lt;footer&gt;Complete&lt;/footer&gt;\'<br>    + \'&lt;/article&gt;\';<br>// 也可使用数组来进行拼接，相对 + 更容易调整缩进。<br>var html = [<br>    \'&lt;article&gt;\',<br>        \'&lt;h1&gt;Title here&lt;/h1&gt;\',<br>        \'&lt;p&gt;This is a paragraph&lt;/p&gt;\',<br>        \'&lt;footer&gt;Complete&lt;/footer&gt;\',<br>    \'&lt;/article&gt;\'<br>];<br>html = html.join(\'\');<br>// 当参数过多时，将每个参数独立写在一行上，并将结束的右括号 ) 独立一行。<br>// 所有参数必须增加一个缩进。<br>foo(<br>    aVeryVeryLongArgument,<br>    anotherVeryLongArgument,<br>    callback<br>);<br>// 也可以按逻辑对参数进行组合。<br>// 最经典的是baidu.format函数，调用时将参数分为“模板”和“数据”两块<br>baidu.format(<br>    dateFormatTemplate,<br>    year, month, date, hour, minute, second<br>);<br>// 当函数调用时，如果有一个或以上参数跨越多行，应当每一个参数独立一行。<br>// 这通常出现在匿名函数或者对象初始化等作为参数时，如setTimeout函数等。<br>setTimeout(<br>    function () {<br>        alert(\'hello\');<br>    },<br>    200<br>);<br>order.data.read(<br>    \'id=\' + me.model.id, <br>    function (data) {<br>        me.attchToModel(data.result);<br>        callback();<br>    }, <br>    300<br>);<br>// 链式调用较长时采用缩进进行调整。<br>$(\'#items\')<br>    .find(\'.selected\')<br>    .highlight()<br>    .end();<br>// 三元运算符由3部分组成，因此其换行应当根据每个部分的长度不同，形成不同的情况。<br>var result = thisIsAVeryVeryLongCondition<br>    ? resultA : resultB;<br>var result = condition<br>    ? thisIsAVeryVeryLongResult<br>    : resultB;<br>// 数组和对象初始化的混用，严格按照每个对象的 { 和结束 } 在独立一行的风格书写。<br>var array = [<br>    {<br>        // ...<br>    },<br>    {<br>        // ...<br>    }<br>];<br>[建议] 对于 if...else...、try...catch...finally 等语句，推荐使用在 } 号后添加一个换行 的风格，使代码层次结构更清晰，阅读性更好。<br>示例：<br><br>if (condition) {<br>    // some statements;<br>}<br>else {<br>    // some statements;<br>}<br>try {<br>    // some statements;<br>}<br>catch (ex) {<br>    // some statements;<br>}<br>2.2.4 语句<br>[强制] 不得省略语句结束的分号。<br>[强制] 在 if / else / for / do / while 语句中，即使只有一行，也不得省略块 {...}。<br>示例：<br><br>// good<br>if (condition) {<br>    callFunc();<br>}<br>// bad<br>if (condition) callFunc();<br>if (condition)<br>    callFunc();<br>[强制] 函数定义结束不允许添加分号。<br>示例：<br><br>// good<br>function funcName() {<br>}<br>// bad<br>function funcName() {<br>};<br>// 如果是函数表达式，分号是不允许省略的。<br>var funcName = function () {<br>};<br>[强制] IIFE 必须在函数表达式外添加 (，非 IIFE 不得在函数表达式外添加 (。<br>解释：<br><br>IIFE = Immediately-Invoked Function Expression.<br><br>额外的 ( 能够让代码在阅读的一开始就能判断函数是否立即被调用，进而明白接下来代码的用途。而不是一直拖到底部才恍然大悟。<br><br>示例：<br><br>// good<br>var task = (function () {<br>   // Code<br>   return result;<br>})();<br>var func = function () {<br>};<br>// bad<br>var task = function () {<br>    // Code<br>    return result;<br>}();<br>var func = (function () {<br>});<br>2.3 命名<br>[强制] 变量 使用 Camel命名法。<br>示例：<br><br>var loadingModules = {};<br>[强制] 常量 使用 全部字母大写，单词间下划线分隔 的命名方式。<br>示例：<br><br>var HTML_ENTITY = {};<br>[强制] 函数 使用 Camel命名法。<br>示例：<br><br>function stringFormat(source) {<br>}<br>[强制] 函数的 参数 使用 Camel命名法。<br>示例：<br><br>function hear(theBells) {<br>}<br>[强制] 类 使用 Pascal命名法。<br>示例：<br><br>function TextNode(options) {<br>}<br>[强制] 类的 方法 / 属性 使用 Camel命名法。<br>示例：<br><br>function TextNode(value, engine) {<br>    this.value = value;<br>    this.engine = engine;<br>}<br>TextNode.prototype.clone = function () {<br>    return this;<br>};<br>[强制] 枚举变量 使用 Pascal命名法，枚举的属性 使用 全部字母大写，单词间下划线分隔 的命名方式。<br>示例：<br><br>var TargetState = {<br>    READING: 1,<br>    READED: 2,<br>    APPLIED: 3,<br>    READY: 4<br>};<br>[强制] 命名空间 使用 Camel命名法。<br>示例：<br><br>equipments.heavyWeapons = {};<br>[强制] 由多个单词组成的缩写词，在命名中，根据当前命名法和出现的位置，所有字母的大小写与首字母的大小写保持一致。<br>示例：<br><br>function XMLParser() {<br>}<br>function insertHTML(element, html) {<br>}<br>var httpRequest = new HTTPRequest();<br>[强制] 类名 使用 名词。<br>示例：<br><br>function Engine(options) {<br>}<br>[建议] 函数名 使用 动宾短语。<br>示例：<br><br>function getStyle(element) {<br>}<br>[建议] boolean 类型的变量使用 is 或 has 开头。<br>示例：<br><br>var isReady = false;<br>var hasMoreCommands = false;<br>[建议] Promise对象 用 动宾短语的进行时 表达。<br>示例：<br><br>var loadingData = ajax.get(\'url\');<br>loadingData.then(callback);<br>2.4 注释<br>2.4.1 单行注释<br>[强制] 必须独占一行。// 后跟一个空格，缩进与下一行被注释说明的代码一致。<br>2.4.2 多行注释<br>[建议] 避免使用 /*...*/ 这样的多行注释。有多行注释内容时，使用多个单行注释。<br>2.4.3 文档化注释<br>[强制] 为了便于代码阅读和自文档化，以下内容必须包含以 /**...*/ 形式的块注释中。<br>解释：<br><br>文件<br>namespace<br>类<br>函数或方法<br>类属性<br>事件<br>全局变量<br>常量<br>AMD 模块<br>[强制] 文档注释前必须空一行。<br>[建议] 自文档化的文档说明 what，而不是 how。<br>2.4.4 类型定义<br>[强制] 类型定义都是以{开始, 以}结束。<br>解释：<br><br>常用类型如：{string}, {number}, {boolean}, {Object}, {Function}, {RegExp}, {Array}, {Date}。<br><br>类型不仅局限于内置的类型，也可以是自定义的类型。比如定义了一个类 Developer，就可以使用它来定义一个参数和返回值的类型。<br><br>[强制] 对于基本类型 {string}, {number}, {boolean}，首字母必须小写。<br>类型定义\t语法示例\t解释<br>String\t{string}\t—<br>Number\t{number}\t—<br>Boolean\t{boolean}\t—<br>Object\t{Object}\t—<br>Function\t{Function}\t—<br>RegExp\t{RegExp}\t—<br>Array\t{Array}\t—<br>Date\t{Date}\t—<br>单一类型集合\t{Array.&lt;string&gt;}\tstring 类型的数组<br>多类型\t{(number｜boolean)}\t可能是 number 类型, 也可能是 boolean 类型<br>允许为null\t{?number}\t可能是 number, 也可能是 null<br>不允许为null\t{!Object}\tObject 类型, 但不是 null<br>Function类型\t{function(number, boolean)}\t函数, 形参类型<br>Function带返回值\t{function(number, boolean):string}\t函数, 形参, 返回值类型<br>参数可选\t@param {string=} name\t可选参数, =为类型后缀<br>可变参数\t@param {…number} args\t变长参数, …为类型前缀<br>任意类型\t{*}\t任意类型<br>可选任意类型\t@param {*=} name\t可选参数，类型不限<br>可变任意类型\t@param {…*} args\t变长参数，类型不限<br>2.4.5 文件注释<br>[强制] 文件顶部必须包含文件注释，用 @file 标识文件说明。<br>示例：<br><br>/**<br> * @file Describe the file<br> */<br>[建议] 文件注释中可以用 @author 标识开发者信息。<br>解释：<br><br>开发者信息能够体现开发人员对文件的贡献，并且能够让遇到问题或希望了解相关信息的人找到维护人。通常情况文件在被创建时标识的是创建者。随着项目的进展，越来越多的人加入，参与这个文件的开发，新的作者应该被加入 @author 标识。<br><br>@author 标识具有多人时，原则是按照 责任 进行排序。通常的说就是如果有问题，就是找第一个人应该比找第二个人有效。比如文件的创建者由于各种原因，模块移交给了其他人或其他团队，后来因为新增需求，其他人在新增代码时，添加 @author 标识应该把自己的名字添加在创建人的前面。<br><br>@author 中的名字不允许被删除。任何劳动成果都应该被尊重。<br><br>业务项目中，一个文件可能被多人频繁修改，并且每个人的维护时间都可能不会很长，不建议为文件增加 @author 标识。通过版本控制系统追踪变更，按业务逻辑单元确定模块的维护责任人，通过文档与wiki跟踪和查询，是更好的责任管理方式。<br><br>对于业务逻辑无关的技术型基础项目，特别是开源的公共项目，应使用 @author 标识。<br><br>示例：<br><br>/**<br> * @file Describe the file<br> * @author author-name(mail-name@domain.com)<br> *         author-name2(mail-name2@domain.com)<br> */<br>2.4.6 命名空间注释<br>[建议] 命名空间使用 @namespace 标识。<br>示例：<br><br>/**<br> * @namespace<br> */<br>var util = {};<br>2.4.7 类注释<br>[建议] 使用 @class 标记类或构造函数。<br>解释：<br><br>对于使用对象 constructor 属性来定义的构造函数，可以使用 @constructor 来标记。<br><br>示例：<br><br>/**<br> * 描述<br> *<br> * @class<br> */<br>function Developer() {<br>    // constructor body<br>}<br>[建议] 使用 @extends 标记类的继承信息。<br>示例：<br><br>/**<br> * 描述<br> *<br> * @class<br> * @extends Developer<br> */<br>function Fronteer() {<br>    Developer.call(this);<br>    // constructor body<br>}<br>util.inherits(Fronteer, Developer);<br>[强制] 使用包装方式扩展类成员时， 必须通过 @lends 进行重新指向。<br>解释：<br><br>没有 @lends 标记将无法为该类生成包含扩展类成员的文档。<br><br>示例：<br><br>/**<br> * 类描述<br> *<br> * @class<br> * @extends Developer<br> */<br>function Fronteer() {<br>    Developer.call(this);<br>    // constructor body<br>}<br>util.extend(<br>    Fronteer.prototype,<br>    /** @lends Fronteer.prototype */{<br>        _getLevel: function () {<br>            // TODO<br>        }<br>    }<br>);<br>[强制] 类的属性或方法等成员信息使用 @public / @protected / @private 中的任意一个，指明可访问性。<br>解释：<br><br>生成的文档中将有可访问性的标记，避免用户直接使用非 public 的属性或方法。<br><br>示例：<br><br>/**<br> * 类描述<br> *<br> * @class<br> * @extends Developer<br> */<br>var Fronteer = function () {<br>    Developer.call(this);<br>    /**<br>     * 属性描述<br>     *<br>     * @type {string}<br>     * @private<br>     */<br>    this._level = \'T12\';<br>    // constructor body<br>};<br>util.inherits(Fronteer, Developer);<br>/**<br> * 方法描述<br> *<br> * @private<br> * @return {string} 返回值描述<br> */<br>Fronteer.prototype._getLevel = function () {<br>};<br>2.4.8 函数/方法注释<br>[强制] 函数/方法注释必须包含函数说明，有参数和返回值时必须使用注释标识。<br>[强制] 参数和返回值注释必须包含类型信息和说明。<br>[建议] 当函数是内部函数，外部不可访问时，可以使用 @inner 标识。<br>示例：<br><br>/**<br> * 函数描述<br> *<br> * @param {string} p1 参数1的说明<br> * @param {string} p2 参数2的说明，比较长<br> *     那就换行了.<br> * @param {number=} p3 参数3的说明（可选）<br> * @return {Object} 返回值描述<br> */<br>function foo(p1, p2, p3) {<br>    var p3 = p3 || 10;<br>    return {<br>        p1: p1,<br>        p2: p2,<br>        p3: p3<br>    };<br>}<br>[强制] 对 Object 中各项的描述， 必须使用 @param 标识。<br>示例：<br><br>/**<br> * 函数描述<br> *<br> * @param {Object} option 参数描述<br> * @param {string} option.url option项描述<br> * @param {string=} option.method option项描述，可选参数<br> */<br>function foo(option) {<br>    // TODO<br>}<br>[建议] 重写父类方法时， 应当添加 @override 标识。如果重写的形参个数、类型、顺序和返回值类型均未发生变化，可省略 @param、@return，仅用 @override 标识，否则仍应作完整注释。<br>解释：<br><br>简而言之，当子类重写的方法能直接套用父类的方法注释时可省略对参数与返回值的注释。<br><br>2.4.9 事件注释<br>[强制] 必须使用 @event 标识事件，事件参数的标识与方法描述的参数标识相同。<br>示例：<br><br>/**<br> * 值变更时触发<br> *<br> * @event<br> * @param {Object} e e描述<br> * @param {string} e.before before描述<br> * @param {string} e.after after描述<br> */<br>onchange: function (e) {<br>}<br>[强制] 在会广播事件的函数前使用 @fires 标识广播的事件，在广播事件代码前使用 @event 标识事件。<br>[建议] 对于事件对象的注释，使用 @param 标识，生成文档时可读性更好。<br>示例：<br><br>/**<br> * 点击处理<br> *<br> * @fires Select#change<br> * @private<br> */<br>Select.prototype.clickHandler = function () {<br>    /**<br>     * 值变更时触发<br>     *<br>     * @event Select#change<br>     * @param {Object} e e描述<br>     * @param {string} e.before before描述<br>     * @param {string} e.after after描述<br>     */<br>    this.fire(<br>        \'change\',<br>        {<br>            before: \'foo\',<br>            after: \'bar\'<br>        }<br>    );<br>};<br>2.4.10 常量注释<br>[强制] 常量必须使用 @const 标记，并包含说明和类型信息。<br>示例：<br><br>/**<br> * 常量说明<br> *<br> * @const<br> * @type {string}<br> */<br>var REQUEST_URL = \'myurl.do\';<br>2.4.11 复杂类型注释<br>[建议] 对于类型未定义的复杂结构的注释，可以使用 @typedef 标识来定义。<br>示例：<br><br>// `namespaceA~` 可以换成其它 namepaths 前缀，目的是为了生成文档中能显示 `@typedef` 定义的类型和链接。<br>/**<br> * 服务器<br> *<br> * @typedef {Object} namespaceA~Server<br> * @property {string} host 主机<br> * @property {number} port 端口<br> */<br>/**<br> * 服务器列表<br> *<br> * @type {Array.&lt;namespaceA~Server&gt;}<br> */<br>var servers = [<br>    {<br>        host: \'1.2.3.4\',<br>        port: 8080<br>    },<br>    {<br>        host: \'1.2.3.5\',<br>        port: 8081<br>    }<br>];<br>2.4.12 AMD 模块注释<br>[强制] AMD 模块使用 @module 或 @exports 标识。<br>解释：<br><br>@exports 与 @module 都可以用来标识模块，区别在于 @module 可以省略模块名称。而只使用 @exports 时在 namepaths 中可以省略 module: 前缀。<br><br>示例：<br><br>define(<br>    function (require) {<br>        /**<br>         * foo description<br>         *<br>         * @exports Foo<br>         */<br>        var foo = {<br>            // TODO<br>        };<br>        /**<br>         * baz description<br>         *<br>         * @return {boolean} return description<br>         */<br>        foo.baz = function () {<br>            // TODO<br>        };<br>        return foo;<br>    }<br>);<br>也可以在 exports 变量前使用 @module 标识：<br><br>define(<br>    function (require) {<br>        /**<br>         * module description.<br>         *<br>         * @module foo<br>         */<br>        var exports = {};<br>        /**<br>         * bar description<br>         *<br>         */<br>        exports.bar = function () {<br>            // TODO<br>        };<br>        return exports;<br>    }<br>);<br>如果直接使用 factory 的 exports 参数，还可以：<br><br>/**<br> * module description.<br> *<br> * @module<br> */<br>define(<br>    function (require, exports) {<br>        /**<br>         * bar description<br>         *<br>         */<br>        exports.bar = function () {<br>            // TODO<br>        };<br>        return exports;<br>    }<br>);<br>[强制] 对于已使用 @module 标识为 AMD模块 的引用，在 namepaths 中必须增加 module: 作前缀。<br>解释：<br><br>namepaths 没有 module: 前缀时，生成的文档中将无法正确生成链接。<br><br>示例：<br><br>/**<br> * 点击处理<br> *<br> * @fires module:Select#change<br> * @private<br> */<br>Select.prototype.clickHandler = function () {<br>    /**<br>     * 值变更时触发<br>     *<br>     * @event module:Select#change<br>     * @param {Object} e e描述<br>     * @param {string} e.before before描述<br>     * @param {string} e.after after描述<br>     */<br>    this.fire(<br>        \'change\',<br>        {<br>            before: \'foo\',<br>            after: \'bar\'<br>        }<br>    );<br>};<br>[建议] 对于类定义的模块，可以使用 @alias 标识构建函数。<br>示例：<br><br>/**<br> * A module representing a jacket.<br> * @module jacket<br> */<br>define(<br>    function () {<br>        /**<br>         * @class<br>         * @alias module:jacket<br>         */<br>        var Jacket = function () {<br>        };<br>        return Jacket;<br>    }<br>);<br>[建议] 多模块定义时，可以使用 @exports 标识各个模块。<br>示例：<br><br>// one module<br>define(\'html/utils\',<br>    /**<br>     * Utility functions to ease working with DOM elements.<br>     * @exports html/utils<br>     */<br>    function () {<br>        var exports = {<br>        };<br>        return exports;<br>    }<br>);<br>// another module<br>define(\'tag\',<br>    /** @exports tag */<br>    function () {<br>        var exports = {<br>        };<br>        return exports;<br>    }<br>);<br>[建议] 对于 exports 为 Object 的模块，可以使用@namespace标识。<br>解释：<br><br>使用 @namespace 而不是 @module 或 @exports 时，对模块的引用可以省略 module: 前缀。<br><br>[建议] 对于 exports 为类名的模块，使用 @class 和 @exports 标识。<br>示例：<br><br>// 只使用 @class Bar 时，类方法和属性都必须增加 @name Bar#methodName 来标识，与 @exports 配合可以免除这一麻烦，并且在引用时可以省去 module: 前缀。<br>// 另外需要注意类名需要使用 var 定义的方式。<br>/**<br> * Bar description<br> *<br> * @see foo<br> * @exports  Bar<br> * @class<br> */<br>var Bar = function () {<br>    // TODO<br>};<br>/**<br> * baz description<br> *<br> * @return {(string|Array)} return description<br> */<br>Bar.prototype.baz = function () {<br>    // TODO<br>};<br>2.4.13 细节注释<br>对于内部实现、不容易理解的逻辑说明、摘要信息等，我们可能需要编写细节注释。<br><br>[建议] 细节注释遵循单行注释的格式。说明必须换行时，每行是一个单行注释的起始。<br>示例：<br><br>function foo(p1, p2, opt_p3) {<br>    // 这里对具体内部逻辑进行说明<br>    // 说明太长需要换行<br>    for (...) {<br>        ....<br>    }<br>}<br>[强制] 有时我们会使用一些特殊标记进行说明。特殊标记必须使用单行注释的形式。下面列举了一些常用标记：<br>解释：<br><br>TODO: 有功能待实现。此时需要对将要实现的功能进行简单说明。<br>FIXME: 该处代码运行没问题，但可能由于时间赶或者其他原因，需要修正。此时需要对如何修正进行简单说明。<br>HACK: 为修正某些问题而写的不太好或者使用了某些诡异手段的代码。此时需要对思路或诡异手段进行描述。<br>XXX: 该处存在陷阱。此时需要对陷阱进行描述。<br>3 语言特性<br>3.1 变量<br>[强制] 变量在使用前必须通过 var 定义。<br>解释：<br><br>不通过 var 定义变量将导致变量污染全局环境。<br><br>示例：<br><br>// good<br>var name = \'MyName\';<br>// bad<br>name = \'MyName\';<br>[强制] 每个 var 只能声明一个变量。<br>解释：<br><br>一个 var 声明多个变量，容易导致较长的行长度，并且在修改时容易造成逗号和分号的混淆。<br><br>示例：<br><br>// good<br>var hangModules = [];<br>var missModules = [];<br>var visited = {};<br>// bad<br>var hangModules = [],<br>    missModules = [],<br>    visited = {};<br>[强制] 变量必须 即用即声明，不得在函数或其它形式的代码块起始位置统一声明所有变量。<br>解释：<br><br>变量声明与使用的距离越远，出现的跨度越大，代码的阅读与维护成本越高。虽然JavaScript的变量是函数作用域，还是应该根据编程中的意图，缩小变量出现的距离空间。<br><br>示例：<br><br>// good<br>function kv2List(source) {<br>    var list = [];<br>    for (var key in source) {<br>        if (source.hasOwnProperty(key)) {<br>            var item = {<br>                k: key,<br>                v: source[key]<br>            };<br>            list.push(item);<br>        }<br>    }<br>    return list;<br>}<br>// bad<br>function kv2List(source) {<br>    var list = [];<br>    var key;<br>    var item;<br>    for (key in source) {<br>        if (source.hasOwnProperty(key)) {<br>            item = {<br>                k: key,<br>                v: source[key]<br>            };<br>            list.push(item);<br>        }<br>    }<br>    return list;<br>}<br>3.2 条件<br>[强制] 在 Equality Expression 中使用类型严格的 ===。仅当判断 null 或 undefined 时，允许使用 == null。<br>解释：<br><br>使用 === 可以避免等于判断中隐式的类型转换。<br><br>示例：<br><br>// good<br>if (age === 30) {<br>    // ......<br>}<br>// bad<br>if (age == 30) {<br>    // ......<br>}<br>[建议] 尽可能使用简洁的表达式。<br>示例：<br><br>// 字符串为空<br>// good<br>if (!name) {<br>    // ......<br>}<br>// bad<br>if (name === \'\') {<br>    // ......<br>}<br>// 字符串非空<br>// good<br>if (name) {<br>    // ......<br>}<br>// bad<br>if (name !== \'\') {<br>    // ......<br>}<br>// 数组非空<br>// good<br>if (collection.length) {<br>    // ......<br>}<br>// bad<br>if (collection.length &gt; 0) {<br>    // ......<br>}<br>// 布尔不成立<br>// good<br>if (!notTrue) {<br>    // ......<br>}<br>// bad<br>if (notTrue === false) {<br>    // ......<br>}<br>// null 或 undefined<br>// good<br>if (noValue == null) {<br>  // ......<br>}<br>// bad<br>if (noValue === null || typeof noValue === \'undefined\') {<br>  // ......<br>}<br>[建议] 按执行频率排列分支的顺序。<br>解释：<br><br>按执行频率排列分支的顺序好处是：<br><br>阅读的人容易找到最常见的情况，增加可读性。<br>提高执行效率。<br>[建议] 对于相同变量或表达式的多值条件，用 switch 代替 if。<br>示例：<br><br>// good<br>switch (typeof variable) {<br>    case \'object\':<br>        // ......<br>        break;<br>    case \'number\':<br>    case \'boolean\':<br>    case \'string\':<br>        // ......<br>        break;<br>}<br>// bad<br>var type = typeof variable;<br>if (type === \'object\') {<br>    // ......<br>} <br>else if (type === \'number\' || type === \'boolean\' || type === \'string\') {<br>    // ......<br>}<br>[建议] 如果函数或全局中的 else 块后没有任何语句，可以删除 else。<br>示例：<br><br>// good<br>function getName() {<br>    if (name) {<br>        return name;<br>    }<br>    return \'unnamed\';<br>}<br>// bad<br>function getName() {<br>    if (name) {<br>        return name;<br>    }<br>    else {<br>        return \'unnamed\';<br>    }<br>}<br>3.3 循环<br>[建议] 不要在循环体中包含函数表达式，事先将函数提取到循环体外。<br>解释：<br><br>循环体中的函数表达式，运行过程中会生成循环次数个函数对象。<br><br>示例：<br><br>// good<br>function clicker() {<br>    // ......<br>}<br>for (var i = 0, len = elements.length; i &lt; len; i++) {<br>    var element = elements[i];<br>    addListener(element, \'click\', clicker);<br>}<br>// bad<br>for (var i = 0, len = elements.length; i &lt; len; i++) {<br>    var element = elements[i];<br>    addListener(element, \'click\', function () {});<br>}<br>[建议] 对循环内多次使用的不变值，在循环外用变量缓存。<br>示例：<br><br>// good<br>var width = wrap.offsetWidth + \'px\';<br>for (var i = 0, len = elements.length; i &lt; len; i++) {<br>    var element = elements[i];<br>    element.style.width = width;<br>    // ......<br>}<br>// bad<br>for (var i = 0, len = elements.length; i &lt; len; i++) {<br>    var element = elements[i];<br>    element.style.width = wrap.offsetWidth + \'px\';<br>    // ......<br>}<br>[建议] 对有序集合进行遍历时，缓存 length。<br>解释：<br><br>虽然现代浏览器都对数组长度进行了缓存，但对于一些宿主对象和老旧浏览器的数组对象，在每次 length 访问时会动态计算元素个数，此时缓存 length 能有效提高程序性能。<br><br>示例：<br><br>for (var i = 0, len = elements.length; i &lt; len; i++) {<br>    var element = elements[i];<br>    // ......<br>}<br>[建议] 对有序集合进行顺序无关的遍历时，使用逆序遍历。<br>解释：<br><br>逆序遍历可以节省变量，代码比较优化。<br><br>示例：<br><br>var len = elements.length;<br>while (len--) {<br>    var element = elements[len];<br>    // ......<br>}<br>3.4 类型<br>3.4.1 类型检测<br>[建议] 类型检测优先使用 typeof。对象类型检测使用 instanceof。null 或 undefined 的检测使用 == null。<br>示例：<br><br>// string<br>typeof variable === \'string\'<br>// number<br>typeof variable === \'number\'<br>// boolean<br>typeof variable === \'boolean\'<br>// Function<br>typeof variable === \'function\'<br>// Object<br>typeof variable === \'object\'<br>// RegExp<br>variable instanceof RegExp<br>// Array<br>variable instanceof Array<br>// null<br>variable === null<br>// null or undefined<br>variable == null<br>// undefined<br>typeof variable === \'undefined\'<br>3.4.2 类型转换<br>[建议] 转换成 string 时，使用 + \'\'。<br>示例：<br><br>// good<br>num + \'\';<br>// bad<br>new String(num);<br>num.toString();<br>String(num);<br>[建议] 转换成 number 时，通常使用 +。<br>示例：<br><br>// good<br>+str;<br>// bad<br>Number(str);<br>[建议] string 转换成 number，要转换的字符串结尾包含非数字并期望忽略时，使用 parseInt。<br>示例：<br><br>var width = \'200px\';<br>parseInt(width, 10);<br>[强制] 使用 parseInt 时，必须指定进制。<br>示例：<br><br>// good<br>parseInt(str, 10);<br>// bad<br>parseInt(str);<br>[建议] 转换成 boolean 时，使用 !!。<br>示例：<br><br>var num = 3.14;<br>!!num;<br>[建议] number 去除小数点，使用 Math.floor / Math.round / Math.ceil，不使用 parseInt。<br>示例：<br><br>// good<br>var num = 3.14;<br>Math.ceil(num);<br>// bad<br>var num = 3.14;<br>parseInt(num, 10);<br>3.5 字符串<br>[强制] 字符串开头和结束使用单引号 \'。<br>解释：<br><br>输入单引号不需要按住 shift，方便输入。<br>实际使用中，字符串经常用来拼接 HTML。为方便 HTML 中包含双引号而不需要转义写法。<br>示例：<br><br>var str = \'我是一个字符串\';<br>var html = \'&lt;div class=\"cls\"&gt;拼接HTML可以省去双引号转义&lt;/div&gt;\';<br>[建议] 使用 数组 或 + 拼接字符串。<br>解释：<br><br>使用 + 拼接字符串，如果拼接的全部是 StringLiteral，压缩工具可以对其进行自动合并的优化。所以，静态字符串建议使用 + 拼接。<br>在现代浏览器下，使用 + 拼接字符串，性能较数组的方式要高。<br>如需要兼顾老旧浏览器，应尽量使用数组拼接字符串。<br>示例：<br><br>// 使用数组拼接字符串<br>var str = [<br>    // 推荐换行开始并缩进开始第一个字符串, 对齐代码, 方便阅读.<br>    \'&lt;ul&gt;\',<br>        \'&lt;li&gt;第一项&lt;/li&gt;\',<br>        \'&lt;li&gt;第二项&lt;/li&gt;\',<br>    \'&lt;/ul&gt;\'<br>].join(\'\');<br>// 使用 + 拼接字符串<br>var str2 = \'\' // 建议第一个为空字符串, 第二个换行开始并缩进开始, 对齐代码, 方便阅读<br>    + \'&lt;ul&gt;\',<br>    +    \'&lt;li&gt;第一项&lt;/li&gt;\',<br>    +    \'&lt;li&gt;第二项&lt;/li&gt;\',<br>    + \'&lt;/ul&gt;\';<br>[建议] 复杂的数据到视图字符串的转换过程，选用一种模板引擎。<br>解释：<br><br>使用模板引擎有如下好处：<br><br>在开发过程中专注于数据，将视图生成的过程由另外一个层级维护，使程序逻辑结构更清晰。<br>优秀的模板引擎，通过模板编译技术和高质量的编译产物，能获得比手工拼接字符串更高的性能。<br>artTemplate: 体积较小，在所有环境下性能高，语法灵活。<br>dot.js: 体积小，在现代浏览器下性能高，语法灵活。<br>etpl: 体积较小，在所有环境下性能高，模板复用性高，语法灵活。<br>handlebars: 体积大，在所有环境下性能高，扩展性高。<br>hogon: 体积小，在现代浏览器下性能高。<br>nunjucks: 体积较大，性能一般，模板复用性高。<br>3.6 对象<br>[强制] 使用对象字面量 {} 创建新 Object。<br>示例：<br><br>// good<br>var obj = {};<br>// bad<br>var obj = new Object();<br>[强制] 对象创建时，如果一个对象的所有 属性 均可以不添加引号，则所有 属性 不得添加引号。<br>示例：<br><br>var info = {<br>    name: \'someone\',<br>    age: 28<br>};<br>[强制] 对象创建时，如果任何一个 属性 需要添加引号，则所有 属性 必须添加 \'。<br>解释：<br><br>如果属性不符合 Identifier 和 NumberLiteral 的形式，就需要以 StringLiteral 的形式提供。<br><br>示例：<br><br>// good<br>var info = {<br>    \'name\': \'someone\',<br>    \'age\': 28,<br>    \'more-info\': \'...\'<br>};<br>// bad<br>var info = {<br>    name: \'someone\',<br>    age: 28,<br>    \'more-info\': \'...\'<br>};<br>[强制] 不允许修改和扩展任何原生对象和宿主对象的原型。<br>示例：<br><br>// 以下行为绝对禁止<br>String.prototype.trim = function () {<br>};<br>[建议] 属性访问时，尽量使用 .。<br>解释：<br><br>属性名符合 Identifier 的要求，就可以通过 . 来访问，否则就只能通过 [expr] 方式访问。<br><br>通常在 JavaScript 中声明的对象，属性命名是使用 Camel 命名法，用 . 来访问更清晰简洁。部分特殊的属性(比如来自后端的JSON)，可能采用不寻常的命名方式，可以通过 [expr] 方式访问。<br><br>示例：<br><br>info.age;<br>info[\'more-info\'];<br>[建议] for in 遍历对象时, 使用 hasOwnProperty 过滤掉原型中的属性。<br>示例：<br><br>var newInfo = {};<br>for (var key in info) {<br>    if (info.hasOwnProperty(key)) {<br>        newInfo[key] = info[key];<br>    }<br>}<br>3.7 数组<br>[强制] 使用数组字面量 [] 创建新数组，除非想要创建的是指定长度的数组。<br>示例：<br><br>// good<br>var arr = [];<br>// bad<br>var arr = new Array();<br>[强制] 遍历数组不使用 for in。<br>解释：<br><br>数组对象可能存在数字以外的属性, 这种情况下 for in 不会得到正确结果.<br><br>示例：<br><br>var arr = [\'a\', \'b\', \'c\'];<br>arr.other = \'other things\'; // 这里仅作演示, 实际中应使用Object类型<br>// 正确的遍历方式<br>for (var i = 0, len = arr.length; i &lt; len; i++) {<br>    console.log(i);<br>}<br>// 错误的遍历方式<br>for (i in arr) {<br>    console.log(i);<br>}<br>[建议] 不因为性能的原因自己实现数组排序功能，尽量使用数组的 sort 方法。<br>解释：<br><br>自己实现的常规排序算法，在性能上并不优于数组默认的 sort 方法。以下两种场景可以自己实现排序：<br><br>需要稳定的排序算法，达到严格一致的排序结果。<br>数据特点鲜明，适合使用桶排。<br>[建议] 清空数组使用 .length = 0。<br>3.8 函数<br>3.8.1 函数长度<br>[建议] 一个函数的长度控制在 50 行以内。<br>解释：<br><br>将过多的逻辑单元混在一个大函数中，易导致难以维护。一个清晰易懂的函数应该完成单一的逻辑单元。复杂的操作应进一步抽取，通过函数的调用来体现流程。<br><br>特定算法等不可分割的逻辑允许例外。<br><br>示例：<br><br>function syncViewStateOnUserAction() {<br>    if (x.checked) {<br>        y.checked = true;<br>        z.value = \'\';<br>    }<br>    else {<br>        y.checked = false;<br>    }<br>    if (!a.value) {<br>        warning.innerText = \'Please enter it\';<br>        submitButton.disabled = true;<br>    }<br>    else {<br>        warning.innerText = \'\';<br>        submitButton.disabled = false;<br>    }<br>}<br>// 直接阅读该函数会难以明确其主线逻辑，因此下方是一种更合理的表达方式：<br>function syncViewStateOnUserAction() {<br>    syncXStateToView();<br>    checkAAvailability();<br>}<br>function syncXStateToView() {<br>    if (x.checked) {<br>        y.checked = true;<br>        z.value = \'\';<br>    }<br>    else {<br>        y.checked = false;<br>    }<br>}<br>function checkAAvailability() {<br>    if (!a.value) {<br>        displayWarningForAMissing();<br>    }<br>    else {<br>        clearWarnignForA();<br>    }<br>}<br>3.8.2 参数设计<br>[建议] 一个函数的参数控制在 6 个以内。<br>解释：<br><br>除去不定长参数以外，函数具备不同逻辑意义的参数建议控制在 6 个以内，过多参数会导致维护难度增大。<br><br>某些情况下，如使用 AMD Loader 的 require 加载多个模块时，其 callback 可能会存在较多参数，因此对函数参数的个数不做强制限制。<br><br>[建议] 通过 options 参数传递非数据输入型参数。<br>解释：<br><br>有些函数的参数并不是作为算法的输入，而是对算法的某些分支条件判断之用，此类参数建议通过一个 options 参数传递。<br><br>如下函数：<br><br>/**<br> * 移除某个元素<br> *<br> * @param {Node} element 需要移除的元素<br> * @param {boolean} removeEventListeners 是否同时将所有注册在元素上的事件移除<br> */<br>function removeElement(element, removeEventListeners) {<br>    element.parent.removeChild(element);<br>    if (removeEventListeners) {<br>        element.clearEventListeners();<br>    }<br>}<br>可以转换为下面的签名：<br><br>/**<br> * 移除某个元素<br> *<br> * @param {Node} element 需要移除的元素<br> * @param {Object} options 相关的逻辑配置<br> * @param {boolean} options.removeEventListeners 是否同时将所有注册在元素上的事件移除<br> */<br>function removeElement(element, options) {<br>    element.parent.removeChild(element);<br>    if (options.removeEventListeners) {<br>        element.clearEventListeners();<br>    }<br>}<br>这种模式有几个显著的优势：<br><br>boolean 型的配置项具备名称，从调用的代码上更易理解其表达的逻辑意义。<br>当配置项有增长时，无需无休止地增加参数个数，不会出现 removeElement(element, true, false, false, 3) 这样难以理解的调用代码。<br>当部分配置参数可选时，多个参数的形式非常难处理重载逻辑，而使用一个 options 对象只需判断属性是否存在，实现得以简化。<br>3.8.3 闭包<br>[建议] 在适当的时候将闭包内大对象置为 null。<br>解释：<br><br>在 JavaScript 中，无需特别的关键词就可以使用闭包，一个函数可以任意访问在其定义的作用域外的变量。需要注意的是，函数的作用域是静态的，即在定义时决定，与调用的时机和方式没有任何关系。<br><br>闭包会阻止一些变量的垃圾回收，对于较老旧的JavaScript引擎，可能导致外部所有变量均无法回收。<br><br>首先一个较为明确的结论是，以下内容会影响到闭包内变量的回收：<br><br>嵌套的函数中是否有使用该变量。<br>嵌套的函数中是否有 直接调用eval。<br>是否使用了 with 表达式。<br>Chakra、V8 和 SpiderMonkey 将受以上因素的影响，表现出不尽相同又较为相似的回收策略，而JScript.dll和Carakan则完全没有这方面的优化，会完整保留整个 LexicalEnvironment 中的所有变量绑定，造成一定的内存消耗。<br><br>由于对闭包内变量有回收优化策略的 Chakra、V8 和 SpiderMonkey 引擎的行为较为相似，因此可以总结如下，当返回一个函数 fn 时：<br><br>如果 fn 的 [[Scope]] 是ObjectEnvironment（with 表达式生成 ObjectEnvironment，函数和 catch 表达式生成 DeclarativeEnvironment），则：<br>如果是 V8 引擎，则退出全过程。<br>如果是 SpiderMonkey，则处理该 ObjectEnvironment 的外层 LexicalEnvironment。<br>获取当前 LexicalEnvironment 下的所有类型为 Function 的对象，对于每一个 Function 对象，分析其 FunctionBody：<br>如果 FunctionBody 中含有 直接调用eval，则退出全过程。<br>否则得到所有的 Identifier。<br>对于每一个 Identifier，设其为 name，根据查找变量引用的规则，从 LexicalEnvironment 中找出名称为 name 的绑定 binding。<br>对 binding 添加 notSwap 属性，其值为 true。<br>检查当前 LexicalEnvironment 中的每一个变量绑定，如果该绑定有 notSwap 属性且值为 true，则：<br>如果是V8引擎，删除该绑定。<br>如果是SpiderMonkey，将该绑定的值设为 undefined，将删除 notSwap 属性。<br>对于Chakra引擎，暂无法得知是按 V8 的模式还是按 SpiderMonkey 的模式进行。<br><br>如果有 非常庞大 的对象，且预计会在 老旧的引擎 中执行，则使用闭包时，注意将闭包不需要的对象置为空引用。<br><br>[建议] 使用 IIFE 避免 Lift 效应。<br>解释：<br><br>在引用函数外部变量时，函数执行时外部变量的值由运行时决定而非定义时，最典型的场景如下：<br><br>var tasks = [];<br>for (var i = 0; i &lt; 5; i++) {<br>    tasks[tasks.length] = function () {<br>        console.log(\'Current cursor is at \' + i);<br>    };<br>}<br>var len = tasks.length;<br>while (len--) {<br>    tasks[len]();<br>}<br>以上代码对 tasks 中的函数的执行均会输出 Current cursor is at 5，往往不符合预期。<br><br>此现象称为 Lift 效应 。解决的方式是通过额外加上一层闭包函数，将需要的外部变量作为参数传递来解除变量的绑定关系：<br><br>var tasks = [];<br>for (var i = 0; i &lt; 5; i++) {<br>    // 注意有一层额外的闭包<br>    tasks[tasks.length] = (function (i) {<br>        return function () {<br>            console.log(\'Current cursor is at \' + i);<br>        };<br>    })(i);<br>}<br>var len = tasks.length;<br>while (len--) {<br>    tasks[len]();<br>}<br>3.8.4 空函数<br>[建议] 空函数不使用 new Function() 的形式。<br>示例：<br><br>var emptyFunction = function () {};<br>[建议] 对于性能有高要求的场合，建议存在一个空函数的常量，供多处使用共享。<br>示例：<br><br>var EMPTY_FUNCTION = function () {};<br>function MyClass() {<br>}<br>MyClass.prototype.abstractMethod = EMPTY_FUNCTION;<br>MyClass.prototype.hooks.before = EMPTY_FUNCTION;<br>MyClass.prototype.hooks.after = EMPTY_FUNCTION;<br>3.9 面向对象<br>[强制] 类的继承方案，实现时需要修正 constructor。<br>解释：<br><br>通常使用其他 library 的类继承方案都会进行 constructor 修正。如果是自己实现的类继承方案，需要进行 constructor 修正。<br><br>示例：<br><br>/**<br> * 构建类之间的继承关系<br> * <br> * @param {Function} subClass 子类函数<br> * @param {Function} superClass 父类函数<br> */<br>function inherits(subClass, superClass) {<br>    var F = new Function();<br>    F.prototype = superClass.prototype;<br>    subClass.prototype = new F();<br>    subClass.prototype.constructor = subClass;<br>}<br>[建议] 声明类时，保证 constructor 的正确性。<br>示例：<br><br>function Animal(name) {<br>    this.name = name;<br>}<br>// 直接prototype等于对象时，需要修正constructor<br>Animal.prototype = {<br>    constructor: Animal,<br>    jump: function () {<br>        alert(\'animal \' + this.name + \' jump\');<br>    }<br>};<br>// 这种方式扩展prototype则无需理会constructor<br>Animal.prototype.jump = function () {<br>    alert(\'animal \' + this.name + \' jump\');<br>};<br>[建议] 属性在构造函数中声明，方法在原型中声明。<br>解释：<br><br>原型对象的成员被所有实例共享，能节约内存占用。所以编码时我们应该遵守这样的原则：原型对象包含程序不会修改的成员，如方法函数或配置项。<br><br>function TextNode(value, engine) {<br>    this.value = value;<br>    this.engine = engine;<br>}<br>TextNode.prototype.clone = function () {<br>    return this;<br>};<br>[强制] 自定义事件的 事件名 必须全小写。<br>解释：<br><br>在 JavaScript 广泛应用的浏览器环境，绝大多数 DOM 事件名称都是全小写的。为了遵循大多数 JavaScript 开发者的习惯，在设计自定义事件时，事件名也应该全小写。<br><br>[强制] 自定义事件只能有一个 event 参数。如果事件需要传递较多信息，应仔细设计事件对象。<br>解释：<br><br>一个事件对象的好处有：<br><br>顺序无关，避免事件监听者需要记忆参数顺序。<br>每个事件信息都可以根据需要提供或者不提供，更自由。<br>扩展方便，未来添加事件信息时，无需考虑会破坏监听器参数形式而无法向后兼容。<br>[建议] 设计自定义事件时，应考虑禁止默认行为。<br>解释：<br><br>常见禁止默认行为的方式有两种：<br><br>事件监听函数中 return false。<br>事件对象中包含禁止默认行为的方法，如 preventDefault。<br>3.10 动态特性<br>3.10.1 eval<br>[强制] 避免使用直接 eval 函数。<br>解释：<br><br>直接 eval，指的是以函数方式调用 eval 的调用方法。直接 eval 调用执行代码的作用域为本地作用域，应当避免。<br><br>如果有特殊情况需要使用直接 eval，需在代码中用详细的注释说明为何必须使用直接 eval，不能使用其它动态执行代码的方式，同时需要其他资深工程师进行 Code Review。<br><br>[建议] 尽量避免使用 eval 函数。<br>3.10.2 动态执行代码<br>[建议] 使用 new Function 执行动态代码。<br>解释：<br><br>通过 new Function 生成的函数作用域是全局使用域，不会影响当当前的本地作用域。如果有动态代码执行的需求，建议使用 new Function。<br><br>示例：<br><br>var handler = new Function(\'x\', \'y\', \'return x + y;\');<br>var result = handler($(\'#x\').val(), $(\'#y\').val());<br>3.10.3 with<br>[建议] 尽量不要使用 with。<br>解释：<br><br>使用 with 可能会增加代码的复杂度，不利于阅读和管理；也会对性能有影响。大多数使用 with 的场景都能使用其他方式较好的替代。所以，尽量不要使用 with。<br><br>3.10.4 delete<br>[建议] 减少 delete 的使用。<br>解释：<br><br>如果没有特别的需求，减少或避免使用delete。delete的使用会破坏部分 JavaScript 引擎的性能优化。<br><br>[建议] 处理 delete 可能产生的异常。<br>解释：<br><br>对于有被遍历需求，且值 null 被认为具有业务逻辑意义的值的对象，移除某个属性必须使用 delete 操作。<br><br>在严格模式或IE下使用 delete 时，不能被删除的属性会抛出异常，因此在不确定属性是否可以删除的情况下，建议添加 try-catch 块。<br><br>示例：<br><br>try {<br>    delete o.x;<br>}<br>catch (deleteError) {<br>    o.x = null;<br>}<br>3.10.5 对象属性<br>[建议] 避免修改外部传入的对象。<br>解释：<br><br>JavaScript 因其脚本语言的动态特性，当一个对象未被 seal 或 freeze 时，可以任意添加、删除、修改属性值。<br><br>但是随意地对 非自身控制的对象 进行修改，很容易造成代码在不可预知的情况下出现问题。因此，设计良好的组件、函数应该避免对外部传入的对象的修改。<br><br>下面代码的 selectNode 方法修改了由外部传入的 datasource 对象。如果 datasource 用在其它场合（如另一个 Tree 实例）下，会造成状态的混乱。<br><br>function Tree(datasource) {<br>    this.datasource = datasource;<br>}<br>Tree.prototype.selectNode = function (id) {<br>    // 从datasource中找出节点对象<br>    var node = this.findNode(id);<br>    if (node) {<br>        node.selected = true;<br>        this.flushView();<br>    }<br>};<br>对于此类场景，需要使用额外的对象来维护，使用由自身控制，不与外部产生任何交互的 selectedNodeIndex 对象来维护节点的选中状态，不对 datasource 作任何修改。<br><br>function Tree(datasource) {<br>    this.datasource = datasource;<br>    this.selectedNodeIndex = {};<br>}<br>Tree.prototype.selectNode = function (id) {<br>    // 从datasource中找出节点对象<br>    var node = this.findNode(id);<br>    if (node) {<br>        this.selectedNodeIndex[i','2020-12-14 11:58:58'),(26,6,1,'服务器搭建','<h1>为什么用搬瓦工</h1><p>我们一般可以选择下载安装VirtualBox<br><img src=\"https://static.bookstack.cn/projects/demo2/153b1bc47fa00671.png\" alt=\"服务器搭建 - 图1\"><br>或是其他虚拟机来安装linux. 但是通常我不会这样做。</p><ol><li>因为家用电脑虚拟机安装linux后在公司无法访问</li><li>也是因为第一点,公司或家里,无法真正的当做一个不关机的服务器来使用,24小时连接数据库(等)</li><li>有时候做的东西临时要发布给别人看,通过链接的方式是最方便快捷的。虚拟机此时就无能为力了，一台linux就是你需要的。</li></ol><h1><a></a>注册购买搬瓦工</h1><p>搬瓦工(音译)国外服务器网站<br>可以购买很性价比很高的服务器,目前最低配的是<code>20$/年</code><br>访问&nbsp;<a href=\"https://bwh1.net/\">https://bwh1.net</a><br><img src=\"https://static.bookstack.cn/projects/demo2/153b1ba31db42340.png\" alt=\"服务器搭建 - 图2\"></p><ol><li><p>点击右上角的注册按钮(register)<br><img src=\"https://static.bookstack.cn/projects/demo2/153b1c0b12c17cda.png\" alt=\"服务器搭建 - 图3\"></p></li><li><p>填写注册信息<br><img src=\"https://static.bookstack.cn/projects/demo2/153b1c660036759e.png\" alt=\"服务器搭建 - 图4\"></p></li><li><p>登录<br><img src=\"https://static.bookstack.cn/projects/demo2/153b1c72a89460be.png\" alt=\"服务器搭建 - 图5\"></p></li><li><p>登录完成首页<br><img src=\"https://static.bookstack.cn/projects/demo2/153b1c96060a24c5.png\" alt=\"服务器搭建 - 图6\"></p></li><li><p>点击&nbsp;<code>Service</code>下的&nbsp;<code>MyService</code>查看自己购买服务<br><img src=\"https://static.bookstack.cn/projects/demo2/153b1ca56b37abb4.png\" alt=\"服务器搭建 - 图7\"><br><img src=\"https://static.bookstack.cn/projects/demo2/153b1cac6bdbead9.png\" alt=\"服务器搭建 - 图8\"><br>若没有主机则可以点击Home在首页购买(支持支付宝)</p></li></ol><h1><a></a>进入linux服务器</h1><p>当购买完成后,进入<code>Service</code>下的<code>MyService</code><br><img src=\"https://static.bookstack.cn/projects/demo2/153b1d0c24ac0a43.png\" alt=\"服务器搭建 - 图9\"><br>点击控制面板(control panel)进入管理页面<br><img src=\"https://static.bookstack.cn/projects/demo2/153b1da730b95c31.png\" alt=\"服务器搭建 - 图10\"><br><img src=\"https://static.bookstack.cn/projects/demo2/153b1da0cc39d07e.png\" alt=\"服务器搭建 - 图11\"></p>','2020-12-14 15:06:32'),(27,6,2,'mysql安装','<p><a href=\"https://bwh1.net 官网<br/><br/>进入你的服务器后台<br/><br/>Root shell - basic<br/>Root shell - advanced<br/>Root shell -interactive<br/>install new Os 重装系统<br/>这里一般默认就是centos<br/>我们运行 RootShell-interactive 交互性命令行 ,因为一般涉及到中断型的命令(例如 确认安装软件包等操作)<br/><br/>mysql安装 - 图1<br/><br/>mysql安装 - 图2<br/><br/>更新软件包\" target=\"_blank\">https://bwh1.net 官网<br><br>进入你的服务器后台<br><br>Root shell - basic<br>Root shell - advanced<br>Root shell -interactive<br>install new Os 重装系统<br>这里一般默认就是centos<br>我们运行 RootShell-interactive 交互性命令行 ,因为一般涉及到中断型的命令(例如 确认安装软件包等操作)<br><br>mysql安装 - 图1</a></p><p><img src=\"https://static.bookstack.cn/projects/demo2/153b1e48d3ec8897.png\" alt=\"mysql安装 - 图1\"><a href=\"https://bwh1.net 官网<br/><br/>进入你的服务器后台<br/><br/>Root shell - basic<br/>Root shell - advanced<br/>Root shell -interactive<br/>install new Os 重装系统<br/>这里一般默认就是centos<br/>我们运行 RootShell-interactive 交互性命令行 ,因为一般涉及到中断型的命令(例如 确认安装软件包等操作)<br/><br/>mysql安装 - 图1<br/><br/>mysql安装 - 图2<br/><br/>更新软件包\" target=\"_blank\"><br><br>mysql安装 - 图2<br><img src=\"https://static.bookstack.cn/projects/demo2/153b1e96ab09b66e.png\" alt=\"mysql安装 - 图2\"><br>更新软件包</a></p><p>$ yum update<br>安装mysql数据库<br><br>$ yum install mysql<br>$ yum install mysql-server<br>$ yum install mysql-devel<br>重启mysql<br><br>$ service mysqld start<br># 查看mysql状态<br>$ service mysqld status<br>连接mysql,默认root密码是root<br><br>$ mysql -u root -p<br>退出mysql<br><br>mysql&gt;exit<br>show databases;<br>select host,user,password from  user;<br>开放mysql 让外网可以使用<br><br># %为所有ip都可以远程访问<br>　　mysql&gt;update user set host = \'%\' where user = \'root\' and host=\'localhst\';<br># 查看一下修改<br>　  mysql&gt;select host, user from user;<br># 使权限立即生效<br>mysql&gt;FLUSH PRIVILEGES<br>查看防火墙<br><br>$ iptables -L<br>开放防火墙3306<br><br>$ iptables -A INPUT -p tcp --dport 3306</p>','2020-12-14 15:09:26'),(28,6,3,'连接mysql','<ul><li><a href=\"https://www.bookstack.cn/read/demo2/date-2018.06.24.14.59.59#%E8%BF%9E%E6%8E%A5mysql\">连接mysql</a><ul><li><a href=\"https://www.bookstack.cn/read/demo2/date-2018.06.24.14.59.59#%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F\">连接方式</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/demo2/date-2018.06.24.14.59.59#Mysql%E6%9D%83%E9%99%90\">Mysql权限</a></li><li><a href=\"https://www.bookstack.cn/read/demo2/date-2018.06.24.14.59.59#Sql%E6%98%AF%E5%A3%B0%E6%98%8E%E6%80%A7%E8%AF%AD%E8%A8%80\">Sql是声明性语言</a></li><li><a href=\"https://www.bookstack.cn/read/demo2/date-2018.06.24.14.59.59#sql%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B\">sql执行流程</a><ul></ul></li></ul><h1><a></a>连接mysql</h1><h2><a></a>连接方式</h2><ol><li>短连接</li><li>长连接</li><li>连接池</li></ol><p>mysq通过mysql数据库的user表的(host,user)键来区分数据库用户</p><ol><li><code># 连接mysql服务器</code></li><li><code>$ mysql -u user_name -h host -p</code></li></ol><p>若连接不上,则在服务器查询下数据库的用户表</p><ol><li><code># 列出所有数据库</code></li><li><code>show dabases;</code></li><li><code># 选择mysql数据库</code></li><li><code>use mysql;</code></li><li><code># 查看当前选择的数据库</code></li><li><code>select database();</code></li><li><code># 列出数据库下的表</code></li><li><code>show tables;</code></li><li><code># 列出数据库的用户</code></li><li><code>select host,user,password from user;</code></li><li><code># 更新为外网可以访问</code></li><li><code>update user set host=\'%\' where user=\'root\' and host=\'localhost\';</code></li></ol><h1><a></a>Mysql权限</h1><p>服务器会有两种连接阶段</p><ol><li>服务器会检查是否有权限连接</li><li>服务器会检查是否会执行sql的权限</li></ol><p>其中连接的权限由password,user,host三个字段;其他crud等由user表其他权限字段控制<br>一下是&nbsp;<code>mysql</code>数据库下的<code>user</code>表字段(version 5.1)</p><ul><li>Host</li><li>User</li><li>Select_priv</li><li>Insert_priv</li><li>Update_priv</li><li>Delete_priv</li><li>Create_priv</li><li>Drop_priv</li><li>Reload_priv</li><li>Shutdown_priv</li><li>Process_priv</li><li>File_priv</li><li>Grant_priv</li><li>References_priv</li><li>Index_priv</li><li>Alter_priv</li><li>Show_db_priv</li><li>Super_priv</li><li>Create_tmp_table_priv</li><li>Lock_tables_priv</li><li>Execute_priv</li><li>Repl_slave_priv</li><li>Repl_client_priv</li><li>Create_view_priv</li><li>Show_view_priv</li><li>Create_routine_priv</li><li>Alter_routine_priv</li><li>Create_user_priv,</li><li>Event_priv</li><li>Trigger_priv</li><li>Create_tablespace_priv</li><li>ssl_type</li><li>ssl_cipher</li><li>x509_issuer</li><li>x509_subject</li><li>max_questions</li><li>max_updates</li><li>max_connections</li><li>max_user_connections</li><li>plugin</li><li>authentication_string</li><li>password_expired</li><li>password_last_changed</li><li>password_lifetime</li><li>account_locked</li></ul><p>mysql是设计为OLTP</p><p>On-Line Transaction Processing联机事务处理过程(OLTP)<br>也称为面向交易的处理过程，其基本特征是前台接收的用户数据可以立即传送到计算中心进行处理，并在很短的时间内给出处理结果，是对用户操作快速响应的方式之一。<br></p><p>软件架构</p><ul><li>两层架构 客户端直接操作数据库</li><li>三层架构 客户端与数据库之间通过web应用交互</li></ul><h1><a></a>Sql是声明性语言</h1><p>sql 是声明性语言,它只告诉数据库要查询什么,但并不告诉数据查询的方法,数据库要做的就是基于算法和统计信息计算出一条最佳的方法流程,这个工作是优化器来完成的。<br></p><p>mysql架构原理图<br><img src=\"https://static.bookstack.cn/projects/demo2/153b6be8e09f4122.png\" alt=\"连接mysql - 图1\"></p><h1><a></a>sql执行流程</h1><ol><li><p>查询缓存<br>在解析一个查询语句前，如果查询缓存是打开的，那么MySQL会检查这个查询语句是否命中查询缓存中的数据。如果当前查询恰好命中查询缓存，在检查一次用户权限后直接返回缓存中的结果。这种情况下，查询不会被解析，也不会生成执行计划，更不会执行。</p></li><li><p>语法解析和预处理<br>MySQL通过关键字将SQL语句进行解析，并生成一颗对应的解析树。这个过程解析器主要通过语法规则来验证和解析。比如SQL中是否使用了错误的关键字或者关键字的顺序是否正确等等。预处理则会根据MySQL规则进一步检查解析树是否合法。比如检查要查询的数据表和数据列是否存在等等。</p></li><li><p>查询优化<br>经过前面的步骤生成的语法树被认为是合法的了，并且由优化器将其转化成查询计划。多数情况下，一条查询可以有很多种执行方式，最后都返回相应的结果。优化器的作用就是找到这其中最好的执行计划。</p></li></ol>','2020-12-14 15:14:48'),(29,6,4,'mysql基础','<ul><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E5%8F%98%E9%87%8F\">变量</a><ul><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F\">系统变量</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E6%B3%A8%E9%87%8A\">注释</a></li><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\">数据类型</a><ul><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B\">数值类型</a></li><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E5%AD%97%E7%AC%A6%E4%B8%B2\">字符串</a></li><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E6%97%A5%E6%9C%9F%E7%B1%BB%E5%9E%8B\">日期类型</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0\">常用函数</a><ul><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E6%95%B0%E5%80%BC\">数值</a></li><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E5%AD%97%E7%AC%A6%E4%B8%B2\">字符串</a></li><li><a href=\"https://www.bookstack.cn/read/demo2/mysql_base#%E6%97%A5%E6%9C%9F%E7%B1%BB%E5%9E%8B\">日期类型</a><ul></ul></li></ul></li></ul><h1><a></a>变量</h1><h2><a></a>系统变量</h2><ul><li>全局变量,所有用户都可以看见</li><li>会话变量,对当前连接的用户有关`</li><li><code># 全局变量</code></li><li><code>set global var_name=xxx;</code></li><li><code># 会话变量</code></li><li><code>set session var_name=xxx;</code></li></ul><h1><a></a>注释</h1><p>三种注释</p><ol><li><code>/**  </code></li><li><code>注释1</code></li><li><code>**/</code></li><li><code></code></li><li><code>--  注释2</code></li><li><code></code></li><li><code># 注释3</code></li></ol><h1><a></a>数据类型</h1><h2><a></a>数值类型</h2><p>整数</p><ul><li>int</li><li>tinyint</li><li>smallint</li><li>middleint</li><li>bigint<br>实数类型分为近似值,</li><li>float</li><li>double<br>和确切值</li><li>decimal</li></ul><h2><a></a>字符串</h2><ul><li>varchar</li><li>char</li><li>TEXT</li></ul><h2><a></a>日期类型</h2><p>这里有概念 日期为 日期(年月日),时间(时分秒)</p><ul><li>datetime 日期+时间</li><li>date 日期</li><li>time 时间</li><li>timestamp 用于更新,创建时自动更新的数据类型</li><li>year 年</li></ul><h1><a></a>常用函数</h1><h2><a></a>数值</h2><ul><li>+,-,*,/ DIV(整除)<br>数学函数</li><li>abs(x) 绝对值</li><li>ceil(x) 天花板</li><li>floor(x) 地板</li><li>round(x) 4舍五入</li><li>sign(x) 取符号 -1或+1<h2><a></a>字符串</h2></li><li>char_length(str) 字符串字符长度</li><li>length(str) 字符串字节长度</li><li>concat(str1,str2,str3) 拼接字符串</li><li>left(str,n) 自左截取字符串</li><li>right(str,n) 自右截取字符串</li><li>substring(str,start,len) 自start开始截取多少个字符</li><li>lower(str) 小写</li><li>upper(str) 大写</li></ul><h2><a></a>日期类型</h2><ul><li>now()</li><li>cur_time()</li><li>cur_date()</li><li>datediff(dt1,dt2) 计算两个日期的天数差</li><li>date_add(dt,interval num type) 添加时间 type可以为 second,minius,hour,day,week,month,year</li><li>date_format(dt,’%y’)</li><li>str_to_date(str,’%y’)</li></ul>','2020-12-14 15:16:01'),(30,6,5,'SQL','<ul><li><a href=\"https://www.bookstack.cn/read/demo2/sql#DDL\">DDL</a><ul></ul></li></ul><h1><a></a>DDL</h1><p>data defintion language</p><p>列出数据库</p><p>show databases;<br></p><p>创建数据库</p><p>create database test;<br></p><p>切换数据库</p><p>use mysql;<br></p><p>显示当前的数据库</p><p>select database();<br></p><p>创建表</p><ol><li><code>create table user(</code></li><li><code>userId int primary key auto_increament,</code></li><li><code>username varchar(200) not null</code></li><li><code>);</code></li></ol><p>列出数据库的表</p><p>show tables;<br></p><p>显示表结构</p><p>desc user;<br></p><p>删除表</p><p>drop table user;<br></p><p>表增加列</p><pre><ol><li><code># alert table user add col;</code></li></ol></pre>','2020-12-14 15:17:20'),(31,7,1,'前端开发者指南（2017）','<ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/README.md#%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%80%85%E6%8C%87%E5%8D%97%EF%BC%882017%EF%BC%89\">前端开发者指南（2017）</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/README.md#%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%9A%E5%89%8D%E7%AB%AF%E5%AE%9E%E8%B7%B5\">第一部分：前端实践</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/README.md#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%EF%BC%9A%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91\">第二部分：学习前端开发</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/README.md#%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86%EF%BC%9A%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7\">第三部分：前端开发工具</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/README.md#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\">文章目录</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/README.md#%E8%87%B4%E8%B0%A2\">致谢</a><ul></ul></li></ul></li></ul><h1><a></a>前端开发者指南（2017）</h1><p><a href=\"https://github.com/xitu/gold-miner/\"><img src=\"https://rawgit.com/aleen42/badges/master/src/juejin_translation.svg\" alt=\"掘金翻译计划\"></a><a href=\"https://github.com/hujiang-fe\"><img src=\"https://cdn.rawgit.com/Hujiang-FE/icons/fff32467/logo.svg\" alt=\"沪江Web前端团队\"></a></p><p><img src=\"https://frontendmasters.com/books/front-end-handbook/2017/cover.jpg\" alt=\"cover-img\"></p><p>作者：<a href=\"http://codylindley.com/\">科迪·林黎（Cody Lindley）</a>，由<a href=\"https://frontendmasters.com/\">「前端大师（Frontend Masters）」</a>倾情赞助。</p><p>这是一本可供任何人使用的指南，用于学习前端开发实践。该指南大体上勾勒出了前端工程的轮廓，同时也讨论了前端工程的实践：2017 年，如何学习前端工程，用什么工具来实践？</p><p>笔者有意将本书打造为一份专业资料，为想要或正在实践的前端开发者们提供学习材料和开发工具。其次，它同样可供主管、CTO、讲师和猎头们深入探索前端开发实践。</p><p>本书内容偏向于 WEB 技术（HTML、CSS、DOM、JavaScript）和以这些技术为根基直接构建而成的开源技术。书中引用和讨论的材料要么就是同类翘楚，要么就是解决问题的流行方案。</p><p>本书不是一本囊括所有前端可用资源的综合纲领。其价值在于为恰好够用的分类信息搜罗简洁、聚焦且符合时宜的甄选内容，以免在特别话题下钻了牛角尖。</p><p>预期本书每年都迭代一次内容。</p><p>本书分为三部分。</p><h2><a></a>第一部分：前端实践</h2><p>第一部分概述了前端工程实践。</p><h2><a></a>第二部分：学习前端开发</h2><p>第二部分指出了学习成为一个前端开发者所需的自学资源和教学资源（译者注：教学资源包括有讲师指导的付费课程、计划、学院和训练营）。</p><h2><a></a>第三部分：前端开发工具</h2><p>第三部分简要地介绍和指出了一些前端圈內的工具。</p><h1><a></a>文章目录</h1><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/what-is-a-FD.md\">前端开发者是什么？</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/recap.md\">2016 前端开发回顾</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/2017.md\">展望 2017</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice.md\">第一部分. 前端实践</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice-types-of-front-end-dev.md\">前端职称</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice-tech-employed-by-fd.md\">前端开发者所使用的技术</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice-skills.md\">前端开发技能</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice-fd-dev-for.md\">前端开发者为 … 而开发</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice-team.md\">团队里的前端</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice-myth.md\">全能型人才/全栈神话</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice-interview-q.md\">前端面试</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice-jobboards.md\">前端开发职位公示</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice-salaries.md\">前端开发薪资</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/practice-making-fd.md\">前端开发者是如何诞生的</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning.md\">第二部分：学习前端开发</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-self-direct-learning.md\">自学</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-internet.md\">关于互联网／WEB</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-browsers.md\">学习 Web 浏览器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-dns.md\">学习域名系统（又叫 DNS）</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-http-networks.md\">学习 HTTP/Networks（包括 CORS 和 WebSockets）</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-hosting.md\">学习网页寄存（通称虚拟主机）</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-front-end.md\">学习前端开发</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-ui-design-patterns.md\">学习用户界面／交互设计</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-html-css.md\">学习 HTML 和 CSS</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-seo.md\">学习搜索引擎优化</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-javascript.md\">学习 JavaScript</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-animation.md\">学习 Web 动画</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-dom.md\">学习 DOM、BOM 和 jQuery</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-fonts.md\">学习网页字体 &amp; 图标</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-accessibility.md\">学习可访问性相关知识</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-web-api.md\">学习 web／浏览器 API</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-json.md\">学习 JSON (JavaScript 对象表示法)</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-templates.md\">学习 JS 模板</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-static.md\">学习静态网页生成器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-cs.md\">通过JS学习计算机科学</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-front-end-apps.md\">学习前端应用架构</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-data-api.md\">学习数据（例如，JSON）API 的设计</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-react-redux.md\">学习 React &amp; Redux</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-pwa.md\">学习渐进式 Web 应用</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-js-api.md\">学习设计 JS API</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-browser-dev-tools.md\">学习web开发工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-cli.md\">学习命令行的使用</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-node.md\">学习 Node.js</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-module.md\">学习 JS 模块系统</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-module-bundlers-loaders.md\">学习模块加载和打包工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-package-manager.md\">学习包管理工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-version-control.md\">学习版本控制</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-build.md\">学习构建及任务自动化技术</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-perf.md\">学习网站性能优化</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-test.md\">学习测试</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-headless-browsers.md\">学习无头浏览器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-offline.md\">学习离线开发</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-security.md\">学习网络／浏览器／应用的安全</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-multi-device-dev.md\">多平台开发学习</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-direct-learning.md\">导向学习</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-courses.md\">前端课程</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-learn-from.md\">前端开发学习的起点</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/learning-news-podcasts.md\">前端资讯、新闻站和播客</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools.md\">第三部分：前端开发工具</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-browsedocs.md\">Doc/API 浏览工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-seo.md\">SEO 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-proto.md\">原型设计和线框图工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-diagram.md\">制图工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-http.md\">HTTP / 网络工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-code-editor.md\">代码编辑工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-browser.md\">浏览器上的神兵利器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-html.md\">HTML 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-css.md\">CSS 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-dom.md\">DOM 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-js.md\">JavaScript 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-static.md\">静态网页构建工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-accessibility.md\">无障碍访问工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-apps.md\">应用程序框架工具（台式机、手机、平板电脑等）</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-pwa.md\">渐进式 Web 应用工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-scaffolding.md\">脚手架工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-dev-tools.md\">常规前端开发工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-templates.md\">模版／数据绑定工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-ui.md\">UI 组件 &amp; 组件包</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-charting.md\">数据可视化工具（例如图表）</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-graphics.md\">图形工具（例如 SVG、Canvas、WebGL）</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-animation.md\">动画工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-json.md\">JSON 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-placeholder.md\">占位符内容工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-testing.md\">测试工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-db.md\">前端数据存储工具 (例如客户端的数据存储方案)</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-loaders.md\">模块加载／打包工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-repo.md\">模块／包管理工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-hosting.md\">托管工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-project-hosting.md\">项目管理以及代码托管工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-comm.md\">协作与沟通工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-cms.md\">内容管理 托管／API 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-baas.md\">后端即服务工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-offline.md\">离线工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-security.md\">安全工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-task.md\">构建工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-deploy.md\">部署工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-uptime.md\">网站／应用监控工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-error.md\">JavaScript 错误报告／监控</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-perf.md\">性能工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/tools-find-tools.md\">寻找工具的工具</a></li></ul></li></ul><hr><p><strong>下载 .pdf、.epub、或 .mobi 格式的电子书</strong>:</p><ul><li>中文：<a href=\"https://www.gitbook.com/book/sqrtthree/front-end-handbook-2017/details\">https://www.gitbook.com/book/sqrtthree/front-end-handbook-2017/details</a></li><li>英文：<a href=\"https://www.gitbook.com/book/frontendmasters/front-end-handbook-2017/details\">https://www.gitbook.com/book/frontendmasters/front-end-handbook-2017/details</a></li></ul><p><strong>贡献内容、提建议或者修复 GitHub 上的 bugs</strong>:</p><ul><li><a href=\"https://github.com/xitu/front-end-handbook-2017\">https://github.com/xitu/front-end-handbook-2017</a></li></ul><hr><p><a href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/\"><img alt=\"Creative Commons License\" src=\"https://static.sitestack.cn/projects/front-end-handbook-2017-zh/cb66fbcd99ba5cd589921c72a3ef6248.png\"></a>本文档基于&nbsp;<a href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/\">Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License</a>&nbsp;协议发布。</p><h2><a></a>致谢</h2><ul><li><a href=\"https://github.com/hujiang-fe\">沪江Web前端团队</a></li><li><a href=\"https://github.com/xitu/gold-miner/\">掘金翻译计划</a></li></ul>','2020-12-14 15:19:41'),(32,7,2,'前端开发者是什么？','<ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/what-is-a-FD.md#%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%80%85%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\">前端开发者是什么？</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/what-is-a-FD.md#HTML%E3%80%81CSS%20%E5%92%8C%20JavaScript:\">HTML、CSS 和 JavaScript:</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/what-is-a-FD.md#WEB%20%E6%B5%8F%E8%A7%88%E5%99%A8\">WEB 浏览器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/what-is-a-FD.md#%E6%97%A0%E5%A4%B4%E6%B5%8F%E8%A7%88%E5%99%A8%EF%BC%88Headless%20Browsers%EF%BC%89\">无头浏览器（Headless Browsers）</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/what-is-a-FD.md#Webviews\">Webviews</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/what-is-a-FD.md#%E5%9F%BA%E4%BA%8E%20WEB%20%E6%8A%80%E6%9C%AF%E7%9A%84%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8\">基于 WEB 技术的原生应用</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/what-is-a-FD.md#%E6%B3%A8%EF%BC%9A\">注：</a><ul></ul></li></ul></li></ul><h1><a></a>前端开发者是什么？</h1><p>WEB 前端开发，也作客户端开发，是给网站或网页应用生产 HTML、CSS 和 JavaScript 的过程，它让用户得以浏览网站或网页应用并与之交互。创建网站前端的工具与技术时常变革，因此开发者应对业内发展近况保持清醒，这是前端开发者面对的挑战。</p><p>保证用户打开网站时，以一种易读且关联的形式浏览信息，是设计网站的目的。目前这个需求变得更棘手：如今用户使用的设备种类繁多，设备对应的屏幕尺寸和方案亦然，这迫使设计者在开发站点时考虑这些方面。他们要保证站点在不同的浏览器（跨浏览器），不同的操作系统（跨平台）以及不同的设备（跨设备）上正确运行，这要求开发者缜密地制定方案。</p><p><cite><a href=\"https://en.wikipedia.org/wiki/Front-end_web_development\">https://en.wikipedia.org/wiki/Front-end_web_development</a></cite></p><h2><a></a>HTML、CSS 和 JavaScript:</h2><p>前端开发者使用 WEB 技术（例如 HTML、CSS、 DOM 和 JavaScript）来建造网站和开发应用。他们使用 WEB 技术在&nbsp;<a href=\"https://en.wikipedia.org/wiki/Open_Web_Platform\">WEB 平台</a>或非 WEB 框架（比如&nbsp;<a href=\"https://www.nativescript.org/\">NativeScript 框架</a>）上设计程序。</p><p><img src=\"https://static.sitestack.cn/projects/front-end-handbook-2017-zh/images/what-is-front-end-dev.png\" alt=\"what-is-front-end-dev\"></p><p>图片来源：<a href=\"https://www.upwork.com/hiring/development/front-end-developer/\">https://www.upwork.com/hiring/development/front-end-developer/</a></p><p>通常前端开发者通过学习 HTML、CSS 和 JS 来入门。HTML、CSS 和 JS 代码在&nbsp;<a href=\"https://en.wikipedia.org/wiki/Web_browser\">WEB 浏览器</a>、<a href=\"https://en.wikipedia.org/wiki/Headless_browser\">无头浏览器（Headless Browsers）</a>、<a href=\"http://developer.telerik.com/featured/what-is-a-webview/\">WebView</a>&nbsp;上运行，或者被用于原生运行环境的程序设计。我稍后解释这四种运行场景。</p><h3><a></a>WEB 浏览器</h3><p>WEB 浏览器用于从<a href=\"https://en.wikipedia.org/wiki/World_Wide_Web\">万维网（WWW.）</a>检索、呈现和遍历信息。通常浏览器在台式机、笔记本、平板或手机上运行，如今，浏览器可以在几乎所有物体（比如冰箱，汽车）上运行。</p><p>最常见的 WEB 浏览器如下（按使用度排序）：</p><ul><li><a href=\"http://www.google.com/chrome/\">Chrome</a></li><li><a href=\"https://en.wikipedia.org/wiki/Internet_Explorer\">IE</a>（注：非&nbsp;<a href=\"https://en.wikipedia.org/wiki/Internet_Explorer\">Edge</a>，数据参考自 IE 9 至 IE 11）</li><li><a href=\"https://www.mozilla.org/firefox/\">火狐</a></li><li><a href=\"http://www.apple.com/safari/\">Safari</a></li></ul><h3><a></a>无头浏览器（Headless Browsers）</h3><p>无头浏览器是一种没有用户图形界面的 WEB 浏览器，我们可以用命令行界面编程控制该浏览器，达到自动化运行 Web 页面（比如功能测试、网站检索、单元测试等）的目的。可将无头浏览器看作网页浏览器，不过你用命令行来检索、遍历网页。</p><p>最常见的无头浏览器：</p><ul><li><a href=\"http://phantomjs.org/\">PhantomJS</a></li><li><a href=\"http://slimerjs.org/\">slimerjs</a></li><li><a href=\"http://triflejs.org/\">trifleJS</a></li></ul><h3><a></a>Webviews</h3><p>原生操作系统的原生应用中，用&nbsp;<a href=\"http://developer.telerik.com/featured/what-is-a-webview/\">Webviews</a>&nbsp;来运行网页。不妨把&nbsp;<a href=\"http://developer.telerik.com/featured/what-is-a-webview/\">webview</a>&nbsp;想成一个嵌进原生应用的 iframe 或 WEB 浏览器标签，而该原生应用运行在设备的系统上（比如 IOS、安卓、windows）。</p><p>最常见的 webview 开发解决方案如下：</p><ul><li><a href=\"https://cordova.apache.org/\">Cordova</a>&nbsp;(通常用于手机、平板的原生应用)</li><li><a href=\"https://github.com/nwjs/nw.js\">NW.js</a>&nbsp;(通常用于桌面应用)</li><li><a href=\"https://electron.atom.io/\">Electron</a>&nbsp;(通常用于桌面应用)</li></ul><h3><a></a>基于 WEB 技术的原生应用</h3><p>最终，前端开发者从 WEB 浏览器开发中得到经验，并可以脱离浏览器引擎环境编码。近来，人们正在构思如何脱离 web 引擎，用 web 技术（比如 CSS 和 JS）来构建原生应用。</p><p>该环境的例子：</p><ul><li><a href=\"https://www.nativescript.org/\">NativeScript</a></li><li><a href=\"https://facebook.github.io/react-native/\">React Native</a></li></ul><h2><a></a>注：</h2><p>请确认自己明白 “web platform” 的准确含义。查阅<a href=\"http://tess.oconnor.cx/2009/05/what-the-web-platform-is\">“The Web platform: what it is”</a>&nbsp;和维基百科&nbsp;<a href=\"https://en.wikipedia.org/wiki/Open_Web_Platform\">“Open Web Platform”</a></p>','2020-12-14 15:29:43'),(33,7,3,'2016 前端开发回顾','<ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2017-zh/recap.md#2016%20%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9B%9E%E9%A1%BE\">2016 前端开发回顾</a><ul></ul></li></ul><h1><a></a>2016 前端开发回顾</h1><ul><li><a href=\"http://developer.telerik.com/featured/front-end-application-frameworks-component-architectures/\">UI 组件和组件树</a>被用于构建复杂 UI。</li><li>组件由单一文件构成，在单个文件中可能同时包含 HTML、CSS 和 JS 不再有违主流开发思想。</li><li><a href=\"https://facebook.github.io/react/\">React</a>、<a href=\"http://redux.js.org/\">Redux</a>、<a href=\"https://webpack.js.org/\">Webpack</a>、ECMAScript 2015（也叫 ES6）和&nbsp;<a href=\"https://babeljs.io/\">Babel</a>&nbsp;被广泛采用。这些解决方案跃居于最常用技术榜单前列。</li><li>开发者意识到，在开发原生应用时，借助 webviews 的 H5 混合式移动开发在多数情况下不具备足够优势。</li><li><a href=\"https://facebook.github.io/react-native/\">React Native</a>&nbsp;和&nbsp;<a href=\"https://www.nativescript.org/\">NativeScript</a>&nbsp;开始替代 H5 混合式 webview 开发。</li><li>大多数人舍弃 Gulp 转而使用 NPM 脚本，但 Gulp 仍受欢迎。</li><li>SASS 工具继续受到欢迎，与此同时&nbsp;<a href=\"https://tylergaw.com/articles/sass-to-postcss\">PostCSS（+ CSSNext）开始发展</a>。</li><li>大多数开发者都开始对&nbsp;<a href=\"http://htmlhint.com/\">HTML</a>、<a href=\"http://stylelint.io/\">CSS</a>&nbsp;和&nbsp;<a href=\"http://eslint.org/\">JavaScript</a>（ESlint 替代了&nbsp;<a href=\"http://jshint.com/\">JShint</a>，<a href=\"http://jscs.info/\">JSCS</a>&nbsp;也被整合进 ESLint）进行语法检查。</li><li>开发者弃 Sublime 和 Atom 转投&nbsp;<a href=\"https://code.visualstudio.com/\">Visual Studio Code</a>&nbsp;编辑器，这成为一种趋势。</li><li><a href=\"https://trends.builtwith.com/javascript\">jQuery 仍有热度</a>，但使用率和关注度都在<a href=\"https://www.google.com/trends/explore?q=jQuery\">下滑</a>。<a href=\"https://blog.jquery.com/2016/06/09/jquery-3-0-final-released/\">jQuery 3 已然发布</a>&nbsp;，却无人问津。</li><li><a href=\"https://vuejs.org/\">Vue.js</a>&nbsp;理所应当地吸收更多追随者。</li><li>JavaScript 函数式编程和模式<a href=\"https://www.manning.com/books/functional-programming-in-javascript\">备</a><a href=\"https://github.com/MostlyAdequate/mostly-adequate-guide\">受</a><a href=\"https://github.com/getify/Functional-Light-JS\">关</a><a href=\"https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q\">注</a>。</li><li><a href=\"https://developers.google.com/web/fundamentals/getting-started/codelabs/offline/\">离线开发</a>和<a href=\"https://developers.google.com/web/progressive-web-apps/\">渐进式 WEB 应用（PWA）</a>步入主流。</li><li>微软<a href=\"http://developer.telerik.com/featured/microsoft-done-lately/\">发力</a>。</li><li>基于 web 技术，使用&nbsp;<a href=\"https://nwjs.io/\">NW.js</a>&nbsp;和&nbsp;<a href=\"http://electron.atom.io/\">Electron</a>&nbsp;开发 windows，OSX 和 linux 原生应用的方式逐渐成型。</li><li><a href=\"https://angular.io/\">Angular 2</a>（在将来也叫作”<a href=\"https://juristr.com/blog/2016/12/let-me-explain-angular-release-cycles/\">Angular</a>”）跌下神坛，多数人意识到它将不再如 Angular 1 那般辉煌了。</li><li>JavaScript 大体上保持<a href=\"http://stackoverflow.com/research/developer-survey-2016#technology-correlated-technologies\">软件</a>技术<a href=\"http://stackoverflow.com/research/developer-survey-2016#technology-most-popular-technologies\">的</a><a href=\"http://stackoverflow.com/research/developer-survey-2016#technology-top-tech-on-stack-overflow\">中流砥柱</a>位置。</li><li>更多的开发者开始把工具化（比如自动化）和测试当回事了。</li><li><a href=\"https://www.staticgen.com/\">静态站点生成器</a>被<a href=\"https://github.com/vigetlabs/gulp-starter/tree/blendid\">重</a><a href=\"https://phenomic.io/\">视</a>起来。</li><li><a href=\"http://meyerweb.com/eric/thoughts/2016/12/05/css-grid/\">CSS 网格布局（CSS Grid）势头正旺</a>且前途无量。</li><li><a href=\"https://www.npmjs.com/\">NPM</a>&nbsp;受到来自&nbsp;<a href=\"https://yarnpkg.com/\">Yarn</a>&nbsp;的挑战。</li><li>下一代类 React 方案的演化通过&nbsp;<a href=\"https://preactjs.com/\">Preact</a>、<a href=\"https://github.com/anthonyshort/deku\">Deku</a>、<a href=\"https://github.com/alibaba/rax\">Rax</a>&nbsp;和&nbsp;<a href=\"https://infernojs.org/\">inferno</a>&nbsp;的形式展现，并伴随着少量 API 改动。</li><li>此前大多数人学习接受&nbsp;<a href=\"https://facebook.github.io/jsx/\">JSX</a>，而如今他们已经享受其中。</li><li>一种可用的 CSS 模块模式（CSS encapsulation）已经实现并投入使用，因此对许多人来说，<a href=\"https://github.com/MicheleBertoli/css-in-js\">CSS in JS</a>&nbsp;成为一种切实可行的解决方案。</li><li>越来越多人着手进行 UI 的功能性、整合性测试，其中包含例如可视化&nbsp;<a href=\"https://css-tricks.com/automating-css-regression-testing/\">CSS</a>&nbsp;和&nbsp;<a href=\"https://css-tricks.com/automating-css-regression-testing/\">RWD</a>（译注：响应式网页设计，全称 Responsive web design）回归测试的概念。</li><li>得益于<a href=\"https://www.netmarketshare.com/browser-market-share.aspx?qprid=2&amp;qpcustomd=0\">老版本 IE</a>&nbsp;使用、开发程度的大幅度降低，为<a href=\"https://html5test.com/results/desktop.html\">浏览器 API 一致性</a><a href=\"https://kangax.github.io/compat-table/es6/\">而战</a>的时代已离我们远去。</li><li>几乎人人都意识到开发网页的时候必须考虑<a href=\"http://www.intel.com/content/dam/www/public/us/en/images/iot/guide-to-iot-infographic.png\">多设备适配策略</a>。</li><li>使用其他语言的开发者持续涌入 JS 领域，他们也带来了一些东西：例如<a href=\"https://flowtype.org/\">类型检测</a>，和对<a href=\"https://www.typescriptlang.org/\">类语法以及面向对象思想</a>的执念。</li><li>前端开发引入了<a href=\"https://code-cartoons.com/hot-reloading-and-time-travel-debugging-what-are-they-3c8ed2812f35#.ezlpqez1i\">热模块替换技术和时间旅行调试</a>。</li><li>原生&nbsp;<a href=\"https://whatwg.github.io/loader/\">JS 浏览器模块加载器</a>更受期待了。</li><li><a href=\"https://css-tricks.com/stylelint/\">Enforcing CSS</a>&nbsp;和&nbsp;<a href=\"https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb\">JS 格式规范</a>变得更受重视（就 ES3 到 ES6 编码以及 CSS 预处理语法两者的变化而论）。</li><li>少部分开发者开始<a href=\"https://www.brianthicks.com/post/2016/04/22/state-of-elm-2016-results/\">在 JS 上跑极限学习机（Extreme Learning Machine）算法</a>，这足以引起注意。</li><li><a href=\"https://www.typescriptlang.org/\">TypeScript</a>&nbsp;被正式使用在一些地方，并且圈了一些粉。</li><li><a href=\"http://aurelia.io/\">aurelia</a>&nbsp;成为企业级开发者的明智之选（也就是说受到支持！）。</li><li><a href=\"https://webpack.js.org/configuration/\">Webpack</a>&nbsp;采取<a href=\"https://opencollective.com/webpack\">措施</a>并巩固了优势地位，更胜一筹的&nbsp;<a href=\"https://www.pluralsight.com/courses/javascript-systemjs-jspm\">JSPM</a>&nbsp;解决方案暂居其下。</li><li><a href=\"https://developers.google.com/web/updates/2016/10/avoid-not-secure-warn\">HTTPS，嗯，这个我们很重视</a></li><li><a href=\"https://msdn.microsoft.com/en-us/commandline/wsl/about\">BASH</a>&nbsp;在 windows 系统上展露头脚。</li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API/Using_the_Notifications_API\">通知功能 API</a>&nbsp;可以被使用了，并在 chrome 上有些滥用，但这只会发生在你授予它权限之后。</li><li><a href=\"https://github.com/firebug/firebug\">FireBug 调试工具退出历史舞台</a>。</li><li>2016年，CSS&nbsp;<a href=\"https://www.w3.org/Style/CSS20/\">20 岁</a>了。</li><li><a href=\"https://facebook.github.io/immutable-js/\">Immutability</a>&nbsp;概念发展势头正旺。</li></ul>','2020-12-14 15:30:03'),(34,7,4,'展望 2017','展望2017\n展望2017\nWeb Assembly 有望达到一个新的高度。\n有望在 <script> </script> 中使用 import 进行模块懒加载。详情见这里\nJavaScript 同构解决方案持续增长，致敬服务器端输出前端内容的时代（即：页面直出到浏览器）。参见 NextJS\n响应式编程继续茁壮成长。（参见 MobX and RxJS）\nReact，尤其是它倡导的概念继续占有支配地位。而 React 本身会被彻底重写（React Fiber）或者进化（Inferno）\nAngular 终于决定遵循 SEMVER 规范，所以 Angular4（甚至于 Angular5）有望在 2017 年发布。 参见 Roadmap\n简单的网站即 Web 1.0 可能会重新流行，但会建立在 2017 年新工具的基础上。（例如 Static site generation）\nRESTful JSON APIs 会更有竞争力（参见 GraphQL）\n2017 可能是 VueJS 的丰收年。\n越来越多的开发者在做静态站点以及 API CMS tools 时开始抛弃传统的 CMS 解决方案。\n更多的人从 Sass 转向 PostCSS + CSSNext。\n越来越多地见到 HTTP2 和 HTTPS 的身影。\nWeb Components 继续潜伏等待开发者们助力实现前所未有的大爆发。\n无框架的框架势头正猛。（参见 Svelte）\nJavaScript 标准即将尘埃落定，同时期待 CSS 也能迎来大爆发，并早日稳定下来， 否则开发者们始终惶惶不可终日。\n相对于开放的 Web，对于 App Store 的仇恨与日俱增。\nRedux 继续接受来自竞争对手的激烈挑战。 （参见 Mobx）\nYARN 将赢得更多的粉丝。\n“Front-end apps”、”Thick Client apps”、”Static apps”、”No Backend app”、”SPA’s”、”Front-end driven app” 这些理念可以归结为一个概念：“JAM Stack”。','2020-12-14 15:30:27'),(35,8,1,'前端开发者指南 2018','<ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/README.md#%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%80%85%E6%8C%87%E5%8D%97%202018\">前端开发者指南 2018</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/README.md#%E7%94%B1%20%20%20Cody%20Lindley%20%20%E7%BC%96%E5%86%99\">由 Cody Lindley 编写</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/README.md#%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%9A%20%E5%89%8D%E7%AB%AF%E5%AE%9E%E8%B7%B5\">第一部分： 前端实践</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/README.md#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%EF%BC%9A%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91\">第二部分：学习前端开发</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/README.md#%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86%EF%BC%9A%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7\">第三部分：前端开发工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/README.md#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\">文章目录</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/README.md#%E8%87%B4%E8%B0%A2\">致谢</a><ul></ul></li></ul></li></ul><h1><a></a>前端开发者指南 2018</h1><h3><a></a>由&nbsp;<a href=\"http://codylindley.com/\">Cody Lindley</a>&nbsp;编写</h3><p><a href=\"https://frontendmasters.com/\">Frontend Masters</a>&nbsp;赞助，用深入的、现在的前端工程课程提升你的技能。</p><p><img src=\"https://frontendmasters.com/books/front-end-handbook/2018/cover.jpg\" alt=\"Front End Handbook 2018 Cover\"></p><p>这是一个任何人都可以用来学习前端开发实践的指南。它大致地概括并讨论了前端工程的实践：如何学习前端以及在 2018 年开发中用到的工具。</p><p>它的目的是为目前和以后准备从事前端开发的开发者们提供专业的资源，帮助他们提供学习资料和开发工具。其次，它可以帮助管理人员，CTO，讲师或者猎头们了解前端的开发实践。</p><p>该指南内容偏向 web 技术（如 HTML,CSS,DOM 和 JavaScript）以及直接构建在这些开源技术上的解决方案。书中涉及到的材料，要么是最佳解决方案，要么是当前存在的问题。</p><p>这本书不应该被当做前端开发者可用的所有资源的大纲。它的价值在于简洁、集中、及时地整理足够多的信息，这样不至于让开发者在某个领域苦苦摸索。</p><p>目标是每年发布一次内容更新。</p><p>该指南分为以下三个部分：</p><h2><a></a>第一部分： 前端实践</h2><p>第一部分大致描述了前端工程的实践。</p><h2><a></a>第二部分：学习前端开发</h2><p>第二部分介绍了成为前端开发者的自学方向和学习的资源。</p><h2><a></a>第三部分：前端开发工具</h2><p>第三部分简要介绍了前端开发要用到的工具。</p><h1><a></a>文章目录</h1><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/what-is-a-FD.md\">什么是前端开发人员？</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/recap.md\">2017 年前端开发回顾</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/2018.md\">2018 年的期待…</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice.md\">第一部分：前端实践</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice-types-of-front-end-dev.md\">前端工作职位</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice-tech-employed-by-fd.md\">通用的 Web 技术收录</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice-skills.md\">前端开发技能</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice-fd-dev-for.md\">前端开发人员开发了…</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice-team.md\">前端开发团队</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice-myth.md\">通才/全栈之神</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice-interview-q.md\">前端面试题</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice-jobboards.md\">前端工作板</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice-salaries.md\">前端薪资</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/practice-making-fd.md\">前端开发者是怎样炼成的</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning.md\">第二部分：学习前端开发</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-self-direct-learning.md\">自我导向学习</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-internet.md\">了解互联网/Web</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-browsers.md\">了解 Web 浏览器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-dns.md\">了解 DNS</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-http-networks.md\">了解 HTTP/网络</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-hosting.md\">了解虚拟主机</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-front-end.md\">了解通用前端开发</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-ui-design-patterns.md\">了解 UI/交互设计</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-html-css.md\">了解 HTML 和 CSS</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-seo.md\">了解 SEO</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-javascript.md\">了解 JavaScript</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-animation.md\">了解 Web 动画</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-dom.md\">了解 DOM、BOM 和 jQuery</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-fonts.md\">了解 Web 字体、图标和图像</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-accessibility.md\">了解可访问性</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-web-api.md\">了解 Web/浏览器 API</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-json.md\">了解 JSON</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-templates.md\">了解 JS 模板</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-static.md\">了解静态站点生成器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-cs.md\">通过JS学习计算机科学</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-front-end-apps.md\">了解前端应用程序体系结构</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-data-api.md\">了解 数据 API (例如 JSON/REST) 设计</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-react.md\">了解 React</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-state.md\">了解状态管理</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-pwa.md\">了解渐进式Web应用程序</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-js-api.md\">了解 JS API设计</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-browser-dev-tools.md\">了解 Web 开发工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-cli.md\">学习命令行</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-node.md\">学习 Node.js</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-module.md\">学习 JS 模块</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-module-bundlers-loaders.md\">学习 JS 模块加载器/绑定器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-package-manager.md\">学习包管理器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-version-control.md\">学习版本控制</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-build.md\">学习构建和任务自动化</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-perf.md\">了解网站性能优化</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-test.md\">学习测试</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-headless-browsers.md\">学习无头浏览器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-offline.md\">学习离线开发</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-security.md\">学习 Web/浏览器/应用程序安全</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-multi-device-dev.md\">了解多设备开发（例如RWD）</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-direct-learning.md\">定向学习</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-courses.md\">前端学校、课程和训练营</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-learn-from.md\">前端开发人员学习</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/learning-news-podcasts.md\">通讯、新闻和播客</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools.md\">第三部分：前端开发工具</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-browsedocs.md\">文档/API 浏览器工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-seo.md\">SEO 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-proto.md\">原型和线框图工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-diagram.md\">图表工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-http.md\">HTTP/网络工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-code-editor.md\">代码编辑工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-browser.md\">浏览器工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-html.md\">HTML 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-css.md\">CSS 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-dom.md\">DOM 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-js.md\">JavaScript 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-static.md\">静态站点生成器工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-accessibility.md\">辅助功能开发工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-apps.md\">应用程序框架 （桌面、移动端等等） 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-state.md\">状态管理工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-pwa.md\">渐进式 Web 应用程序工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-dev-tools.md\">GUI 开发/构建工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-templates.md\">模板/数据绑定工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-ui.md\">用户界面小部件和组件工具包</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-charting.md\">数据可视化（例如，图表）工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-graphics.md\">图形（例如，SVG、canvas、webgl）工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-animation.md\">动画工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-json.md\">JSON 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-placeholder.md\">占位符图像/文本工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-testing.md\">测试工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-db.md\">前端数据存储工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-loaders.md\">模块/包装加载工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-repo.md\">模块/包仓库工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-hosting.md\">主机工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-project-hosting.md\">项目管理和代码托管</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-comm.md\">协作和沟通工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-cms.md\">CMS 托管/API 工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-baas.md\">BAAS（用于前端开发）工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-offline.md\">离线工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-security.md\">安全工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-task.md\">任务（又名 构建）工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-deploy.md\">部署工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-uptime.md\">网站/应用监控工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-error.md\">JS错误监视工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-perf.md\">性能工具</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/tools-find-tools.md\">查找工具的工具</a></li></ul></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/$frontendmasters.md\">由前端大师赞助</a></li></ul><hr><p><strong>在线阅读</strong>:</p><ul><li><a href=\"https://frontendmasters.com/books/front-end-handbook/2018/\">https://frontendmasters.com/books/front-end-handbook/2018/</a></li></ul><p><strong>下载 .pdf, .epub, or .mob 格式的文件</strong>:</p><ul><li>中文：<a href=\"https://www.gitbook.com/book/leviding/front-end-handbook-2018/details\">https://www.gitbook.com/book/leviding/front-end-handbook-2018/details</a></li><li>英文：<a href=\"https://www.gitbook.com/book/frontendmasters/front-end-developer-handbook-2018/details\">https://www.gitbook.com/book/frontendmasters/front-end-developer-handbook-2018/details</a></li></ul><p><strong>贡献内容、提建议或者修复 GitHub 上的 bugs</strong>：</p><ul><li>中文：<a href=\"https://github.com/xitu/front-end-handbook-2018\">https://github.com/xitu/front-end-handbook-2018</a></li><li>英文：<a href=\"https://github.com/FrontendMasters/front-end-handbook-2018\">https://github.com/FrontendMasters/front-end-handbook-2018</a></li></ul><hr><p><a href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/\"><img alt=\"Creative Commons License\" src=\"https://static.sitestack.cn/projects/front-end-handbook-2018-zh/cb66fbcd99ba5cd589921c72a3ef6248.png\"></a>该作品经&nbsp;<a href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/\">Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License</a>&nbsp;许可。</p><h2><a></a>致谢</h2><ul><li><a href=\"https://github.com/xitu/gold-miner/\">掘金翻译计划</a></li></ul>','2020-12-14 15:35:54'),(36,8,2,'什么是前端开发人员？','<ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/what-is-a-FD.md#%E4%BD%95%E8%B0%93%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%80%85\">何谓前端开发者</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/what-is-a-FD.md#HTML,%20CSS,%20&amp;%20JavaScript:\">HTML, CSS, &amp; JavaScript:</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/what-is-a-FD.md#Web%20%E6%B5%8F%E8%A7%88%E5%99%A8%EF%BC%88%E6%9C%80%E5%B8%B8%E8%A7%81%EF%BC%89\">Web 浏览器（最常见）</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/what-is-a-FD.md#%E6%97%A0%E7%95%8C%E9%9D%A2%E6%B5%8F%E8%A7%88%E5%99%A8\">无界面浏览器</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/what-is-a-FD.md#Webviews\">Webviews</a></li><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/what-is-a-FD.md#Web%20Native%20%E6%8A%80%E6%9C%AF\">Web Native 技术</a><ul><li><a href=\"https://www.bookstack.cn/read/front-end-handbook-2018-zh/what-is-a-FD.md#%E6%B3%A8%E6%84%8F%EF%BC%9A\">注意：</a><ul></ul></li></ul></li></ul></li></ul><h1><a></a>何谓前端开发者</h1><p>Web 前端开发，也称为客户端开发，是通过为网站或者 Web 应用编写 HTML、CSS 和 JavaScript，使用户可以与之交互的一种实践。与前端开发相关的挑战是，由于开发前端页面的工具和技术日新月异，开发者需要持续关注前端领域的发展。</p><p>设计网站的一个目标是确保当用户打开网站时，网站所要呈现的信息以一种容易理解、与设备相适应的形式展示在他们面前。现在用户们使用的设备有着各种各样不同的屏幕尺寸和分辨率，这使得展示的适配变得更加复杂，因此设计师在设计网站时，必须同时考虑到这些因素。设计师要确保网站在不同的浏览器（跨浏览器）、不同的操作系统（跨系统）和不同的设备（跨设备）上都能正确展示，为此，开发者在开发时需要有周详的计划和考虑。</p><p><cite><a href=\"https://en.wikipedia.org/wiki/Front-end_web_development\">https://en.wikipedia.org/wiki/Front-end_web_development</a></cite></p><h5><a></a>HTML, CSS, &amp; JavaScript:</h5><p>前端开发者在搭建和开发网站和应用的时候，使用的是一些在<a href=\"https://en.wikipedia.org/wiki/Open_Web_Platform\">开放 Web 平台</a>上运行，或者是在非 Web 平台上，作为编译输入（比如&nbsp;<a href=\"https://facebook.github.io/react-native/\">React Native</a>）的 Web 技术（比如&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\">HTML</a>、<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS\">CSS</a>、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model\">DOM</a>&nbsp;以及&nbsp;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\">JavaScript</a>)）。</p><p><img src=\"https://static.sitestack.cn/projects/front-end-handbook-2018-zh/images/what-is-front-end-dev.png\" alt=\"什么是前端开发人员？ - 图1\"></p><p><cite>图片来源：<a href=\"https://www.upwork.com/hiring/development/front-end-developer/\">https://www.upwork.com/hiring/development/front-end-developer/</a></cite></p><p>一般来说，一个刚开始进入前端领域的人通常需要学习 HTML、CSS、JavaScript，这些技术通常应用在&nbsp;<a href=\"https://en.wikipedia.org/wiki/Web_browser\">Web 浏览器</a>上，不过也可以运行在<a href=\"https://en.wikipedia.org/wiki/Headless_browser\">无界面浏览器</a>，<a href=\"http://developer.telerik.com/featured/what-is-a-webview/\">WebView</a>上，或者在一个 native 运行时环境下，作为编译输入。下面讲介绍这四种运行时环境的应用场景。</p><h5><a></a>Web 浏览器（最常见）</h5><p>Web 浏览器是用来获取、展示、遍历&nbsp;<a href=\"https://en.wikipedia.org/wiki/World_Wide_Web\">WWW</a>&nbsp;上的信息。浏览器通常运行在台式机、笔记本、平板或者手机上，但现在似乎在任何设备上都能看到浏览器的身影（比如在冰箱上、在汽车上）。</p><p>最常见的 Web 浏览器如下（按<a href=\"https://en.wikipedia.org/wiki/Usage_share_of_web_browsers#Summary_tables\">常用度</a>排序）：</p><ul><li><a href=\"http://www.google.com/chrome/\">Chrome</a></li><li><a href=\"http://www.apple.com/safari/\">Safari</a></li><li><a href=\"https://en.wikipedia.org/wiki/Internet_Explorer\">Internet Explorer</a>&nbsp;(Note: not&nbsp;<a href=\"http://dev.modern.ie/\">Edge</a>, referring to IE 9 to IE 11)</li><li><a href=\"https://www.mozilla.org/firefox/\">Firefox</a></li><li><a href=\"https://www.microsoft.com/en-us/windows/microsoft-edge\">Edge</a></li></ul><h5><a></a>无界面浏览器</h5><p>无界面浏览器是指没有图形界面的浏览器，开发者可以在命令行窗口对其进行一些自动化的操作（如功能测试、数据爬虫、单元测试等）。你可以这么认为，无界面浏览器是一种可以让你通过命令行获取和遍历网页数据的浏览器。</p><p>最常见的无界面浏览器有：</p><ul><li><a href=\"https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md\">Headless Chromium</a></li><li><a href=\"https://github.com/assaf/zombie\">Zombie</a></li><li><a href=\"http://slimerjs.org/\">slimerjs</a></li></ul><h5><a></a>Webviews</h5><p><a href=\"http://developer.telerik.com/featured/what-is-a-webview/\">Webviews</a>&nbsp;被应用于原生系统（比如&nbsp;<a href=\"https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIWebView_Class/\">iOS</a>、<a href=\"http://developer.android.com/reference/android/webkit/WebView.html\">android</a>、<a href=\"https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.webview.aspx\">windows</a>），用于在一个原生应用程序中，加载网页。<a href=\"http://developer.telerik.com/featured/what-is-a-webview/\">Webview</a>&nbsp;就像是被嵌入到设备上的原生应用程序的一个网页小窗口或者一个标签页。</p><p>常见的开发 Webview 的技术有：</p><ul><li><a href=\"https://cordova.apache.org/\">Cordova</a>&nbsp;(typically for native phone/tablet apps)</li><li><a href=\"https://github.com/nwjs/nw.js\">NW.js</a>&nbsp;(typically used for desktop apps)</li><li><a href=\"http://electron.atom.io/\">Electron</a>&nbsp;(typically used for desktop apps)</li></ul><h5><a></a>Web Native 技术</h5><p>最后，我们可以从 Web 浏览器开发上学到的是前端开发者甚至可以在不基于浏览器引擎的环境上开发代码。现在有一些前端开发环境已经实现了不依赖 Web 引擎地使用Web技术（例如 CSS 和 JavaScript）来创建原生应用程序。</p><p>这些环境有：</p><ul><li><a href=\"https://flutter.io/\">Flutter</a></li><li><a href=\"https://facebook.github.io/react-native/\">React Native</a></li></ul><hr><h6><a></a>注意：</h6><p>确保你已经知道 Web platform 具体是什么。为此，你可以阅读<a href=\"http://tess.oconnor.cx/2009/05/what-the-web-platform-is\">“什么是 Web platform”</a>，以及<a href=\"https://en.wikipedia.org/wiki/Open_Web_Platform\">“Open Web Platform”</a>。你也可以看一下组成 Web platform 的<a href=\"https://platform.html5.org/\">一些技术</a>。</p>','2020-12-14 15:38:03'),(37,9,1,'一般格式规则','<h2>一般格式规则</h2><h3><a></a>字母大小写</h3><p>仅使用小写。</p><p>所有代码均使用小写，该规则适用于 CSS 选择符、属性和属性值（字符串除外）。</p><p><strong>不推荐：</strong></p><p><code>color: # E5E5E5;</code></p><p><strong>推荐：</strong></p><p><code>color: # e5e5e5;</code></p><h3><a></a>末尾空格</h3><p>删除行尾空格。</p><p>行尾空格属于多余的符号，会使 diff 更加难以阅读。</p><p><strong>不推荐：</strong></p><p><code>border: 0;__</code></p><p><strong>推荐：</strong></p><p><code>border: 0;</code></p><p>如果使用 Sublime Text，你可在用户设置（User Settings）JSON 文件（可在文本编辑器的菜单中找到）中添加以下代码，每当你以此方法储存文件时，去除行尾空格操作便会自动完成：</p><p><code>\"trim_trailing_white_space_on_save\": true</code></p><h3><a></a>缩进</h3><p>整个文件中的缩进应保持前后一致，使用 Tab、2个空格或4个空格都可以，但需保持前后一致。</p>','2020-12-14 15:41:10'),(38,9,2,'一般元规则','<h2>一般元规则</h2><h3><a></a>编码</h3><p>使用 UTF-8（无 BOM）。</p><p>确保你的编辑器将没有字节顺序标记的 UTF-8 用作字符编码。不要将样式表的编码设置为假定的 UTF-8。</p><h3><a></a>注释</h3><p>在可行和必要时，对代码添加注释。</p><p>用注释解释代码的覆盖范围、目的和作用以及使用和选择各解决方案的原因。</p><h3><a></a>任务项</h3><p>用 TODO: 标注待办事项和任务项：</p><p>仅用关键词 TODO 标注待办事项，不要使用 @@ 等其他格式的字样。在任务项前加冒号，如：TODO: action item。</p><p><strong>推荐：</strong></p><p><code>/* TODO: 添加一个按钮元素 */</code></p>','2020-12-14 15:41:27');
INSERT INTO `em_book_section` VALUES (39,9,3,'CSS 有效性','<h2>CSS 样式规则</h2><h3><a></a>CSS 有效性</h3><p>使用有效的 CSS。</p><p>使用有效的 CSS 是可测量的基准质量，可确保 CSS 的合理使用并有助于识别可删除的无效 CSS 代码。</p><h3><a></a>ID 和类名称</h3><p>使用有意义或具有普遍性的 ID 和类名称。</p><p>不可使用意义含糊的 ID 和类名称，使用能够反映相应元素意义的名称或具有普遍性的通用名。</p><p>最好使用能够反映相应元素意义的具体名称，因为这些名称最易于理解且不易变更。</p><p>具有普遍性的通用名被用于与类似元素意义相仿的元素，主要起辅助作用。</p><p><strong>不推荐：</strong></p><ol><li><code>.p-998 { </code></li><li><code>    … </code></li><li><code>} </code></li><li><code></code></li><li><code>.btn-green { </code></li><li><code>    … </code></li><li><code>}</code></li></ol><p>推荐：</p><pre><ol><li><code>.gallery { </code></li><li><code>    …</code></li><li><code>} </code></li><li><code></code></li><li><code>.btn-default { </code></li><li><code>    … </code></li><li><code>}</code></li></ol></pre><h3><a></a>类型选择符</h3><p>避免用类型选择器限定 ID 和类名称。</p><p>除非情况需要（例如，在辅助类型中），否则不要将元素名和 ID 或类名称同时使用。为提高性能，避免使用不必要的祖先选择符。</p><p>在 CSS 文件中使用 ID 也是较糟糕的做法，类别始终比名称更具优势，如果你需要给予某元素一个特殊的名称，请使用类别。（ ID 的唯一优点是在存在数千个类似元素的页面上能保持较快的运行速度。）</p><p><strong>不推荐：</strong></p><pre><ol><li><code>ul# example { </code></li><li><code>    … </code></li><li><code>} </code></li><li><code></code></li><li><code>div.error { </code></li><li><code>    … </code></li><li><code>}</code></li></ol></pre><p><strong>推荐：</strong></p><pre><ol><li><code>.example { </code></li><li><code>    … </code></li><li><code>} </code></li><li><code></code></li><li><code>.error { </code></li><li><code>    … </code></li><li><code>}</code></li></ol></pre><h3><a></a>简写属性</h3><p>应使用简写。</p><p>CSS 可提供多种简写属性（例如，padding，而不是 padding-top、padding-bottom 等），应尽可能使用这些简写，但字体属性和在 Bootstrap 等框架中会覆盖其他同名属性的属性除外。</p><p>使用简写属性有助于提高代码的效率和易懂性。推荐在设置仅与字体 font 相关的属性时使用字体简写属性，但无需在进行小幅改动时使用。在使用字体简写属性时，请注意，如果未注明字体的大小和系列，浏览器会忽略整个字体声明。</p><p>不推荐：</p><pre><ol><li><code>border-top-style: none;</code></li><li><code>font-family: palatino, georgia, serif;</code></li><li><code>font-size: 100%; </code></li><li><code>line-height: 1.6; </code></li><li><code>padding-bottom: 2em; </code></li><li><code>padding-left: 1em; </code></li><li><code>padding-right: 1em; </code></li><li><code>padding-top: 0;</code></li></ol></pre><p><strong>推荐：</strong></p><pre><ol><li><code>border-top: 0; </code></li><li><code>font: 100%/1.6 palatino, georgia, serif; </code></li><li><code>padding: 0 1em 2em;</code></li></ol></pre><h3><a></a>0和单位</h3><p>去掉&nbsp;<code>0</code>&nbsp;值后面的单位。</p><p><strong>不推荐：</strong></p><pre><ol><li><code>margin: 0em; </code></li><li><code>padding: 0px;</code></li></ol></pre><p><strong>推荐：</strong></p><pre><ol><li><code>margin: 0; </code></li><li><code>padding: 0;</code></li></ol></pre><h3><a></a>前导零</h3><p>为方便阅读，十进制值中含有前导零。</p><p><strong>不推荐：</strong></p><p><code>font-size: .8em;</code></p><p><strong>推荐：</strong></p><p><code>font-size: 0.8em;</code></p><h3><a></a>十六进制表示法</h3><p>在可行时，使用三个十六进制表示法的字符。</p><p><strong>不推荐：</strong></p><p><code>color: # eebbcc;</code></p><p><strong>推荐：</strong></p><p><code>color: # ebc;</code></p><h3><a></a>ID 和类名称分隔符</h3><p>用连字符分隔 ID 和类名称中的字词（-）。</p><p>用连字符连接选择符中的词语和缩略词，以方便理解和扫描。</p><p>唯一的例外：在编写 BEM 样式 CSS 选择符时也可以使用下划线（_）。</p><p><strong>不推荐：</strong></p><pre><ol><li><code>.demoimage { </code></li><li><code>    … </code></li><li><code>} </code></li><li><code></code></li><li><code>.errorStatus {</code></li><li><code>     …</code></li><li><code>}</code></li></ol></pre><p><strong>推荐：</strong></p><pre><ol><li><code>.demo-image { </code></li><li><code>    … </code></li><li><code>} </code></li><li><code></code></li><li><code>.error-status { </code></li><li><code>    … </code></li><li><code>}</code></li></ol></pre><h3><a></a>Hack</h3><p>避免用户代理检测或 CSS Hack ——尝试另一种方法。</p><p>人们可能很想处理用户代理检测或特殊的 CSS 过滤器以及应变方案和非法入侵之间的样式差异。这两项措施均为实现和维护有效和可处理的代码库的最后方案。请考虑该样式是否对应用的性能至关重要，需要该样式的用户代理是否可以不采样该样式。</p>','2020-12-14 15:42:00'),(40,10,1,'缩进与换行','<h2>缩进与换行</h2><p>用空格好还是 TAB 好？4个空格还是2个空格好？这是永远的圣战，累觉不爱，本文档不做详细说明。</p><p>但是无论如何，项目中应该保持统一的缩进风格，以利于代码的阅读，同时可以避免在 git 等版本管理工具中造<br>成冗余的 diff 信息，而且千万不要空格和制表符（TAB）混用。</p><p>本文档规定：</p><ul><li><strong>使用2个空格缩进。</strong></li><li><p><strong>使用 Unix 风格换行符（LF）</strong><br>保证跨平台的一致性，<a href=\"https://github.com/cssmagic/blog/issues/22\">更多</a>。</p></li><li><p><strong>删除行尾多余的空格</strong><br>因为这些空格通常是不必要的（JSHint 中会通过&nbsp;<code>trailing</code>&nbsp;来检测是否存在多余的空格）。</p></li><li><p><strong>文件末尾增加一个空行</strong><br>没有空行在合并多个文件时可能会把上一个文件的最后一行与下一个文件的第一行合并为一行，特别是，JS 中如果没有这个空行而恰巧末尾没有写分号，整个文件可能就会报错了。</p><p>扩展阅读：</p><ul><li><a href=\"http://www.zhihu.com/question/20018991\">为什么 C 语言源程序最后一行要是一个空行？</a></li><li><a href=\"http://stackoverflow.com/questions/729692/why-should-files-end-with-a-newline\">Why should files end with a newline?</a></li></ul></li></ul><h3><a></a>1. 如何保证统一的缩进风格？</h3><p>Sublime Text 在新建工程的时候会生成&nbsp;<code>xxx.sumlime-project</code>&nbsp;文件，可以配置一些基本缩进和排除目录等，但遗憾的是无法与其他编辑器通用。</p><p><a href=\"https://github.com/thx/cube/blob/gh-pages/cube.sublime-project\">cube.css</a>&nbsp;中的示例：</p><ol><li><code>{</code></li><li><code>  \"folders\": [{</code></li><li><code>    \"path\": \".\",</code></li><li><code>    \"folder_exclude_patterns\": [\"node_modules\", \"_site\"] // 排除目录</code></li><li><code>  }],</code></li><li><code>  \"settings\": {</code></li><li><code>    \"tab_size\": 4,</code></li><li><code>    \"translate_tabs_to_spaces\": true, // tab 转换为空格</code></li><li><code>    \"ensure_newline_at_eof_on_save\": true, // 保存时文件末尾自动增加一个空行</code></li><li><code>    \"trim_trailing_white_space_on_save\": true // 删除行尾多余的空格</code></li><li><code>  }</code></li><li><code>}</code></li></ol><p><a href=\"http://editorconfig.org/\">EditorConfig</a>&nbsp;是一个帮助开发者在不同的编辑器中保持统一编码<br>风格的插件，支持了大部分流行的编辑器。它包括两部分：代码风格规则定义(<code>.editorconfig</code>&nbsp;文件)和支持此规则的编辑器插件。</p><h3><a></a>2. 快速开始</h3><ol><li><p>在项目根目录新建一个&nbsp;<code>.editorconfig</code>&nbsp;文件，保存为 utf-8 格式。Windows 用户由于无法直接新建一个只有扩展名的文件，新建的时候在末尾多加一个点 即可（<code>.editorconfig.</code>&nbsp;），也可以在命令行（CMD）中使用&nbsp;<code>echo.&gt;.editorconfig</code>&nbsp;来创建。<br><img src=\"https://gtms03.alicdn.com/tps/i3/TB1shUbGFXXXXbfXpXXXdvPSXXX-380-287.gif\" alt=\"Windows 中创建 .editorconfig 文件示例\"></p></li><li><p>编辑&nbsp;<code>.editorconfig</code>&nbsp;文件</p></li><li><ol><li><code># css-creating coding style</code></li><li><code>root = true</code></li><li><code></code></li><li><code># 为所有文件设置风格</code></li><li><code>[*]</code></li><li><code>charset = utf-8</code></li><li><code>indent_style = space</code></li><li><code>indent_size = 2</code></li><li><code>end_of_line = lf</code></li><li><code>trim_trailing_whitespace = true</code></li><li><code>insert_final_newline = true</code></li><li><code></code></li><li><code># 为 Markdown 文件保留行尾空格</code></li><li><code>[*.md]</code></li><li><code>trim_trailing_whitespace = false</code></li><li><code></code></li><li><code>＃ 匹配多种类型的文件（逗号前后不能有空格）</code></li><li><code>[*.{css,scss,sass}]</code></li><li><code>indent_size = 2</code></li><li><code></code></li><li><code># 匹配多个指定的文件（逗号前后不能有空格）</code></li><li><code>[{package.json,.travis.yml}]</code></li><li><code>indent_style = space</code></li><li><code>indent_size = 2</code></li></ol></li><li><p>安装编辑器插件</p></li></ol><p><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></p><table><tbody><tr><td><br><a href=\"https://github.com/editorconfig/editorconfig-jetbrains#readme\"><br><img src=\"https://editorconfig.org/logos/appCode.png\" alt=\"缩进与换行 - 图2\"><br><p>AppCode</p><br></a><br></td><td><br><a href=\"https://github.com/sindresorhus/atom-editorconfig#readme\"><br><img src=\"https://editorconfig.org/logos/atom.png\" alt=\"缩进与换行 - 图3\"><br><p>Atom</p><br></a><br></td><td><br><a href=\"https://github.com/kidwm/brackets-editorconfig/\"><br><img src=\"https://editorconfig.org/logos/brackets.png\" alt=\"缩进与换行 - 图4\"><br><p>Brackets</p><br></a><br></td><td><br><a href=\"https://github.com/editorconfig/editorconfig-codeblocks#readme\"><br><img src=\"https://editorconfig.org/logos/codeblocks.png\" alt=\"缩进与换行 - 图5\"><br><p>Code::Block</p><br></a><br></td></tr><tr><td><br><a href=\"https://github.com/editorconfig/editorconfig-emacs#readme\"><br><img src=\"https://editorconfig.org/logos/emacs.png\" alt=\"缩进与换行 - 图6\"><br><p>Emacs</p><br></a><br></td><td><br><a href=\"https://github.com/editorconfig/editorconfig-geany#readme\"><br><img src=\"https://editorconfig.org/logos/geany.png\" alt=\"缩进与换行 - 图7\"><br><p>Geany</p><br></a><br></td><td><br><a href=\"https://github.com/editorconfig/editorconfig-gedit#readme\"><br><img src=\"https://editorconfig.org/logos/gedit.png\" alt=\"缩进与换行 - 图8\"><br><p>Gedit</p><br></a><br></td><td><br><a href=\"https://github.com/RReverser/github-editorconfig#readme\"><br><img src=\"https://editorconfig.org/logos/github.png\" alt=\"缩进与换行 - 图9\"><br><p>GitHub</p><br></a><br></td></tr><tr><td><br><a href=\"https://github.com/editorconfig/editorconfig-jetbrains#readme\"><br><img src=\"https://editorconfig.org/logos/intellijIDEA.png\" alt=\"缩进与换行 - 图10\"><br><p>inteltdJ</p><br></a><br></td><td><br><a href=\"https://github.com/editorconfig/editorconfig-jedit#readme\"><br><img src=\"https://editorconfig.org/logos/jedit.png\" alt=\"缩进与换行 - 图11\"><br><p>jEdit</p><br></a><br></td><td><br><a href=\"https://github.com/editorconfig/editorconfig-notepad-plus-plus#readme\"><br><img src=\"https://editorconfig.org/logos/notepad.png\" alt=\"缩进与换行 - 图12\"><br><p>Notepad++</p><br></a><br></td><td><br><a href=\"https://github.com/editorconfig/editorconfig-jetbrains#readme\"><br><img src=\"https://editorconfig.org/logos/phpStorm.png\" alt=\"缩进与换行 - 图13\"><br><p>PHPStorm</p><br></a><br></td></tr><tr><td><br><a href=\"https://github.com/editorconfig/editorconfig-jetbrains#readme\"><br><img src=\"https://editorconfig.org/logos/pyCharm.png\" alt=\"缩进与换行 - 图14\"><br><p>PyCharm</p><br></a><br></td><td><br><a href=\"https://github.com/editorconfig/editorconfig-jetbrains#readme\"><br><img src=\"https://editorconfig.org/logos/rubyMine.png\" alt=\"缩进与换行 - 图15\"><br><p>RubyMine</p><br></a><br></td><td><br><a href=\"https://github.com/sindresorhus/editorconfig-sublime#readme\"><br><img src=\"https://editorconfig.org/logos/sublimetext.png\" alt=\"缩进与换行 - 图16\"><br><p>Subtdme Text</p><br></a><br></td><td><br><a href=\"https://github.com/Mr0grog/editorconfig-textmate#readme\"><br><img src=\"https://editorconfig.org/logos/textmate.png\" alt=\"缩进与换行 - 图17\"><br><p>TextMate</p><br></a><br></td></tr><tr><td><br><a href=\"https://github.com/editorconfig/editorconfig-vim#readme\"><br><img src=\"https://editorconfig.org/logos/vim.png\" alt=\"缩进与换行 - 图18\"><br><p>Vim</p><br></a><br></td><td><br><a href=\"https://github.com/editorconfig/editorconfig-visualstudio#readme\"><br><img src=\"https://editorconfig.org/logos/visualstudio.png\" alt=\"缩进与换行 - 图19\"><br><p>Visual Studio</p><br></a><br></td><td><br><a href=\"https://github.com/editorconfig/editorconfig-jetbrains#readme\"><br><img src=\"https://editorconfig.org/logos/webStorm.png\" alt=\"缩进与换行 - 图20\"><br><p>WebStorm</p><br></a><br></td></tr></tbody></table><h3><a></a>3. EditorConfig 文档</h3><ol><li><p>通配符规则：</p><p><code>*</code>&nbsp;匹配任意字符串，但不包括&nbsp;<code>/</code></p><p><code>**</code>&nbsp;匹配任何字符串</p><p><code>?</code>&nbsp;匹配任何单字符</p><p><code>[name]</code>&nbsp;匹配任何括号中的单字符</p><p><code>[!name]</code>&nbsp;匹配任何非括号中的单字符</p><p><code>{s1,s2,s3}</code>&nbsp;匹配任何给出的多个字符串</p><p>说明：</p><ul><li><code>[]</code>&nbsp;匹配规则是从当前目录算起。</li><li><code>?</code>&nbsp;只能匹配且必须有类似 f1.js、f2.js、f12.js 的文件，通过f??.js只能匹配到 f12.js，而f**.js可以匹配到所有。</li><li><code>{s1,s2,s3}</code>&nbsp;之间不能有空格。<code>{f1.js, f2.js, f3.js}</code>&nbsp;无法匹配<code>f2.js</code>&nbsp;和&nbsp;<code>f3.js</code>。</li><li><code>*</code>&nbsp;和&nbsp;<code>**</code>&nbsp;可以匹配空字符串，例如&nbsp;<code>f*.js</code>&nbsp;可以匹配到&nbsp;<code>f.js</code>。</li><li>多个匹配之间的规则如果不冲突是可以合并的。</li><li>优先级问题，如果两个匹配所定义的规则冲突，则会以最靠近打开文件的<code>`.editorconfig</code>文件为准。<br>如果同一个文件中匹配定义冲突，则会以最后定义的为准。<strong>所以在定义规则的时候，须先定义通用规则，后定义特殊规则。</strong></li></ul></li><li><p>属性规则（所有属性不区分大小写）</p></li></ol><table><thead><tr><th>属性</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>root</td><td>true, false</td><td>设置是否是当前项目的根目录</td></tr><tr><td>indent_style</td><td>tab, space</td><td>设置缩进格式</td></tr><tr><td>indent_size</td><td>number</td><td>设置缩进大小</td></tr><tr><td>tab_width</td><td>number</td><td>设置 tab 表示的空格数，默认等于indent_size，无需设定</td></tr><tr><td>end_of_line</td><td>lf(Unix \\n), cr(Mac OS \\r), crlf(Windows \\r\\n)</td><td>设置行尾换行符格式</td></tr><tr><td>charset</td><td>atin1, utf-8, utf-8-bom, utf-16be, utf-16le 等</td><td>设置字符编码</td></tr><tr><td>trim_trailing_whitespace</td><td>true, false</td><td>设置是否自动删除行尾多余空格</td></tr><tr><td>insert_final_newline</td><td>true, false</td><td>设置是否在保存文件时自动在行尾插入空行</td></tr></tbody></table>','2020-12-14 15:45:27'),(41,10,2,'注释','<h2>注释</h2><p>良好的注释使代码更具有可读性和可维护性，尤其是多人协作的项目，不要让团队其他成员来猜测一段<br>代码的意图。</p><p>注释风格应当相对简洁，做如下规范：</p><ul><li>区块注释放在单独一行。</li><li>保持注释内代码的缩进。</li><li>为了注释文字更具有可读性，合理控制每行的字数，推荐每行80个字符（40个汉字）以内。</li></ul><p>提示：通过扩展&nbsp;<a href=\"http://emmet.io/\">emmet</a>&nbsp;等工具（例如<a href=\"https://github.com/yisibl/emmet-plus\">emmet-plus</a>）可以快速输出统一的注释风格。</p><p>CSS 文件中有如下几种注释：</p><h3><a></a>1. 普通注释，注释文字左右各留一个空格。</h3><pre><ol><li><code>/* 普通注释 */</code></li></ol></pre><h3><a></a>2. 区块注释</h3><p>注释横线的长度为80个字符，作为换行参考。</p><p>一级区块注释</p><ol><li><code>/* ==========================================================================</code></li><li><code>   一级区块注释</code></li><li><code>   ========================================================================== */</code></li></ol><p>二级区块注释</p><ol><li><code>/* --------------------------------------------------------------------------</code></li><li><code>   二级区块注释</code></li><li><code>   -------------------------------------------------------------------------- */</code></li></ol><h3><a></a>3. Doxygen 风格的注释</h3><p>每个 CSS 文件的头部或区块的开始处应当包含&nbsp;<a href=\"http://zh.wikipedia.org/wiki/Doxygen\">Doxygen</a>&nbsp;风格的注释，以阐明该文件或这段代码的<br>作用、作者、最后更新时间等信息。</p><p><a href=\"http://zh.wikipedia.org/wiki/Doxygen\">Doxygen</a>&nbsp;风格的注释以 /<em>* 开始，每行以&nbsp;</em>号开头。</p><ol><li><code>/**</code></li><li><code> * Doxygen 风格的注释示例</code></li><li><code> * @file：    文件信息</code></li><li><code> * @author:   一丝</code></li><li><code> * @update:   2013-11-5</code></li><li><code> * @note:     注解</code></li><li><code> * @doc:      相关文档</code></li><li><code> *</code></li><li><code> * 这里是更详细的描述，当然我们要把字数控制在每行80个字符（40个汉字）以内。如果</code></li><li><code> * 一行写不下，需要另起一行。</code></li><li><code> */</code></li></ol><p><a href=\"http://zh.wikipedia.org/wiki/Doxygen\">Doxygen</a>&nbsp;风格的注释内如果包含其他代码，不写开头的 * 号，以方便复制代码。</p><ol><li><code>&nbsp;/**</code></li><li><code> * Doxygen 风格的注释包含代码</code></li><li><code> * </code></li><li><code> * 例如我们可以在注释中嵌入 HTML 代码，同样保持代码的缩进。</code></li><li><code> *</code></li><li><code>  &lt;div class=\"mod\"&gt;</code></li><li><code>    &lt;p&gt;这个模块名叫 mod&lt;/p&gt;</code></li><li><code>  &lt;/div&gt;</code></li><li><code> */</code></li></ol><h3><a></a>4. CSS 预处理工具中的单行注释</h3><p>Sass， LESS， Stylus 中可以使用单行注释。</p><pre><ol><li><code>// 注释内容</code></li></ol></pre><h3><a></a>5. clean-css 等压缩工具中的注释</h3><p>clean-css 是一个 CSS 压缩工具，为了保留 CSS 文件的版权信息等特殊需求，支持以下形式的注释</p><pre><button><i></i>&nbsp;复制代码</button></pre>','2020-12-14 15:49:56'),(42,11,1,'Readme','<p><img src=\"https://static.sitestack.cn/projects/kubespray/1c9b362044fbd4c6e71c79da1fdeb65a.png\" alt=\"Kubernetes Logo\"></p><h1><a></a>Deploy a Production Ready Kubernetes Cluster</h1><p>If you have questions, check the&nbsp;<a href=\"https://kubespray.io/\">documentation</a>&nbsp;and join us on the&nbsp;<a href=\"https://kubernetes.slack.com/\">kubernetes slack</a>, channel&nbsp;<strong>#kubespray</strong>. You can get your invite&nbsp;<a href=\"http://slack.k8s.io/\">here</a></p><ul><li>Can be deployed on&nbsp;<strong>AWS, GCE, Azure, OpenStack, vSphere, Packet (bare metal), Oracle Cloud Infrastructure (Experimental), or Baremetal</strong></li><li><strong>Highly available</strong>&nbsp;cluster</li><li><strong>Composable</strong>&nbsp;(Choice of the network plugin for instance)</li><li>Supports most popular&nbsp;<strong>Linux distributions</strong></li><li><strong>Continuous integration tests</strong></li></ul><h2><a></a>Quick Start</h2><p>To deploy the cluster you can use :</p><h3><a></a>Ansible</h3><h4><a></a>Usage</h4><ol><li><code># Install dependencies from ``requirements.txt``</code></li><li><code>sudo pip install -r requirements.txt</code></li><li><code></code></li><li><code># Copy ``inventory/sample`` as ``inventory/mycluster``</code></li><li><code>cp -rfp inventory/sample inventory/mycluster</code></li><li><code></code></li><li><code># Update Ansible inventory file with inventory builder</code></li><li><code>declare -a IPS=(10.10.1.3 10.10.1.4 10.10.1.5)</code></li><li><code>CONFIG_FILE=inventory/mycluster/hosts.yml python3 contrib/inventory_builder/inventory.py ${IPS[@]}</code></li><li><code></code></li><li><code># Review and change parameters under ``inventory/mycluster/group_vars``</code></li><li><code>cat inventory/mycluster/group_vars/all/all.yml</code></li><li><code>cat inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml</code></li><li><code></code></li><li><code># Deploy Kubespray with Ansible Playbook - run the playbook as root</code></li><li><code># The option `-b` is required, as for example writing SSL keys in /etc/,</code></li><li><code># installing packages and interacting with various systemd daemons.</code></li><li><code># Without -b the playbook will fail to run!</code></li><li><code>ansible-playbook -i inventory/mycluster/hosts.yml --become --become-user=root cluster.yml</code></li></ol><p>Note: When Ansible is already installed via system packages on the control machine, other python packages installed via&nbsp;<code>sudo pip install -r requirements.txt</code>&nbsp;will go to a different directory tree (e.g.&nbsp;<code>/usr/local/lib/python2.7/dist-packages</code>&nbsp;on Ubuntu) from Ansible’s (e.g.&nbsp;<code>/usr/lib/python2.7/dist-packages/ansible</code>&nbsp;still on Ubuntu). As a consequence,&nbsp;<code>ansible-playbook</code>&nbsp;command will fail with:</p><p>ERROR! no action detected in task. This often indicates a misspelled module name, or incorrect module path.<br></p><p>probably pointing on a task depending on a module present in requirements.txt (i.e. “unseal vault”).</p><p>One way of solving this would be to uninstall the Ansible package and then, to install it via pip but it is not always possible. A workaround consists of setting&nbsp;<code>ANSIBLE_LIBRARY</code>&nbsp;and&nbsp;<code>ANSIBLE_MODULE_UTILS</code>&nbsp;environment variables respectively to the&nbsp;<code>ansible/modules</code>&nbsp;and&nbsp;<code>ansible/module_utils</code>&nbsp;subdirectories of pip packages installation location, which can be found in the Location field of the output of&nbsp;<code>pip show [package]</code>&nbsp;before executing&nbsp;<code>ansible-playbook</code>.</p><h3><a></a>Vagrant</h3><p>For Vagrant we need to install python dependencies for provisioning tasks. Check if Python and pip are installed:</p><pre><ol><li><code>python -V &amp;&amp; pip -V</code></li></ol></pre><p>If this returns the version of the software, you’re good to go. If not, download and install Python from here&nbsp;<a href=\"https://www.python.org/downloads/source/\">https://www.python.org/downloads/source/</a>&nbsp;Install the necessary requirements</p><pre><ol><li><code>sudo pip install -r requirements.txt</code></li><li><code>vagrant up</code></li></ol></pre><h2><a></a>Documents</h2><ul><li><a href=\"https://www.bookstack.cn/read/kubespray/README.md#requirements\">Requirements</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/comparisons.md\">Kubespray vs …</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/getting-started.md\">Getting started</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/ansible.md\">Ansible inventory and tags</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/integration.md\">Integration with existing ansible repo</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/vars.md\">Deployment data variables</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/dns-stack.md\">DNS stack</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/ha-mode.md\">HA mode</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/README.md#network-plugins\">Network plugins</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/vagrant.md\">Vagrant install</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/coreos.md\">CoreOS bootstrap</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/debian.md\">Debian Jessie setup</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/opensuse.md\">openSUSE setup</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/downloads.md\">Downloaded artifacts</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/cloud.md\">Cloud providers</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/openstack.md\">OpenStack</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/aws.md\">AWS</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/azure.md\">Azure</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/vsphere.md\">vSphere</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/packet.md\">Packet Host</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/large-deployments.md\">Large deployments</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/upgrades.md\">Upgrades basics</a></li><li><a href=\"https://www.bookstack.cn/read/kubespray/roadmap.md\">Roadmap</a></li></ul><h2><a></a>Supported Linux Distributions</h2><ul><li><strong>Container Linux by CoreOS</strong></li><li><strong>Debian</strong>&nbsp;Buster, Jessie, Stretch, Wheezy</li><li><strong>Ubuntu</strong>&nbsp;16.04, 18.04</li><li><strong>CentOS/RHEL</strong>&nbsp;7</li><li><strong>Fedora</strong>&nbsp;28</li><li><strong>Fedora/CentOS</strong>&nbsp;Atomic</li><li><strong>openSUSE</strong>&nbsp;Leap 42.3/Tumbleweed</li></ul><p>Note: Upstart/SysV init based OS types are not supported.</p><h2><a></a>Supported Components</h2><ul><li>Core<ul><li><a href=\"https://github.com/kubernetes/kubernetes\">kubernetes</a>&nbsp;v1.14.3</li><li><a href=\"https://github.com/coreos/etcd\">etcd</a>&nbsp;v3.2.26</li><li><a href=\"https://www.docker.com/\">docker</a>&nbsp;v18.06 (see note)</li><li><a href=\"http://cri-o.io/\">cri-o</a>&nbsp;v1.11.5 (experimental: see&nbsp;<a href=\"https://www.bookstack.cn/read/kubespray/cri-o.md\">CRI-O Note</a>. Only on centos based OS)</li></ul></li><li>Network Plugin<ul><li><a href=\"https://github.com/projectcalico/calico\">calico</a>&nbsp;v3.4.0</li><li><a href=\"https://github.com/projectcalico/canal\">canal</a>&nbsp;(given calico/flannel versions)</li><li><a href=\"https://github.com/cilium/cilium\">cilium</a>&nbsp;v1.3.0</li><li><a href=\"https://github.com/contiv/install\">contiv</a>&nbsp;v1.2.1</li><li><a href=\"https://github.com/coreos/flannel\">flanneld</a>&nbsp;v0.11.0</li><li><a href=\"https://github.com/cloudnativelabs/kube-router\">kube-router</a>&nbsp;v0.2.5</li><li><a href=\"https://github.com/intel/multus-cni\">multus</a>&nbsp;v3.1.autoconf</li><li><a href=\"https://github.com/weaveworks/weave\">weave</a>&nbsp;v2.5.1</li></ul></li><li>Application<ul><li><a href=\"https://github.com/kubernetes-incubator/external-storage\">cephfs-provisioner</a>&nbsp;v2.1.0-k8s1.11</li><li><a href=\"https://github.com/kubernetes-incubator/external-storage\">rbd-provisioner</a>&nbsp;v2.1.1-k8s1.11</li><li><a href=\"https://github.com/jetstack/cert-manager\">cert-manager</a>&nbsp;v0.5.2</li><li><a href=\"https://github.com/coredns/coredns\">coredns</a>&nbsp;v1.5.0</li><li><a href=\"https://github.com/kubernetes/ingress-nginx\">ingress-nginx</a>&nbsp;v0.21.0</li></ul></li></ul><p>Note: The list of validated&nbsp;<a href=\"https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.13.md\">docker versions</a>&nbsp;was updated to 1.11.1, 1.12.1, 1.13.1, 17.03, 17.06, 17.09, 18.06. kubeadm now properly recognizes Docker 18.09.0 and newer, but still treats 18.06 as the default supported version. The kubelet might break on docker’s non-standard version numbering (it no longer uses semantic versioning). To ensure auto-updates don’t break your cluster look into e.g. yum versionlock plugin or apt pin).</p><h2><a></a>Requirements</h2><ul><li><strong>Ansible v2.7.8 (or newer) and python-netaddr is installed on the machine that will run Ansible commands</strong></li><li><strong>Jinja 2.9 (or newer) is required to run the Ansible Playbooks</strong></li><li>The target servers must have&nbsp;<strong>access to the Internet</strong>&nbsp;in order to pull docker images. Otherwise, additional configuration is required (See&nbsp;<a href=\"https://github.com/kubernetes-sigs/kubespray/blob/master/docs/downloads.md#offline-environment\">Offline Environment</a>)</li><li>The target servers are configured to allow&nbsp;<strong>IPv4 forwarding</strong>.</li><li><strong>Your ssh key must be copied</strong>&nbsp;to all the servers part of your inventory.</li><li>The&nbsp;<strong>firewalls are not managed</strong>, you’ll need to implement your own rules the way you used to. in order to avoid any issue during deployment you should disable your firewall.</li><li>If kubespray is ran from non-root user account, correct privilege escalation method should be configured in the target servers. Then the&nbsp;<code>ansible_become</code>&nbsp;flag or command parameters&nbsp;<code>--become or -b</code>&nbsp;should be specified.</li></ul><p>Hardware:<br>These limits are safe guarded by Kubespray. Actual requirements for your workload can differ. For a sizing guide go to the&nbsp;<a href=\"https://kubernetes.io/docs/setup/cluster-large/#size-of-master-and-master-components\">Building Large Clusters</a>&nbsp;guide.</p><ul><li>Master<ul><li>Memory: 1500 MB</li></ul></li><li>Node<ul><li>Memory: 1024 MB</li></ul></li></ul><h2><a></a>Network Plugins</h2><p>You can choose between 6 network plugins. (default:&nbsp;<code>calico</code>, except Vagrant uses&nbsp;<code>flannel</code>)</p><ul><li><p><a href=\"https://www.bookstack.cn/read/kubespray/flannel.md\">flannel</a>: gre/vxlan (layer 2) networking.</p></li><li><p><a href=\"https://www.bookstack.cn/read/kubespray/calico.md\">calico</a>: bgp (layer 3) networking.</p></li><li><p><a href=\"https://github.com/projectcalico/canal\">canal</a>: a composition of calico and flannel plugins.</p></li><li><p><a href=\"http://docs.cilium.io/en/latest/\">cilium</a>: layer 3/4 networking (as well as layer 7 to protect and secure application protocols), supports dynamic insertion of BPF bytecode into the Linux kernel to implement security services, networking and visibility logic.</p></li><li><p><a href=\"https://www.bookstack.cn/read/kubespray/contiv.md\">contiv</a>: supports vlan, vxlan, bgp and Cisco SDN networking. This plugin is able to apply firewall policies, segregate containers in multiple network and bridging pods onto physical networks.</p></li><li><p><a href=\"https://www.bookstack.cn/read/kubespray/weave.md\">weave</a>: Weave is a lightweight container overlay network that doesn’t require an external K/V database cluster. (Please refer to&nbsp;<code>weave</code>&nbsp;<a href=\"http://docs.weave.works/weave/latest_release/troubleshooting.html\">troubleshooting documentation</a>).</p></li><li><p><a href=\"https://www.bookstack.cn/read/kubespray/kube-router.md\">kube-router</a>: Kube-router is a L3 CNI for Kubernetes networking aiming to provide operational simplicity and high performance: it uses IPVS to provide Kube Services Proxy (if setup to replace kube-proxy), iptables for network policies, and BGP for ods L3 networking (with optionally BGP peering with out-of-cluster BGP peers). It can also optionally advertise routes to Kubernetes cluster Pods CIDRs, ClusterIPs, ExternalIPs and LoadBalancerIPs.</p></li><li><p><a href=\"https://www.bookstack.cn/read/kubespray/multus.md\">multus</a>: Multus is a meta CNI plugin that provides multiple network interface support to pods. For each interface Multus delegates CNI calls to secondary CNI plugins such as Calico, macvlan, etc.</p></li></ul><p>The choice is defined with the variable&nbsp;<code>kube_network_plugin</code>. There is also an option to leverage built-in cloud provider networking instead. See also&nbsp;<a href=\"https://www.bookstack.cn/read/kubespray/netcheck.md\">Network checker</a>.</p><h2><a></a>Community docs and resources</h2><ul><li><a href=\"https://kubernetes.io/docs/getting-started-guides/kubespray/\">kubernetes.io/docs/getting-started-guides/kubespray/</a></li><li><a href=\"https://github.com/gregbkr/kubernetes-kargo-logging-monitoring\">kubespray, monitoring and logging</a>&nbsp;by @gregbkr</li><li><a href=\"https://rsmitty.github.io/Terraform-Ansible-Kubernetes/\">Deploy Kubernetes w/ Ansible &amp; Terraform</a>&nbsp;by @rsmitty</li><li><a href=\"https://www.youtube.com/watch?v=N9q51JgbWu8\">Deploy a Kubernetes Cluster with Kubespray (video)</a></li></ul><h2><a></a>Tools and projects on top of Kubespray</h2><ul><li><a href=\"https://github.com/digitalrebar/provision/blob/master/doc/integrations/ansible.rst\">Digital Rebar Provision</a></li><li><a href=\"https://github.com/kubernetes-sigs/kubespray/tree/master/contrib/terraform\">Terraform Contrib</a></li></ul><h2><a></a>CI Tests</h2><p><a href=\"https://gitlab.com/kargo-ci/kubernetes-sigs-kubespray/pipelines\"><img src=\"https://static.sitestack.cn/projects/kubespray/cc241e3d3fcf5a57dbe00ff657e6b42a.svg\" alt=\"Build graphs\"></a></p><p>CI/end-to-end tests sponsored by Google (GCE) See the&nbsp;<a href=\"https://www.bookstack.cn/read/kubespray/test_cases.md\">test matrix</a>&nbsp;for details.</p>','2020-12-14 15:56:22');
/*!40000 ALTER TABLE `em_book_section` ENABLE KEYS */;

#
# Structure for table "em_exam_status"
#

DROP TABLE IF EXISTS `em_exam_status`;
CREATE TABLE `em_exam_status` (
  `id` int(11) NOT NULL DEFAULT '0' COMMENT 'id字段',
  `on_off` tinyint(4) NOT NULL DEFAULT '1' COMMENT '考试开关 1开启 0关闭',
  `content` varchar(255) NOT NULL COMMENT '考试维护信息',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

#
# Data for table "em_exam_status"
#

/*!40000 ALTER TABLE `em_exam_status` DISABLE KEYS */;
INSERT INTO `em_exam_status` VALUES (1,1,'当前未到考试时间，考试已关闭维护，详细联系管理员：184941312');
/*!40000 ALTER TABLE `em_exam_status` ENABLE KEYS */;

#
# Structure for table "em_judge"
#

DROP TABLE IF EXISTS `em_judge`;
CREATE TABLE `em_judge` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id编号',
  `judge_name` varchar(255) NOT NULL COMMENT '题目',
  `right_key` varchar(255) NOT NULL COMMENT '正确答案',
  `status` smallint(4) NOT NULL DEFAULT '1' COMMENT '状态:1是,0否',
  `major_id` int(10) NOT NULL COMMENT '对应专业表的id',
  `subject_id` int(10) NOT NULL COMMENT '对应科目表的id',
  `add_time` datetime NOT NULL COMMENT '添加时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=298 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='判断题';

#
# Data for table "em_judge"
#

/*!40000 ALTER TABLE `em_judge` DISABLE KEYS */;
INSERT INTO `em_judge` VALUES (1,'”上海西北京” 可以通过like ‘%上海_’查出来。','0',1,2,3,'2019-10-30 11:00:45'),(2,'truncate是DDL操作，不能 rollback。','1',1,2,3,'2019-10-30 11:00:45'),(3,'Oracle数据库中字符串和日期必须使用双引号标识。','0',1,2,3,'2019-10-30 11:00:45'),(4,'Oracle数据库中字符串数据是区分大小写的。','1',1,2,3,'2019-10-30 11:00:45'),(5,'drop是属于DML(数据操纵)语言','0',1,2,3,'2019-10-30 11:00:45'),(6,'oracle系统中SGA所有用户进程和服务器进程所共享','0',1,2,3,'2019-10-30 11:00:45'),(7,'oracle数据库系统中数据块的大小与操作系统有关','1',1,2,3,'2019-10-30 11:00:45'),(8,'oracle数据库系统中，启动数据库和第一步是启动一个数据库实例（）。 启动数据库实例、挂载数据库','1',1,2,3,'2019-10-30 11:00:45'),(9,'Order by 子句仅对检索数据的显示有影响，并不改变表中行的内部顺序。','1',1,2,3,'2019-10-30 11:00:45'),(10,'从一个表中删除元组时， delete 和 drop table 命令可以起到同样的效果。（） 元组其实就是行，delete可以，drop的可以删除表对象','0',1,2,3,'2019-10-30 11:00:45'),(11,'与主键不同，惟一键可以是 null 值。（） 主键是非空的','0',1,2,3,'2019-10-30 11:00:45'),(12,'Delete 可以有选择地删除记录，使用 rollback 语句可以取消这个命令的执行。（） delete之后没有commit的时候是可以rollback的','1',1,2,3,'2019-10-30 11:00:45'),(13,'Create table &lt;table name&gt; as select 能够创建一个复制表对象。','1',1,2,3,'2019-10-30 11:00:45'),(14,'在Scratch中,画笔部件中的“落笔”将角色像一个个图章一样印在舞台上。','0',1,2,6,'2019-10-30 11:01:11'),(15,'随机数,就是随机产生的、无规则的数,在Scratch中,只需调用随机选择部件便可产生随机数','1',1,2,6,'2019-10-30 11:01:11'),(16,'在Scratch中,通过“广播”和“当收到广播”实现角色转换','1',1,2,6,'2019-10-30 11:01:11'),(17,'变量是指在程序运行过程中其值会变化的量,变量可以直接使用,不必预先定义','0',1,2,6,'2019-10-30 11:01:11'),(18,'循环结构是程序设计中的三种基本结构之一,在循环结构中重复执行的程序段叫做循环','1',1,2,6,'2019-10-30 11:01:11'),(19,'Scratch的“数字和逻辑运算“部件中,包含有四个算术运算部件----加、减、乘、除,,三种关系运算符----小于、等于、大于,三种逻辑运算部件----且、或、不成立','1',1,2,6,'2019-10-30 11:01:11'),(20,'当运行程序时,计算机按照程序中语言的顺序依次执行它们的指定操作,这种程序结构就是顺序结构','1',1,2,6,'2019-10-30 11:01:11'),(21,'Scratch是一种积木式编程软件,他通过鼠标拖曳部件,来实现对角色的编程','1',1,2,6,'2019-10-30 11:01:11'),(22,'Scratch中的默认角色是一只可爱的小猫,我们也可以通过右下区域的新增和删除角色来实现角色的更换','1',1,2,6,'2019-10-30 11:01:11'),(23,' Scratch 提供播放声音、演奏音符和敲鼓三种音乐输出形式','1',1,2,6,'2019-10-30 11:01:11'),(24,'scratch 指令模块区:共有六大类指令。','0',1,2,6,'2019-10-30 11:01:11'),(25,'当绿旗被点击的时候程序开始运行','1',1,2,6,'2019-10-30 11:01:11'),(26,'Scartch软件分了三个区，分别是舞台区，脚本区，和积木区','1',1,2,6,'2019-10-30 11:01:11'),(27,'Scartch程序是以.scr结尾的','0',1,2,6,'2019-10-30 11:01:11'),(28,'编程是编写语言','0',1,2,6,'2019-10-30 11:01:11'),(29,'变量的长度必须大于255个字符','0',1,2,6,'2019-10-30 11:01:11'),(30,'属于动作板块的是碰到边缘就反弹','1',1,2,6,'2019-10-30 11:01:11'),(31,'背景的设置不包括利用画板编程器创建或编辑文本','0',1,2,6,'2019-10-30 11:01:11'),(32,'造型的设计步骤是选定角色一点击按钮一切换到造型区域-设计造型','1',1,2,6,'2019-10-30 11:01:11'),(33,'数值逻辑不包括取小数','1',1,2,6,'2019-10-30 11:01:11'),(34,'引用在声明时必须对其初始化，以绑定某个已经存在的变量（或对象），在该引用的生命期内，该绑定不能被更改。','1',1,3,2,'2019-10-30 11:01:26'),(35,'指针变量在定义时必须对其初始化，以锁定某个已经存在的目标变量（或对象），在该指针变量的生命期内，该指向不能被更改。','0',1,3,2,'2019-10-30 11:01:26'),(36,'值返回的函数（如：double sqrt(double);）的调用表达式，如：sqrt(2.0)）代表一个无名的临时变量（或对象），一般不将其用作左值。','1',1,3,2,'2019-10-30 11:01:26'),(37,'引用返回的函数，可以返回该函数中值传递的形参变量（或对象）。','0',1,3,2,'2019-10-30 11:01:26'),(38,'任何类都有构造函数、复制构造函数、析构函数、赋值运算符函数。','1',1,3,2,'2019-10-30 11:01:26'),(39,'有静态数据成员的类，一般地应该考虑为其设计复制构造函数、析构函数。','1',1,3,2,'2019-10-30 11:01:26'),(40,'将用于输出的插入运算符函数operator&lt;&lt;设计成友元函数的根本原因是因为进行输出操作时需要访问对象的内部数据成员。','0',1,3,2,'2019-10-30 11:01:26'),(41,'在C++程序中，操作符new的功能与calloc函数的功能完全一样。','0',1,3,2,'2019-10-30 11:01:26'),(42,'创建一个C++字符串对象（如：string str;），则sizeof(str)的值等于str.length()的值。其中成员函数length为返回字符串的长度。','0',1,3,2,'2019-10-30 11:01:26'),(43,'基类的私有数据成员在派生类中是存在的，但不可直接访问，需要用从基类继承下来的函数访问。','1',1,3,2,'2019-10-30 11:01:26'),(44,'类的构造函数的函数名与类名相同，可以重载构造函数。','1',1,3,2,'2019-10-30 11:01:26'),(45,'类的析构函数可以被重载。','0',1,3,2,'2019-10-30 11:01:26'),(46,'重载运算符函数不能改变运算符的操作数个数、优先级和结合方向。','1',1,3,2,'2019-10-30 11:01:26'),(47,'引用在声明时必须对其初始化，以绑定某个已经存在的变量（或对象），在该引用的生命期内，该绑定不能被更改。','1',1,3,2,'2019-10-30 11:01:26'),(48,'指针变量在定义时必须对其初始化，以锁定某个已经存在的目标变量（或对象），在该指针变量的生命期内，该指向不能被更改。','0',1,3,2,'2019-10-30 11:01:26'),(49,'类的非静态成员函数均有一个隐含的形式参数this指针常量，用于指向调用该函数的对象。函数体中不能改变该指针常量的指向（即锁定调用该函数的对象）。','1',1,3,2,'2019-10-30 11:01:26'),(50,'派生类继承了基类的所有数据成员，并且在派生类的成员函数中都能直接访问基类的访问属性为private的成员。','0',1,3,2,'2019-10-30 11:01:26'),(51,'构造派生类对象时，先调用基类的构造函数，后执行派生类的构造函数。析构派生类对象时，先调用基类的析构函数，后执行派生类的析构函数。','0',1,3,2,'2019-10-30 11:01:26'),(52,'含纯虚函数的类称为抽象类，不能创建抽象类的对象，不能定义抽象类的指针变量，不能声明抽象类的引用。','0',1,3,2,'2019-10-30 11:01:26'),(53,'引用返回的函数可以作左值，也避免了函数值返回时创建与返回类型相同的临时无名对象。','1',1,3,2,'2019-10-30 11:01:26'),(54,'创建对象意味着给对象分配内存空间。在对象的基本空间中存放了该对象的非静态数据成员。','1',1,3,2,'2019-10-30 11:01:26'),(55,'运算符sizeof能够测量对象的基本空间及对象的资源空间所占用的内存单元字节数的总和。','0',1,3,2,'2019-10-30 11:01:26'),(56,'对于在某函数内创建的多个局部自动对象，当该函数返回而引起这些局部自动对象销毁时，先创建的对象先析构、后创建的对象后析构。','0',1,3,2,'2019-10-30 11:01:26'),(57,'类的所有成员函数都有一个隐含传递的形参this指针。','0',1,3,2,'2019-10-30 11:01:26'),(58,'类的友元函数可以是另一个类的成员函数。甚至另一个类的所有成员函数都是本类的友元函数（友类）。','1',1,3,2,'2019-10-30 11:01:26'),(59,'常量成员函数不能修改对象的数据成员的值。','1',1,3,2,'2019-10-30 11:01:26'),(60,'由于前增量、前减量、后增量、后减量运算符皆为单目运算符，故在重载后增量、后减量运算符时需要在其运算符函数声明及定义时添加一个纯形式上的参数int，以示与前增量、前减量运算符函数的区别。','1',1,3,2,'2019-10-30 11:01:26'),(61,'派生类（或称为子类）的成员函数可以直接访问其基类（或成为父类）的所有成员，甚至是基类的私有成员。','0',1,3,2,'2019-10-30 11:01:26'),(62,'含有纯虚函数的类被称为抽象类，可以创建抽象类的对象。','0',1,3,2,'2019-10-30 11:01:26'),(63,'若某个类可能作为基类，则最好将其析构函数设计成虚函数。','1',1,3,2,'2019-10-30 11:01:26'),(64,'要修改用于列表项的标志类型，可以使用属性 list-style-color','0',1,1,1,'2019-10-30 11:02:06'),(65,'W3C是指万维网联盟。','1',1,1,1,'2019-10-30 11:02:06'),(66,'ID 选择器类与类选择器完全相同','0',1,1,1,'2019-10-30 11:02:06'),(67,'浮动框不在文档的普通流中。','0',1,1,1,'2019-10-30 11:02:06'),(68,'display 属性规定元素应该生成的框的类型。','1',1,1,1,'2019-10-30 11:02:06'),(69,'border-color属性设置边框颜色。','1',1,1,1,'2019-10-30 11:02:06'),(70,'CSS 只允许应用纯色作为背景。','0',1,1,1,'2019-10-30 11:02:06'),(71,'&lt;a&gt; 标签定义超链接，用于从一张页面链接到另一张页面。','1',1,1,1,'2019-10-30 11:02:06'),(72,'HTML中,空格的代码为”&amp;nbsp;”','1',1,1,1,'2019-10-30 11:02:06'),(73,'id 属性规定元素的行内样式','0',1,1,1,'2019-10-30 11:02:06'),(74,'HTML标记符的属性一般不区分大小写','1',1,1,1,'2019-10-30 11:02:06'),(75,'GIF格式的图象最多可以显示256种颜色','1',1,1,1,'2019-10-30 11:02:06'),(76,'在HTML表格中,TD和TH标记符都可以用来包括单元格内容','1',1,1,1,'2019-10-30 11:02:06'),(77,'在HTML表格中,表格的列数等于任意一行中TH与TD的个数','0',1,1,1,'2019-10-30 11:02:06'),(78,'在HTML表格中,表格的列数等于任意一行中TH与TD的colspan属性的和。','0',1,1,1,'2019-10-30 11:02:06'),(79,'在HTML中,与表格一样,表单也能嵌套。','0',1,1,1,'2019-10-30 11:02:06'),(80,'HTML表格内容的垂直对齐方式默认为垂直居中。','1',1,1,1,'2019-10-30 11:02:06'),(81,'网站就是一个链接的页面集合。','1',1,1,1,'2019-10-30 11:02:06'),(82,'所有的HTML标记符都包括开始标记符和结束标记符。','0',1,1,1,'2019-10-30 11:02:06'),(83,'HTML表格在默认情况下有边框。','0',1,1,1,'2019-10-30 11:02:06'),(84,'”上海西北京” 可以通过like ‘%上海_’查出来。','0',1,1,4,'2019-10-30 11:02:21'),(85,'truncate是DDL操作，不能 rollback。','1',1,1,4,'2019-10-30 11:02:21'),(86,'Oracle数据库中字符串和日期必须使用双引号标识。','0',1,1,4,'2019-10-30 11:02:21'),(87,'Oracle数据库中字符串数据是区分大小写的。','1',1,1,4,'2019-10-30 11:02:21'),(88,'drop是属于DML(数据操纵)语言','0',1,1,4,'2019-10-30 11:02:21'),(89,'oracle系统中SGA所有用户进程和服务器进程所共享','0',1,1,4,'2019-10-30 11:02:21'),(90,'oracle数据库系统中数据块的大小与操作系统有关','1',1,1,4,'2019-10-30 11:02:21'),(91,'oracle数据库系统中，启动数据库和第一步是启动一个数据库实例（）。 启动数据库实例、挂载数据库','1',1,1,4,'2019-10-30 11:02:21'),(92,'Order by 子句仅对检索数据的显示有影响，并不改变表中行的内部顺序。','1',1,1,4,'2019-10-30 11:02:21'),(93,'从一个表中删除元组时， delete 和 drop table 命令可以起到同样的效果。（） 元组其实就是行，delete可以，drop的可以删除表对象','0',1,1,4,'2019-10-30 11:02:21'),(94,'与主键不同，惟一键可以是 null 值。（） 主键是非空的','0',1,1,4,'2019-10-30 11:02:21'),(95,'Delete 可以有选择地删除记录，使用 rollback 语句可以取消这个命令的执行。（） delete之后没有commit的时候是可以rollback的','1',1,1,4,'2019-10-30 11:02:21'),(96,'Create table &lt;table name&gt; as select 能够创建一个复制表对象。','1',1,1,4,'2019-10-30 11:02:21'),(97,'rpm–e命令可以进行查询软件包的工作','0',1,4,5,'2019-10-30 11:02:23'),(98,' 在KDE环境中的命令终端与进入命令控制台一样，必须完成新用户登录过程','0',1,4,5,'2019-10-30 11:02:23'),(99,'KDE最多只能提供四个虚拟桌面。','0',1,4,5,'2019-10-30 11:02:23'),(100,'因为命令终端窗口是输入命令的地方，所以它和一般窗口有些区别，比如一些针对 窗口操作的快捷键就不再有效','0',1,4,5,'2019-10-30 11:02:23'),(101,'并不是所有的窗口都具备工具栏，有的窗口就没有工具栏，但是窗口都有菜单栏','0',1,4,5,'2019-10-30 11:02:23'),(102,'在grep命令中，有*这个通配符','0',1,4,5,'2019-10-30 11:02:23'),(103,'安装桌面系统时必须给出root的登录密码，不许为空','0',1,4,5,'2019-10-30 11:02:23'),(104,'chown命令的作用是改变文件的运行权限。','0',1,4,5,'2019-10-30 11:02:23'),(105,'/usr文件系统中包含了所有的系统命令、库文件和文档','0',1,4,5,'2019-10-30 11:02:23'),(106,'进入vi时，系统处于编辑模式','0',1,4,5,'2019-10-30 11:02:23'),(107,'linux的内核版本和发行版本号是一样的','0',1,4,5,'2019-10-30 11:02:23'),(108,'Ubuntu LINUX安装时自动创建了根用户','1',1,4,5,'2019-10-30 11:02:23'),(109,'LINUX中的超级用户为root,登陆时不需要口令','0',1,4,5,'2019-10-30 11:02:23'),(110,'Linux的特点之一是它是一种开放、免费的操作系统','1',1,4,5,'2019-10-30 11:02:23'),(111,'确定当前目录使用的命令为：pwd','1',1,4,5,'2019-10-30 11:02:23'),(112,'Ubuntu默认的 Linux 文件系统是ext3','1',1,4,5,'2019-10-30 11:02:23'),(113,'我们可以使用命令kill来结束Linux系统下运行的进程','1',1,4,5,'2019-10-30 11:02:23'),(114,'Linux系统管理员的权限和普通用户的权限相同','0',1,4,5,'2019-10-30 11:02:23'),(115,'Linux系统的任何用户都可以设置计算机的名字','0',1,4,5,'2019-10-30 11:02:23'),(116,'改变文件的命令是chown吗','1',1,4,5,'2019-10-30 11:02:23'),(117,'Linux操作系统是一种多用户多进程的系统吗','1',1,4,5,'2019-10-30 11:02:23'),(118,'Python代码的注释只有一种方式，那就是使用#符号。','0',1,4,9,'2019-10-30 11:02:38'),(119,'调用函数时，在实参前面加一个型号*表示序列解包','1',1,4,9,'2019-10-30 11:02:38'),(120,'Python支持使用字典的“键”作为下标来访问字典中的值。','1',1,4,9,'2019-10-30 11:02:38'),(121,'列表可以作为字典的“键”。','0',1,4,9,'2019-10-30 11:02:38'),(122,'元组可以作为字典的“键”。','1',1,4,9,'2019-10-30 11:02:38'),(123,'字典的“键”必须是不可变的。','1',1,4,9,'2019-10-30 11:02:38'),(124,'尽管可以使用import语句一次导入任意多个标准库或扩展库，但是仍建议每次只导入一个标准库或扩展库。','1',1,4,9,'2019-10-30 11:02:38'),(125,'为了让代码更加紧凑，编写Python程序时应尽量避免加入空格和空行。\n38、在Python 3.5中运算符+不仅可以实现数值的相加、字符串连接，还可以实现列表、元组的合并和集合的并集运算。','0',1,4,9,'2019-10-30 11:02:38'),(126,'Python集合中的元素不允许重复。','1',1,4,9,'2019-10-30 11:02:38'),(127,'Python集合可以包含相同的元素。','0',1,4,9,'2019-10-30 11:02:38'),(128,'ython字典中的“键”不允许重复。','1',1,4,9,'2019-10-30 11:02:38'),(129,'列表对象的append()方法属于原地操作，用于在列表尾部追加一个元素。','1',1,4,9,'2019-10-30 11:02:38'),(130,'使用列表对象的remove()方法可以删除列表中首次出现的指定元素，如果列中不存在要删除的指定元素则抛出异常。','1',1,4,9,'2019-10-30 11:02:38'),(131,'元组是不可变的，不支持列表对象的inset()、remove()等方法，也不支持del命令删除其中的元素，但可以使用del命令删除整个元组对象。','1',1,4,9,'2019-10-30 11:02:38'),(132,'Python字典和集合属于无序序列。','1',1,4,9,'2019-10-30 11:02:38'),(133,'只能通过切片访问列表中的元素，不能使用切片修改列表中的元素。','0',1,4,9,'2019-10-30 11:02:38'),(134,'Python字典和集合支持双向索引。','0',1,4,9,'2019-10-30 11:02:38'),(135,'定义Python函数时必须指定函数返回值类型。','0',1,4,9,'2019-10-30 11:02:38'),(136,'函数中必须包含return语句。','0',1,4,9,'2019-10-30 11:02:38'),(137,'表达式 ‘a’+1的值为’b’。','0',1,4,9,'2019-10-30 11:02:38'),(138,'Requestdispatcher的forward方法和include方法的区别是forward可以到另外一个web应用的资源，而include只能到同一web的另外资源。','0',1,1,8,'2019-10-30 11:02:40'),(139,'如果一个Sevlet有多个Filter，则优先级最高的Filter先执行。','0',1,1,8,'2019-10-30 11:02:40'),(140,'在HTML页面文件中加入JSP脚本元素、JSP标记等就构成了一个JSP页面。','1',1,1,8,'2019-10-30 11:02:40'),(141,'在“&lt;%!”和“%&gt;”标记之间声明的Java的方法在整个页面内有效。','1',1,1,8,'2019-10-30 11:02:40'),(142,'JSP中Java表达式的值由服务器负责计算，并将计算值按字符串发送给客户端显示。','1',1,1,8,'2019-10-30 11:02:40'),(143,'不可以用一个page指令指定多个属性的取值。','0',1,1,8,'2019-10-30 11:02:40'),(144,'&lt;jsp:forward ... &gt;标记的page属性值是相对的URL地址，只能静态的URL。','0',1,1,8,'2019-10-30 11:02:40'),(145,'JSP页面只能在客户端执行。','0',1,1,8,'2019-10-30 11:02:40'),(146,'respone对象主要用于向客户端发送数据。','1',1,1,8,'2019-10-30 11:02:40'),(147,'Post属于表单的隐式提交信息方法。','1',1,1,8,'2019-10-30 11:02:40'),(148,'表单信息的验证只能放在服务器端执行。','0',1,1,8,'2019-10-30 11:02:40'),(149,'session对象是HttpSession接口类的实例，由客户端负责创建和销毁，所以不同客户的session对象不同。','1',1,1,8,'2019-10-30 11:02:40'),(150,'application对象对所有用户都是共享的，任何对它的操作都会影响到所有的用户。','1',1,1,8,'2019-10-30 11:02:40'),(151,'使用request对象获取信息的时候，可能会出现NullPointerException异常','1',1,1,8,'2019-10-30 11:02:40'),(152,'Cookie由浏览器保存在客户端，通常保存为一个文本文件 。','1',1,1,8,'2019-10-30 11:02:40'),(153,'JavaBean的属性可读写，编写时set方法和get方法必须配对。','0',1,1,8,'2019-10-30 11:02:40'),(154,'在JSP页面中使用Bean首先要使用import指令将Bean引入。','1',1,1,8,'2019-10-30 11:02:40'),(155,'&lt;％@ page ％&gt;指令不一定放在页面内的头部。','1',1,1,8,'2019-10-30 11:02:40'),(156,'数据库服务与Web服务器需要在同一台计算机上。','0',1,1,8,'2019-10-30 11:02:40'),(157,'JDBC中的URL提供了一种标识数据库的方法，使DriverManage类能够识别相应的驱动程序。','1',1,1,8,'2019-10-30 11:02:40'),(158,'Java语言有三种技术平台,分别是JavaSE、JavaME、JavaEE','1',1,8,10,'2019-10-30 11:02:57'),(159,'方法的返回值类型可以定义也可以不定义','0',1,8,10,'2019-10-30 11:02:57'),(160,'Java是一门高级计算机语言','1',1,8,10,'2019-10-30 11:02:57'),(161,'在Java中判断方法重载的条件除了参数外,还可以通过返回值类型判断','0',1,8,10,'2019-10-30 11:02:57'),(162,'Java中有一种特殊的赋值运算叫做三元运算,它和if-else语句类似','1',1,8,10,'2019-10-30 11:02:57'),(163,'方法内部类是指在成员方法中定义的类,它只能在当前方法中被使用。','1',1,8,10,'2019-10-30 11:02:57'),(164,'只有private修饰成员变量才是类的封装体现。','0',1,8,10,'2019-10-30 11:02:57'),(165,'静态变量可以被类和对象调用。','1',1,8,10,'2019-10-30 11:02:57'),(166,'方法重写时,子类抛出的异常类型大于等于父类抛出的异常类型','0',1,8,10,'2019-10-30 11:02:57'),(167,'、在实例化子类对象时,会自动调用父类无参的构造方法','1',1,8,10,'2019-10-30 11:02:57'),(168,'类只支持单继承,不允许多重继承,C类不可以既继承A类又B类','1',1,8,10,'2019-10-30 11:02:57'),(169,'自定义的异常类必须继承自Exception或其子类','1',1,8,10,'2019-10-30 11:02:57'),(170,'静态方法不能使用synchronized关键字来修饰。','0',1,8,10,'2019-10-30 11:02:57'),(171,'使用StringBuffer修改字符串时,并不会产生新的StringBuffer对象。','1',1,8,10,'2019-10-30 11:02:57'),(172,'DateFormat类可以将日期格式化为字符串','1',1,8,10,'2019-10-30 11:02:57'),(173,'SimpleDateFormat类是抽象类','0',1,8,10,'2019-10-30 11:02:57'),(174,'System.out.println(‘a’+0);语句的输出结果是a0','0',1,8,10,'2019-10-30 11:02:57'),(175,'while循环条件不能是boolean类型的常量','0',1,8,10,'2019-10-30 11:02:57'),(176,'if()条件语句和switch()条件语句中的判断条件语句的值都是布尔类型(F)','0',1,8,10,'2019-10-30 11:02:57'),(177,'若int[][]arr=newint[][]{{1},{2,3,4},{5,6}},则arr[1][1]的结果为3','1',1,8,10,'2019-10-30 11:02:57'),(178,'Python代码的注释只有一种方式，那就是使用#符号。','0',1,8,14,'2019-10-30 11:03:30'),(179,'调用函数时，在实参前面加一个型号*表示序列解包','1',1,8,14,'2019-10-30 11:03:30'),(180,'Python支持使用字典的“键”作为下标来访问字典中的值。','1',1,8,14,'2019-10-30 11:03:30'),(181,'列表可以作为字典的“键”。','0',1,8,14,'2019-10-30 11:03:30'),(182,'元组可以作为字典的“键”。','1',1,8,14,'2019-10-30 11:03:30'),(183,'字典的“键”必须是不可变的。','1',1,8,14,'2019-10-30 11:03:30'),(184,'尽管可以使用import语句一次导入任意多个标准库或扩展库，但是仍建议每次只导入一个标准库或扩展库。','1',1,8,14,'2019-10-30 11:03:30'),(185,'为了让代码更加紧凑，编写Python程序时应尽量避免加入空格和空行。\n38、在Python 3.5中运算符+不仅可以实现数值的相加、字符串连接，还可以实现列表、元组的合并和集合的并集运算。','0',1,8,14,'2019-10-30 11:03:30'),(186,'Python集合中的元素不允许重复。','1',1,8,14,'2019-10-30 11:03:30'),(187,'Python集合可以包含相同的元素。','0',1,8,14,'2019-10-30 11:03:30'),(188,'ython字典中的“键”不允许重复。','1',1,8,14,'2019-10-30 11:03:30'),(189,'列表对象的append()方法属于原地操作，用于在列表尾部追加一个元素。','1',1,8,14,'2019-10-30 11:03:30'),(190,'使用列表对象的remove()方法可以删除列表中首次出现的指定元素，如果列中不存在要删除的指定元素则抛出异常。','1',1,8,14,'2019-10-30 11:03:30'),(191,'元组是不可变的，不支持列表对象的inset()、remove()等方法，也不支持del命令删除其中的元素，但可以使用del命令删除整个元组对象。','1',1,8,14,'2019-10-30 11:03:30'),(192,'Python字典和集合属于无序序列。','1',1,8,14,'2019-10-30 11:03:30'),(193,'只能通过切片访问列表中的元素，不能使用切片修改列表中的元素。','0',1,8,14,'2019-10-30 11:03:30'),(194,'Python字典和集合支持双向索引。','0',1,8,14,'2019-10-30 11:03:30'),(195,'定义Python函数时必须指定函数返回值类型。','0',1,8,14,'2019-10-30 11:03:30'),(196,'函数中必须包含return语句。','0',1,8,14,'2019-10-30 11:03:30'),(197,'表达式 ‘a’+1的值为’b’。','0',1,8,14,'2019-10-30 11:03:30'),(198,'1.  window.onload必须等到页面内包括图片的所有元素加载完毕后才能执行','1',1,7,7,'2019-10-30 11:03:35'),(199,'2.  on()方法在被选元素及子元素上添加一个或多个事件处理程序','1',1,7,7,'2019-10-30 11:03:35'),(200,'3.  $(&quot;this&quot;)是使用标签选择器，查找名为this的标签','1',1,7,7,'2019-10-30 11:03:35'),(201,'4.  nextAll() 不能替代$(\'prev~siblindgs\')选择器','0',1,7,7,'2019-10-30 11:03:35'),(202,'5.   在一个网页中一个Id可以用很多次','0',1,7,7,'2019-10-30 11:03:35'),(203,'6.   在jquery中可以用 replaceWith() 和 replaceAll() 替换节点','1',1,7,7,'2019-10-30 11:03:35'),(204,'7.   $(\'prev~div\') 能选择\'所有的的同辈&lt;div&gt;元素','0',1,7,7,'2019-10-30 11:03:35'),(205,'8.   jQuery中addClass()方法 可以来设置和获取 样式','1',1,7,7,'2019-10-30 11:03:35'),(206,'9.   $.getScript()方法可以加载.js文件，需要对javascript文件进行处理 ','0',1,7,7,'2019-10-30 11:03:35'),(207,'10. delegate() 方法为指定的元素（属于被选元素的子元素）添加一个或多个事件处理程序，并规定当这些事件发生时运行的函数','1',1,7,7,'2019-10-30 11:03:35'),(208,'11.  jquery的load()方法中data 参数是必须的','0',1,7,7,'2019-10-30 11:03:35'),(209,'12.  nextAll() 方法返回被选元素的所有跟随的同胞元素','1',1,7,7,'2019-10-30 11:03:35'),(210,'13.  parent() 方法返回被选元素的所有祖先元素，它一路向上直到文档的根元素','0',1,7,7,'2019-10-30 11:03:35'),(211,'14.  toggle() 方法在被选元素上进行 hide() 和 show() 之间的切换。','1',1,7,7,'2019-10-30 11:03:35'),(212,'15.  $(\'div &gt; span\').css(\'color\', \'#FF0000\');的作用是选取div下的所有span元素，将字体颜色设为红色','0',1,7,7,'2019-10-30 11:03:35'),(213,'16.  jQuery是一个javascript库','1',1,7,7,'2019-10-30 11:03:35'),(214,'17.  通过 jQuery，$(&quot;div.intro&quot;) 能够选取的元素是class=&quot;intro&quot; 的首个 div 元素','0',1,7,7,'2019-10-30 11:03:35'),(215,'18. jQuery.ajaxAsync()方法用于执行异步 HTTP 请求','0',1,7,7,'2019-10-30 11:03:35'),(216,'19.    jQuery 是 W3C 标准','0',1,7,7,'2019-10-30 11:03:35'),(217,'20.  jQueryget请求会将参数跟在URL后进行传递，而POST请求则是作为HTTP消息的实体内容发送给Web服务器的，这种传递是对用户不可见的。','1',1,7,7,'2019-10-30 11:03:35'),(218,'Java语言有三种技术平台,分别是JavaSE、JavaME、JavaEE','1',1,7,13,'2019-10-30 11:03:55'),(219,'方法的返回值类型可以定义也可以不定义','0',1,7,13,'2019-10-30 11:03:55'),(220,'Java是一门高级计算机语言','1',1,7,13,'2019-10-30 11:03:55'),(221,'在Java中判断方法重载的条件除了参数外,还可以通过返回值类型判断','0',1,7,13,'2019-10-30 11:03:55'),(222,'Java中有一种特殊的赋值运算叫做三元运算,它和if-else语句类似','1',1,7,13,'2019-10-30 11:03:55'),(223,'方法内部类是指在成员方法中定义的类,它只能在当前方法中被使用。','1',1,7,13,'2019-10-30 11:03:55'),(224,'只有private修饰成员变量才是类的封装体现。','0',1,7,13,'2019-10-30 11:03:55'),(225,'静态变量可以被类和对象调用。','1',1,7,13,'2019-10-30 11:03:55'),(226,'方法重写时,子类抛出的异常类型大于等于父类抛出的异常类型','0',1,7,13,'2019-10-30 11:03:55'),(227,'、在实例化子类对象时,会自动调用父类无参的构造方法','1',1,7,13,'2019-10-30 11:03:55'),(228,'类只支持单继承,不允许多重继承,C类不可以既继承A类又B类','1',1,7,13,'2019-10-30 11:03:55'),(229,'自定义的异常类必须继承自Exception或其子类','1',1,7,13,'2019-10-30 11:03:55'),(230,'静态方法不能使用synchronized关键字来修饰。','0',1,7,13,'2019-10-30 11:03:55'),(231,'使用StringBuffer修改字符串时,并不会产生新的StringBuffer对象。','1',1,7,13,'2019-10-30 11:03:55'),(232,'DateFormat类可以将日期格式化为字符串','1',1,7,13,'2019-10-30 11:03:55'),(233,'SimpleDateFormat类是抽象类','0',1,7,13,'2019-10-30 11:03:55'),(234,'System.out.println(‘a’+0);语句的输出结果是a0','0',1,7,13,'2019-10-30 11:03:55'),(235,'while循环条件不能是boolean类型的常量','0',1,7,13,'2019-10-30 11:03:55'),(236,'if()条件语句和switch()条件语句中的判断条件语句的值都是布尔类型(F)','0',1,7,13,'2019-10-30 11:03:55'),(237,'若int[][]arr=newint[][]{{1},{2,3,4},{5,6}},则arr[1][1]的结果为3','1',1,7,13,'2019-10-30 11:03:55'),(238,'要修改用于列表项的标志类型，可以使用属性 list-style-color','0',1,9,11,'2019-10-30 11:04:02'),(239,'W3C是指万维网联盟。','1',1,9,11,'2019-10-30 11:04:02'),(240,'ID 选择器类与类选择器完全相同','0',1,9,11,'2019-10-30 11:04:02'),(241,'浮动框不在文档的普通流中。','0',1,9,11,'2019-10-30 11:04:02'),(242,'display 属性规定元素应该生成的框的类型。','1',1,9,11,'2019-10-30 11:04:02'),(243,'border-color属性设置边框颜色。','1',1,9,11,'2019-10-30 11:04:02'),(244,'CSS 只允许应用纯色作为背景。','0',1,9,11,'2019-10-30 11:04:02'),(245,'&lt;a&gt; 标签定义超链接，用于从一张页面链接到另一张页面。','1',1,9,11,'2019-10-30 11:04:02'),(246,'HTML中,空格的代码为”&amp;nbsp”.','1',1,9,11,'2019-10-30 11:04:02'),(247,'id 属性规定元素的行内样式','0',1,9,11,'2019-10-30 11:04:02'),(248,'HTML标记符的属性一般不区分大小写','1',1,9,11,'2019-10-30 11:04:02'),(249,'GIF格式的图象最多可以显示256种颜色','1',1,9,11,'2019-10-30 11:04:02'),(250,'在HTML表格中,TD和TH标记符都可以用来包括单元格内容','1',1,9,11,'2019-10-30 11:04:02'),(251,'在HTML表格中,表格的列数等于任意一行中TH与TD的个数','0',1,9,11,'2019-10-30 11:04:02'),(252,'在HTML表格中,表格的列数等于任意一行中TH与TD的colspan属性的和。','0',1,9,11,'2019-10-30 11:04:02'),(253,'在HTML中,与表格一样,表单也能嵌套。','0',1,9,11,'2019-10-30 11:04:02'),(254,'HTML表格内容的垂直对齐方式默认为垂直居中。','1',1,9,11,'2019-10-30 11:04:02'),(255,'网站就是一个链接的页面集合。','1',1,9,11,'2019-10-30 11:04:02'),(256,'所有的HTML标记符都包括开始标记符和结束标记符。','0',1,9,11,'2019-10-30 11:04:02'),(257,'HTML表格在默认情况下有边框。','0',1,9,11,'2019-10-30 11:04:02'),(258,'Java语言有三种技术平台,分别是JavaSE、JavaME、JavaEE','1',1,9,12,'2019-10-30 11:04:11'),(259,'方法的返回值类型可以定义也可以不定义','0',1,9,12,'2019-10-30 11:04:11'),(260,'Java是一门高级计算机语言','1',1,9,12,'2019-10-30 11:04:11'),(261,'在Java中判断方法重载的条件除了参数外,还可以通过返回值类型判断','0',1,9,12,'2019-10-30 11:04:11'),(262,'Java中有一种特殊的赋值运算叫做三元运算,它和if-else语句类似','1',1,9,12,'2019-10-30 11:04:11'),(263,'方法内部类是指在成员方法中定义的类,它只能在当前方法中被使用。','1',1,9,12,'2019-10-30 11:04:11'),(264,'只有private修饰成员变量才是类的封装体现。','0',1,9,12,'2019-10-30 11:04:11'),(265,'静态变量可以被类和对象调用。','1',1,9,12,'2019-10-30 11:04:11'),(266,'方法重写时,子类抛出的异常类型大于等于父类抛出的异常类型','0',1,9,12,'2019-10-30 11:04:11'),(267,'、在实例化子类对象时,会自动调用父类无参的构造方法','1',1,9,12,'2019-10-30 11:04:11'),(268,'类只支持单继承,不允许多重继承,C类不可以既继承A类又B类','1',1,9,12,'2019-10-30 11:04:11'),(269,'自定义的异常类必须继承自Exception或其子类','1',1,9,12,'2019-10-30 11:04:11'),(270,'静态方法不能使用synchronized关键字来修饰。','0',1,9,12,'2019-10-30 11:04:11'),(271,'使用StringBuffer修改字符串时,并不会产生新的StringBuffer对象。','1',1,9,12,'2019-10-30 11:04:11'),(272,'DateFormat类可以将日期格式化为字符串','1',1,9,12,'2019-10-30 11:04:11'),(273,'SimpleDateFormat类是抽象类','0',1,9,12,'2019-10-30 11:04:11'),(274,'System.out.println(‘a’+0);语句的输出结果是a0','0',1,9,12,'2019-10-30 11:04:11'),(275,'while循环条件不能是boolean类型的常量','0',1,9,12,'2019-10-30 11:04:11'),(276,'if()条件语句和switch()条件语句中的判断条件语句的值都是布尔类型(F)','0',1,9,12,'2019-10-30 11:04:11'),(277,'若int[][]arr=newint[][]{{1},{2,3,4},{5,6}},则arr[1][1]的结果为3','1',1,9,12,'2019-10-30 11:04:11'),(278,'1.  window.onload必须等到页面内包括图片的所有元素加载完毕后才能执行','1',1,3,15,'2019-10-30 11:06:06'),(279,'2.  on()方法在被选元素及子元素上添加一个或多个事件处理程序','1',1,3,15,'2019-10-30 11:06:06'),(280,'3.  $(&quot;this&quot;)是使用标签选择器，查找名为this的标签','1',1,3,15,'2019-10-30 11:06:06'),(281,'4.  nextAll() 不能替代$(\'prev~siblindgs\')选择器','0',1,3,15,'2019-10-30 11:06:06'),(282,'5.   在一个网页中一个Id可以用很多次','0',1,3,15,'2019-10-30 11:06:06'),(283,'6.   在jquery中可以用 replaceWith() 和 replaceAll() 替换节点','1',1,3,15,'2019-10-30 11:06:06'),(284,'7.   $(\'prev~div\') 能选择\'所有的的同辈&lt;div&gt;元素','0',1,3,15,'2019-10-30 11:06:06'),(285,'8.   jQuery中addClass()方法 可以来设置和获取 样式','1',1,3,15,'2019-10-30 11:06:06'),(286,'9.   $.getScript()方法可以加载.js文件，需要对javascript文件进行处理 ','0',1,3,15,'2019-10-30 11:06:06'),(287,'10. delegate() 方法为指定的元素（属于被选元素的子元素）添加一个或多个事件处理程序，并规定当这些事件发生时运行的函数','1',1,3,15,'2019-10-30 11:06:06'),(288,'11.  jquery的load()方法中data 参数是必须的','0',1,3,15,'2019-10-30 11:06:06'),(289,'12.  nextAll() 方法返回被选元素的所有跟随的同胞元素','1',1,3,15,'2019-10-30 11:06:06'),(290,'13.  parent() 方法返回被选元素的所有祖先元素，它一路向上直到文档的根元素','0',1,3,15,'2019-10-30 11:06:06'),(291,'14.  toggle() 方法在被选元素上进行 hide() 和 show() 之间的切换。','1',1,3,15,'2019-10-30 11:06:06'),(292,'15.  $(\'div &gt; span\').css(\'color\', \'#FF0000\');的作用是选取div下的所有span元素，将字体颜色设为红色','0',1,3,15,'2019-10-30 11:06:06'),(293,'16.  jQuery是一个javascript库','1',1,3,15,'2019-10-30 11:06:06'),(294,'17.  通过 jQuery，$(&quot;div.intro&quot;) 能够选取的元素是class=&quot;intro&quot; 的首个 div 元素','0',1,3,15,'2019-10-30 11:06:06'),(295,'18. jQuery.ajaxAsync()方法用于执行异步 HTTP 请求','0',1,3,15,'2019-10-30 11:06:06'),(296,'19.    jQuery 是 W3C 标准','0',1,3,15,'2019-10-30 11:06:06'),(297,'20.  jQueryget请求会将参数跟在URL后进行传递，而POST请求则是作为HTTP消息的实体内容发送给Web服务器的，这种传递是对用户不可见的。','1',1,3,15,'2019-10-30 11:06:06');
/*!40000 ALTER TABLE `em_judge` ENABLE KEYS */;

#
# Structure for table "em_major"
#

DROP TABLE IF EXISTS `em_major`;
CREATE TABLE `em_major` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id编号',
  `major_name` varchar(10) NOT NULL COMMENT '专业名称',
  `status` smallint(4) NOT NULL DEFAULT '1' COMMENT '状态:1是,0否',
  `add_time` datetime NOT NULL COMMENT '添加时间',
  `on_off` tinyint(4) NOT NULL DEFAULT '1' COMMENT '开关状态 1开启 0关闭',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='专业表';

#
# Data for table "em_major"
#

/*!40000 ALTER TABLE `em_major` DISABLE KEYS */;
INSERT INTO `em_major` VALUES (1,'软件开发',1,'2019-09-28 16:41:52',1),(2,'ui设计',1,'2019-09-28 20:44:41',1),(3,'平面设计',1,'2019-09-29 08:45:59',1),(4,'电子商务',1,'2019-09-29 08:46:00',1),(7,'大数据',1,'2019-10-24 09:42:13',1),(8,'人工智能',1,'2019-10-24 18:56:09',1),(9,'移动app',1,'2019-10-24 18:59:27',1);
/*!40000 ALTER TABLE `em_major` ENABLE KEYS */;

#
# Structure for table "em_operation"
#

DROP TABLE IF EXISTS `em_operation`;
CREATE TABLE `em_operation` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id编号',
  `operation_name` varchar(1000) NOT NULL COMMENT '题目',
  `status` smallint(4) NOT NULL DEFAULT '1' COMMENT '状态:1是,0否',
  `major_id` int(10) NOT NULL COMMENT '对应专业表的id',
  `subject_id` int(10) NOT NULL COMMENT '对应科目表的id',
  `pathinfo` varchar(255) NOT NULL COMMENT '操作题文件路径',
  `add_time` datetime NOT NULL COMMENT '添加时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=26 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='操作题';

#
# Data for table "em_operation"
#

/*!40000 ALTER TABLE `em_operation` DISABLE KEYS */;
INSERT INTO `em_operation` VALUES (1,'题目：已知公司的员工表EMP(EID, ENAME, BDATE, SEX, CITY)，\n部门表DEPT（DID, DNAME, DCITY），\n工作表WORK（EID,DID,STARTDATE,SALARY）。各个字段说明如下：\nEID——员工编号，最多6个字符。例如A00001（主键）\nENAME——员工姓名，最多10个字符。例如SMITH\nBDATE——出生日期，日期型\nSEX——员工性别，单个字符。F或者M\nCITY——员工居住的城市，最多20个字符。例如：上海\nDID——部门编号，最多3个字符。例如 A01 （主键）\nDNAME——部门名称，最多20个字符。例如：研发部门\nDCITY——部门所在的城市，最多20个字符。例如：上海\nSTARTDATE——员工到部门上班的日期，日期型\nSALARY——员工的工资。整型。\n\n\n1、创建表EMP，DEPT，WORK，并定义表的主键和外键。\n2、向每个表中插入适当的数据。例如：插入三条部门的数据，分别为每个部门插入两条员工数据\n\nselect * from work;\n\n \nEID    DID     STARTDATE     SALARY\n------ --- ----------- ---------------------------------------\nA001   D03     1990/1/1        4040\nA002   D01   2010/1/1        3000\nA003   D02   2003/1/1        3500\nA005   D01   2001/9/1        1900\nA015   D01   2004/9/1        3100\nA014   D03   2000/9/1        5100\n \nselect * from dept;\n \nDID DNAME      DCITY\n--- ---------- --------------------\nD01 研发部     上海\nD02 发行部     上海\nD03 广告部     上海\n \nselect * from emp;\n \nEID    ENAME      BDATE  SEX    CITY\n------ ---------- ----------- --- ----',1,2,3,'public/uploads\\operation\\1\\20201123\\2f9b15d844e442570aab6007bbf5c7ea.json','2019-10-30 11:00:45'),(2,'使用穷举法计算出以下每个汉字对应的数字  \n               好 啊 好\n        +      真 是 好\n------------------------\n        =    真 是 好 啊',1,2,6,'public/uploads\\operation\\2\\20201124\\80505b9c3b1da10925db74db639a1cf1.json','2019-10-30 11:01:11'),(3,'设计一个汉罗塔',1,2,6,'public/uploads\\operation\\3\\20201124\\af5c7043a7b8e7be41f7cf86db6c8333.json','2019-10-30 11:01:11'),(4,'设计一个冒泡排序',1,2,6,'public/uploads\\operation\\4\\20201124\\16b9df1a57280e571cd2054888128df0.txt','2019-10-30 11:01:11'),(5,'写一个函数找出一个整数数组中，第二小的数。',1,3,2,'','2019-10-30 11:01:26'),(6,'请完成下载文件中题目一的效果',1,1,1,'public/uploads\\operation\\6\\20191030\\1129beb11842b669576a9b18241283e8.zip','2019-10-30 11:02:06'),(7,'请完成下载文件中题目二的效果',1,1,1,'public/uploads\\operation\\7\\20191030\\1b86fe6feb04a1432c04c3fe22502775.zip','2019-10-30 11:02:06'),(8,'题目：已知公司的员工表EMP(EID, ENAME, BDATE, SEX, CITY)，\n部门表DEPT（DID, DNAME, DCITY），\n工作表WORK（EID,DID,STARTDATE,SALARY）。各个字段说明如下：\nEID——员工编号，最多6个字符。例如A00001（主键）\nENAME——员工姓名，最多10个字符。例如SMITH\nBDATE——出生日期，日期型\nSEX——员工性别，单个字符。F或者M\nCITY——员工居住的城市，最多20个字符。例如：上海\nDID——部门编号，最多3个字符。例如 A01 （主键）\nDNAME——部门名称，最多20个字符。例如：研发部门\nDCITY——部门所在的城市，最多20个字符。例如：上海\nSTARTDATE——员工到部门上班的日期，日期型\nSALARY——员工的工资。整型。\n\n\n1、创建表EMP，DEPT，WORK，并定义表的主键和外键。\n2、向每个表中插入适当的数据。例如：插入三条部门的数据，分别为每个部门插入两条员工数据\n\nselect * from work;\n\n \nEID    DID     STARTDATE     SALARY\n------ --- ----------- ---------------------------------------\nA001   D03     1990/1/1        4040\nA002   D01   2010/1/1        3000\nA003   D02   2003/1/1        3500\nA005   D01   2001/9/1        1900\nA015   D01   2004/9/1        3100\nA014   D03   2000/9/1        5100\n \nselect * from dept;\n \nDID DNAME      DCITY\n--- ---------- --------------------\nD01 研发部     上海\nD02 发行部     上海\nD03 广告部     上海\n \nselect * from emp;\n \nEID    ENAME      BDATE  SEX    CITY\n------ ---------- ----------- --- ----',1,1,4,'','2019-10-30 11:02:21'),(9,'使用shell写一个99乘法表',1,4,5,'','2019-10-30 11:02:23'),(10,'设计一个函数，统计字符串中英文字母和数字各自出现的次数',1,4,9,'','2019-10-30 11:02:38'),(11,'完成用户登录和用户注册功能（jsp+oracle/mysql完成）\n要求：\n1.界面自己设计（设计越好分数越高，图片自己准备，风格不限）\n2.数据库自行设计\n3.至少完成用户登录和用户注册功能，其他功能可自行添加，可以加分。',1,1,8,'','2019-10-30 11:02:40'),(12,'Cola公司的雇员分为以下若干类： \n• 4.1 ColaEmployee ：这是所有员工总的父类，属性：员工的姓名,员工的生日月份。方法：getSalary(int month) 根据参数月份来确定工资，如果该月员工过生日，则公司会额外奖励100 元。 \n• 4.2 SalariedEmployee ： ColaEmployee 的子类，拿固定工资的员工。属性：月薪 \n• 4.3 HourlyEmployee ：ColaEmployee 的子类，按小时拿工资的员工，每月工作超出160 小时的部分按照1.5 倍工资发放。属性：每小时的工资、每月工作的小时数 \n• 4.4 SalesEmployee ：ColaEmployee 的子类，销售人员，工资由月销售额和提成率决定。属性：月销售额、提成率 \n• 4.5 定义一个类Company，在该类中写一个方法，调用该方法可以打印出某月某个员工的工资数额，写一个测试类TestCompany,在main方法，把若干各种类型的员工放在一个ColaEmployee 数组里，并单元出数组中每个员工当月的工资。',1,8,10,'','2019-10-30 11:02:57'),(13,'编写三个系别的学生类：英语系，计算机系，文学系（要求通过继承学生类） [选做题] \n各系有以下成绩： \n• 英语系： 演讲，期末考试，期中考试； \n• 计算机系：操作能力，英语写作，期中考试，期末考试； \n• 文学系： 演讲，作品，期末考试，期中考试; \n各系总分评测标准： \n• 英语系： 演讲 50% \n• 期末考试 25% \n• 期中考试 25% \n• 计算机系： 操作能力 40% \n• 英语写作 20% \n• 期末考试 20% \n• 期中考试 20% \n• 文学系： 演讲 35% \n• 作品 35% \n• 期末考试 15% \n• 期中考试 15% \n• 6.3定义一个可容纳5个学生的学生类数组，使用随机数给该数组装入各系学生的对象，然后按如下格式输出数组中的信息： \n• 学号:XXXXXXXX 姓名：XXX 性别：X 年龄：XX 综合成绩：XX',1,8,10,'','2019-10-30 11:02:57'),(14,'设计一个单例模式',1,8,10,'','2019-10-30 11:02:57'),(15,'设计一个函数，统计字符串中英文字母和数字各自出现的次数',1,8,14,'','2019-10-30 11:03:30'),(16,'请完成下载文件中题目一的效果',1,7,7,'','2019-10-30 11:03:35'),(17,'请完成下载文件中题目二的效果',1,7,7,'','2019-10-30 11:03:35'),(18,'Cola公司的雇员分为以下若干类： \n• 4.1 ColaEmployee ：这是所有员工总的父类，属性：员工的姓名,员工的生日月份。方法：getSalary(int month) 根据参数月份来确定工资，如果该月员工过生日，则公司会额外奖励100 元。 \n• 4.2 SalariedEmployee ： ColaEmployee 的子类，拿固定工资的员工。属性：月薪 \n• 4.3 HourlyEmployee ：ColaEmployee 的子类，按小时拿工资的员工，每月工作超出160 小时的部分按照1.5 倍工资发放。属性：每小时的工资、每月工作的小时数 \n• 4.4 SalesEmployee ：ColaEmployee 的子类，销售人员，工资由月销售额和提成率决定。属性：月销售额、提成率 \n• 4.5 定义一个类Company，在该类中写一个方法，调用该方法可以打印出某月某个员工的工资数额，写一个测试类TestCompany,在main方法，把若干各种类型的员工放在一个ColaEmployee 数组里，并单元出数组中每个员工当月的工资。',1,7,13,'','2019-10-30 11:03:55'),(19,'编写三个系别的学生类：英语系，计算机系，文学系（要求通过继承学生类） [选做题] \n各系有以下成绩： \n• 英语系： 演讲，期末考试，期中考试； \n• 计算机系：操作能力，英语写作，期中考试，期末考试； \n• 文学系： 演讲，作品，期末考试，期中考试; \n各系总分评测标准： \n• 英语系： 演讲 50% \n• 期末考试 25% \n• 期中考试 25% \n• 计算机系： 操作能力 40% \n• 英语写作 20% \n• 期末考试 20% \n• 期中考试 20% \n• 文学系： 演讲 35% \n• 作品 35% \n• 期末考试 15% \n• 期中考试 15% \n• 6.3定义一个可容纳5个学生的学生类数组，使用随机数给该数组装入各系学生的对象，然后按如下格式输出数组中的信息： \n• 学号:XXXXXXXX 姓名：XXX 性别：X 年龄：XX 综合成绩：XX',1,7,13,'','2019-10-30 11:03:55'),(20,'设计一个单例模式',1,7,13,'','2019-10-30 11:03:55'),(21,'Cola公司的雇员分为以下若干类： \n• 4.1 ColaEmployee ：这是所有员工总的父类，属性：员工的姓名,员工的生日月份。方法：getSalary(int month) 根据参数月份来确定工资，如果该月员工过生日，则公司会额外奖励100 元。 \n• 4.2 SalariedEmployee ： ColaEmployee 的子类，拿固定工资的员工。属性：月薪 \n• 4.3 HourlyEmployee ：ColaEmployee 的子类，按小时拿工资的员工，每月工作超出160 小时的部分按照1.5 倍工资发放。属性：每小时的工资、每月工作的小时数 \n• 4.4 SalesEmployee ：ColaEmployee 的子类，销售人员，工资由月销售额和提成率决定。属性：月销售额、提成率 \n• 4.5 定义一个类Company，在该类中写一个方法，调用该方法可以打印出某月某个员工的工资数额，写一个测试类TestCompany,在main方法，把若干各种类型的员工放在一个ColaEmployee 数组里，并单元出数组中每个员工当月的工资。',1,9,12,'','2019-10-30 11:04:11'),(22,'编写三个系别的学生类：英语系，计算机系，文学系（要求通过继承学生类） [选做题] \n各系有以下成绩： \n• 英语系： 演讲，期末考试，期中考试； \n• 计算机系：操作能力，英语写作，期中考试，期末考试； \n• 文学系： 演讲，作品，期末考试，期中考试; \n各系总分评测标准： \n• 英语系： 演讲 50% \n• 期末考试 25% \n• 期中考试 25% \n• 计算机系： 操作能力 40% \n• 英语写作 20% \n• 期末考试 20% \n• 期中考试 20% \n• 文学系： 演讲 35% \n• 作品 35% \n• 期末考试 15% \n• 期中考试 15% \n• 6.3定义一个可容纳5个学生的学生类数组，使用随机数给该数组装入各系学生的对象，然后按如下格式输出数组中的信息： \n• 学号:XXXXXXXX 姓名：XXX 性别：X 年龄：XX 综合成绩：XX',1,9,12,'','2019-10-30 11:04:11'),(23,'设计一个单例模式',1,9,12,'','2019-10-30 11:04:11'),(24,'请完成下载文件中题目一的效果',1,3,15,'public/uploads\\operation\\24\\20191101\\ed182ac1146b7187151cda9e22474016.rar','2019-10-30 11:06:06'),(25,'请完成下载文件中题目二的效果',1,3,15,'public/uploads\\operation\\25\\20191101\\13529e7f70467981c75b0128f970c223.rar','2019-10-30 11:06:06');
/*!40000 ALTER TABLE `em_operation` ENABLE KEYS */;

#
# Structure for table "em_read_record"
#

DROP TABLE IF EXISTS `em_read_record`;
CREATE TABLE `em_read_record` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `student_id` int(11) DEFAULT NULL COMMENT '学生id',
  `book_id` varchar(255) DEFAULT NULL COMMENT '书架里放的书',
  `memo` int(7) DEFAULT '1' COMMENT '之前看到第几章',
  `bookrack` int(1) DEFAULT '0' COMMENT '是否在书架中',
  `read_time` datetime DEFAULT '0000-00-00 00:00:00' COMMENT '最后一次阅读时间',
  `add_time` datetime DEFAULT '0000-00-00 00:00:00' COMMENT '添加/移出 书架时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=22 DEFAULT CHARSET=utf8 COMMENT='学生书籍阅读记录';

#
# Data for table "em_read_record"
#

/*!40000 ALTER TABLE `em_read_record` DISABLE KEYS */;
INSERT INTO `em_read_record` VALUES (1,2,'1',15,0,'2020-12-14 09:51:16','2020-12-14 08:10:41'),(2,2,'2',2,0,'2020-12-14 08:26:23','0000-00-00 00:00:00'),(3,2,'3',1,0,'2020-12-15 10:07:30','2020-12-15 10:18:06'),(4,2,'4',2,0,'2020-12-14 11:54:36','2020-12-15 10:18:06'),(5,2,'5',2,0,'2020-12-15 10:16:25','0000-00-00 00:00:00'),(6,2,'6',5,0,'2020-12-14 03:17:28','2020-12-15 10:18:06'),(7,2,'7',3,0,'2020-12-15 10:14:33','2020-12-14 08:31:29'),(8,2,'8',2,0,'2020-12-14 03:38:38','0000-00-00 00:00:00'),(9,2,'9',1,0,'2020-12-14 03:43:04','2020-12-14 08:10:12'),(10,2,'10',2,0,'2020-12-15 10:12:53','2020-12-15 10:18:06'),(11,3,'3',2,1,'2020-12-14 03:51:48','2020-12-14 03:51:53'),(12,3,'8',1,1,'0000-00-00 00:00:00','2020-12-14 03:51:59'),(13,3,'4',1,1,'2020-12-14 03:52:10','2020-12-14 03:52:06'),(14,3,'11',1,0,'2020-12-14 03:57:07','0000-00-00 00:00:00'),(15,8,'4',1,1,'2020-12-14 04:05:39','2020-12-14 04:11:05'),(16,8,'8',1,1,'0000-00-00 00:00:00','2020-12-14 04:11:07'),(17,8,'10',1,1,'0000-00-00 00:00:00','2020-12-14 04:11:10'),(18,8,'6',1,1,'0000-00-00 00:00:00','2020-12-14 04:11:12'),(19,8,'3',1,1,'0000-00-00 00:00:00','2020-12-14 04:11:15'),(20,8,'7',1,1,'0000-00-00 00:00:00','2020-12-14 04:11:17'),(21,8,'9',1,1,'0000-00-00 00:00:00','2020-12-14 04:11:20');
/*!40000 ALTER TABLE `em_read_record` ENABLE KEYS */;

#
# Structure for table "em_role"
#

DROP TABLE IF EXISTS `em_role`;
CREATE TABLE `em_role` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `role_name` varchar(30) NOT NULL DEFAULT '' COMMENT '角色名称',
  `content` varchar(100) NOT NULL COMMENT '描述',
  `status` tinyint(4) NOT NULL DEFAULT '1' COMMENT '状态:1是,0否',
  `add_time` datetime NOT NULL COMMENT '添加时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

#
# Data for table "em_role"
#

INSERT INTO `em_role` VALUES (1,'超级管理员','最高权限',0,'2019-10-15 09:35:44'),(4,'学生管理员','描述',1,'2019-10-10 21:46:08'),(6,'题库管理员','描述',1,'2019-10-11 21:59:05'),(8,'考试管理员','啊',1,'2019-10-17 12:08:30'),(9,'教师阅卷管理员','教师和教务处阅卷',1,'2019-10-31 22:41:33');

#
# Structure for table "em_role_rule"
#

DROP TABLE IF EXISTS `em_role_rule`;
CREATE TABLE `em_role_rule` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) NOT NULL DEFAULT '0' COMMENT '角色ID',
  `rule_id` varchar(100) NOT NULL DEFAULT '0' COMMENT '权限ID',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

#
# Data for table "em_role_rule"
#

INSERT INTO `em_role_rule` VALUES (1,6,'10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,69,71,72,73,74,76,77'),(4,4,'1,2,3,4,5,6,7,8,69,71,72,73,74,76,77'),(5,8,'39,40,41,42,43,44,45,46,60,61,62,63,69,71,72,73,74,76,77'),(6,9,'60,61,62,63,64,65,66,67,68,69,71,72,73,74,76,77');

#
# Structure for table "em_rule"
#

DROP TABLE IF EXISTS `em_rule`;
CREATE TABLE `em_rule` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `rule_name` varchar(30) NOT NULL DEFAULT '' COMMENT '权限名称',
  `module_name` varchar(30) NOT NULL DEFAULT '' COMMENT '模型名称',
  `controller_name` varchar(50) NOT NULL DEFAULT '' COMMENT '控制器名称',
  `action_name` varchar(30) NOT NULL DEFAULT '' COMMENT '方法名称',
  `parent_id` int(11) NOT NULL DEFAULT '0' COMMENT '上级权限ID 0表示顶级权限',
  `is_show` tinyint(1) NOT NULL DEFAULT '1' COMMENT '是否导航菜单显示1  显示 0 不显示',
  `add_time` datetime NOT NULL COMMENT '添加时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

#
# Data for table "em_rule"
#

INSERT INTO `em_rule` VALUES (1,'学生管理','admin','students','#',0,1,'2019-10-17 10:58:59'),(2,'学生列表','admin','students','index',1,1,'2019-10-17 11:02:28'),(3,'学生添加','admin','students','add',1,0,'2019-10-17 11:02:48'),(4,'学生编辑','admin','students','edit',1,0,'2019-10-17 11:03:09'),(5,'学生删除','admin','students','del',1,0,'2019-10-17 11:03:18'),(6,'学生列表回收站','admin','students','trash',2,1,'2019-10-17 16:12:29'),(7,'学生列表回收站恢复','admin','students','recover',2,0,'2019-10-17 16:13:06'),(8,'学生列表回收站删除','admin','students','remove',2,0,'2019-10-17 16:13:31'),(9,'题库管理','admin','single,selection,judge,operaction','#',0,1,'2019-10-17 10:34:23'),(10,'单选题列表','admin','single','index',9,1,'2019-10-17 10:42:56'),(11,'单选题添加','admin','single','add',9,0,'2019-10-17 10:43:37'),(12,'单选题编辑','admin','single','edit',9,0,'2019-10-17 10:44:20'),(13,'单选题删除','admin','single','del',9,0,'2019-10-17 10:44:40'),(14,'单选题回收站','admin','single','trash',10,1,'2019-10-17 11:16:54'),(15,'单选题回收站恢复','admin','single','recover',10,0,'2019-10-17 15:10:21'),(16,'单选题回收站删除','admin','single','remove',10,0,'2019-10-17 15:11:08'),(17,'多选题列表','admin','selection','index',9,1,'2019-10-17 10:45:49'),(18,'多选题添加','admin','selection','add',9,0,'2019-10-17 10:46:44'),(19,'多选题编辑','admin','selection','edit',9,0,'2019-10-17 10:47:16'),(20,'多选题删除','admin','selection','del',9,0,'2019-10-17 10:47:33'),(21,'多选题题回收站','admin','selection','trash',17,1,'2019-10-17 11:16:54'),(22,'多选题回收站恢复','admin','selection','recover',17,0,'2019-10-17 15:10:21'),(23,'多选题回收站删除','admin','selection','remove',17,0,'2019-10-17 15:11:08'),(24,'判断题列表','admin','judge','index',9,1,'2019-10-17 10:50:33'),(25,'判断题添加','admin','judge','add',9,0,'2019-10-17 10:52:52'),(26,'判断题编辑','admin','judge','edit',9,0,'2019-10-17 10:53:09'),(27,'判断题删除','admin','judge','del',9,0,'2019-10-17 10:53:24'),(28,'判断题回收站','admin','judge','trash',24,1,'2019-10-17 11:16:54'),(29,'判断题回收站恢复','admin','judge','recover',24,0,'2019-10-17 15:10:21'),(30,'判断题回收站删除','admin','judge','remove',24,0,'2019-10-17 15:11:08'),(31,'操作题列表','admin','operation','index',9,1,'2019-10-17 10:53:59'),(32,'操作题添加','admin','operation','add',9,0,'2019-10-17 10:54:11'),(33,'操作题编辑','admin','operation','edit',9,0,'2019-10-17 10:54:28'),(34,'操作题删除','admin','operation','del',9,0,'2019-10-17 10:54:37'),(35,'操作题题回收站','admin','operation','trash',31,1,'2019-10-17 09:45:28'),(36,'操作题回收站恢复','admin','operation','recover',31,0,'2019-10-17 10:06:14'),(37,'操作题回收站删除','admin','operation','remove',31,0,'2019-10-10 22:38:11'),(38,'考试管理','admin','major,subject,scroe','#',0,1,'2019-10-10 22:38:11'),(39,'专业列表','admin','major','index',38,1,'2019-10-15 10:05:55'),(40,'专业添加','admin','major','add',38,0,'2019-10-10 22:51:37'),(41,'专业编辑','admin','major','edit',38,0,'2019-10-10 22:52:11'),(42,'专业删除','admin','major','del',38,0,'2019-10-11 08:41:45'),(43,'科目列表','admin','subject','index',38,1,'2019-10-17 09:21:46'),(44,'科目添加','admin','subject','add',38,0,'2019-10-17 09:26:20'),(45,'科目编辑','admin','subject','edit',38,0,'2019-10-17 09:26:59'),(46,'科目删除','admin','subject','del',38,0,'2019-10-17 09:26:59'),(47,'权限管理','admin','admin,role,rule','#',0,1,'2019-10-17 09:42:42'),(48,'管理员列表','admin','admin','index',47,1,'2019-10-17 09:45:28'),(49,'管理员添加','admin','admin','add',47,0,'2019-10-17 09:46:28'),(50,'管理员编辑','admin','admin','edit',47,0,'2019-10-17 09:50:52'),(51,'管理员删除','admin','admin','del',47,0,'2019-10-17 09:52:07'),(52,'角色列表','admin','role','index',47,1,'2019-10-17 09:55:04'),(53,'角色添加','admin','role','add',47,0,'2019-10-17 10:01:22'),(54,'角色编辑','admin','role','edit',47,0,'2019-10-17 10:04:43'),(55,'角色删除','admin','role','del',47,0,'2019-10-17 10:04:57'),(56,'权限列表','admin','rule','index',47,1,'2019-10-17 10:06:14'),(57,'权限添加','admin','rule','add',47,0,'2019-10-17 10:06:33'),(58,'权限编辑','admin','rule','edit',47,0,'2019-10-17 10:06:47'),(59,'权限删除','admin','rule','del',47,0,'2019-10-17 10:07:14'),(60,'教师阅卷','admin','scroe','teacherIndex',38,1,'2019-10-23 14:40:31'),(61,'教师阅卷回收站','admin','scroe','trash',60,1,'2019-10-23 14:40:34'),(62,'教师阅卷回收站恢复','admin','scroe','recover',60,0,'2019-10-23 14:45:31'),(63,'教师阅卷回收站删除','admin','scroe','remove',60,0,'2019-10-23 14:45:33'),(64,'教务处阅卷','admin','scroe','officeIndex',38,1,'2019-10-25 13:49:54'),(65,'教师阅卷删除','admin','scroe','del',38,0,'2019-10-26 17:54:32'),(66,'教师阅卷功能','admin','scroe','teacherRead',38,0,'2019-10-26 17:57:11'),(67,'教务处阅卷功能','admin','scroe','officeRead',38,0,'2019-10-26 17:57:34'),(68,'教务处阅卷删除','admin','scroe','officedel',38,0,'2019-10-31 15:15:48'),(69,'图书管理','admin','book','#',0,1,'0000-00-00 00:00:00'),(71,'书籍添加','admin','book','add',69,0,'0000-00-00 00:00:00'),(72,'书籍编辑','admin','book','edit',69,0,'2020-11-24 10:24:02'),(73,'书籍删除','admin','book','del',69,0,'2020-11-24 10:36:53'),(74,'书籍列表','admin','book','index',69,1,'2020-11-24 10:38:45'),(75,'成绩统计','admin','count','index',38,1,'2020-12-07 14:40:42'),(76,'添加章节','admin','book','addsection',69,0,'2020-12-14 14:49:14'),(77,'修改章节','admin','book','editsection',69,0,'2020-12-14 14:49:41');

#
# Structure for table "em_selection"
#

DROP TABLE IF EXISTS `em_selection`;
CREATE TABLE `em_selection` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id编号',
  `selection_name` varchar(255) NOT NULL COMMENT '题目',
  `A` varchar(255) NOT NULL COMMENT 'A选项',
  `B` varchar(255) NOT NULL COMMENT 'B选项',
  `C` varchar(255) NOT NULL COMMENT 'C选项',
  `D` varchar(255) NOT NULL COMMENT 'D选项',
  `right_key` varchar(255) NOT NULL COMMENT '正确答案',
  `status` tinyint(4) NOT NULL DEFAULT '1' COMMENT '状态:1是,0否',
  `major_id` int(10) NOT NULL COMMENT '专业id',
  `subject_id` int(10) NOT NULL COMMENT '科目id',
  `add_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '添加时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=316 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='多选题';

#
# Data for table "em_selection"
#

/*!40000 ALTER TABLE `em_selection` DISABLE KEYS */;
INSERT INTO `em_selection` VALUES (1,'在Oracle中，下面关于函数描述正确的是','SYSDATE函数返回Oracle服务器的日期和时间','ROUND数字函数按四舍五入原则返回指定十进制数最靠近的整数','ADD_MONTHS日期函数返回指定两个月份天数的和','SUBSTR函数从字符串指定的位置返回指定长度的子串','AD',1,2,3,'2019-10-30 11:00:45'),(2,'BEGIN\nINSERT INTO employee(salary,last_name,first_name)\nVALUES(35000,’Wang’,\'Fred’);\nSAVEPOINT save_a;\nINSERT INTO employee(salary,last_name,first_name)\nVALUES(40000,’Woo’,\'David’);\nSAVEPOINT save_b;\nDELETE FROM employee WHERE dept_no=10;\nSAVEPOINT save_c','DELETE FROM employee WHERE dept_no=10;','INSERT INTO employee(salary,last_name,first_name)VALUES(32000,’Chung’,\'Mike’);','INSERT INTO employee(salary,last_name,first_name)VALUES(35000,’Wang’,\'Fred’);','INSERT INTO employee(salary,last_name,first_name)VALUES(40000,’Woo’,\'David’);','CD',1,2,3,'2019-10-30 11:00:45'),(3,'Oracle的数据库由（）类型的文件组成','日志文件','控制文件','数据文件','配置文件','ABC',1,2,3,'2019-10-30 11:00:45'),(4,'在哪种情况下，会用到外连接查询？','要连接的表具有NOT NULL列','要连接的表只有匹配的数据','要连接的列具有NULL值','要连接的表具有匹配和不匹配的数据','CD',1,2,3,'2019-10-30 11:00:45'),(5,'关于where和having子句说法正确的有？','WHERE子句可用于限制行和组','WHERE子句只能用于限制行','HAVING子句可用于限制行和组','HAVING子句只能用于限制组','BD',1,2,3,'2019-10-30 11:00:45'),(6,'关于子查询下列叙述正确的有？','单行子查询只能检索一个列和一行','单行子查询只能检索一行，但能检索许多列','多行子查询可以检索多行、多列','单行子查询可以使用IN运算符','BCD',1,2,3,'2019-10-30 11:00:45'),(7,'我们需要在employee数据表中查出工号emp_no为29346,24323的记录，可以使用的SQL语句有？','SELECT * FROM employee WHERE emp_no=29346 OR emp_no=24323 ；','SELECT * FROM employee WHERE emp_no IN(29346,24323)','SELECT * FROM employee WHERE emp_no=29346 AND emp_no=24323；','SELECT * FROM employee WHERE emp_no  NOT IN(29346,24323)=\'dl\')；','AB',1,2,3,'2019-10-30 11:00:45'),(8,'下列查询姓张的学生的语句不正确的是？','select * from 表名 where 姓名 = \'%张%\'','select * from 表名 where 姓名 like \'张\'','select * from 表名 where 姓名 like \'张%\'','select * from 表名 where 姓名 = \'张\'','ABD',1,2,3,'2019-10-30 11:00:45'),(9,'数据库设计里，视图（View)可以使得我们为一个或多个数据表定义一个特殊的表现形式，视图在行为上与数据表没啥特别区别，可以使用基本的select,insert,update等命令修改数据，但对于update操作，也有一些限制，下面那些是受限的原因','初始View定义的Select语句里如果包含了GROUP BY,DISTINCT,LIMIT或HAVING等命令时','如果视图里数据来自多张字表时','如果视图里缺少主键索引，唯一索引，外键约束条件锁涉及的全部数据列时','当Creat View之后又使用Replace View对已存在视图做了更名操作后','AB',1,2,3,'2019-10-30 11:00:45'),(10,'在Oracle中，下面关于函数描述正确的是','SYSDATE函数返回Oracle服务器的日期和时间','ROUND数字函数返回指定十进制数最靠近的整数。','ADD_MONTHS日期函数返回指定两个月份天数的和','SUBSTR函数从字符串指定的位置返回指定长度的子串。','AD',1,2,3,'2019-10-30 11:00:45'),(11,'某查询语句运行后返回的结果集为： 1班 72 2班 75则可能的查询语句是：(  )','SELECT class, AVG(score) FROM test WHERE class&lt;3','SELECT class, AVG(score) FROM test WHERE class&lt;3 GROUP BY class','SELECT class, AVG(score) FROM test GROUP BY class HAVING class&lt;3','SELECT DISTINCT(class), AVG(score) FROM test WHERE class&lt;3','BC',1,2,3,'2019-10-30 11:00:45'),(12,'观察STUDENT表的表结构：\nSTD_ID     NUMBER(4)\nCOURSE_ID     VARCHAR2(10)\nSTART_DATE     DATE\nEND_DATE     DATE\n下面聚合函数的使用正确的有？()','SUM(start_date)','AVG(start_date)','COUNT(start_date)','MIN(start_date)','CD',1,2,3,'2019-10-30 11:00:45'),(13,'哪些字段适合建立索引?( )','在select子句中的字段','外键字段','主键字段','在where子句中的字段','BCD',1,2,3,'2019-10-30 11:00:45'),(14,'下列那组部件是Scratch中提供的','动作部件','控制部件','外观部件 ','数学部件','ABC',1,2,6,'2019-10-30 11:01:11'),(15,'想让小猫一直在舞台上移动，不应采用下列哪种程序结构?','重复执行100次','重复执行','如果……那么','如果……那么……否则','ACD',1,2,6,'2019-10-30 11:01:11'),(16,'想实现背景切换时，不可采用的下列哪一条指令？','将背景切换为……','清除所有图形特效','当背景切换到……','当收到消息1','BCD',1,2,6,'2019-10-30 11:01:11'),(17,'控制画笔移动时，下列哪一条语句不是向左移动？','面向90°方向','面向-90°方向','面向0°方向','面向180°方向','ACD',1,2,6,'2019-10-30 11:01:11'),(18,'在程序框图设计中下列哪种语句是基本语句？','顺序语句','条件语句','循环语句','输入输出语句','ABD',1,2,6,'2019-10-30 11:01:11'),(19,'在Scratch的声音设计中，“弹奏音符60”对应中央C(哆)，下列哪一条语句不是发出中音G(索)？','弹奏音符62','弹奏音符64','弹奏音符65','弹奏音符67','ABC',1,2,6,'2019-10-30 11:01:11'),(20,'Scratch中的背景设计中，有下列哪种类别的命令？','运动','外观','声音','画笔','BCD',1,2,6,'2019-10-30 11:01:11'),(21,'要使Scratch中的角色在舞台上绘图，不应选用下列哪一条命令？','清空并抬笔','落笔并移动10步','将画笔颜色设定为0','将画笔粗细增加1','ACD',1,2,6,'2019-10-30 11:01:11'),(22,'下列不可以用于接收键盘输入的指令是？','询问……并等待','说……2秒','连接……和……','在……之前一致等待','BCD',1,2,6,'2019-10-30 11:01:11'),(23,'想使用绘制好的图画作为Scratch的背景，不应选择下列哪一项操作？','从背景库中选择背景','在造型区绘制新背景','从本地文件中上传背景','拍摄照片当作背景','ABD',1,2,6,'2019-10-30 11:01:11'),(24,'要使Scratch中的角色切换造型，可选用下列哪一条指令？','将角色的大小增加10',' 当作为克隆体启动时','碰到边缘就反弹','下一个造型','ABC',1,2,6,'2019-10-30 11:01:11'),(25,'Scratch中角色的旋转模式，错误的选项是？','1','2','3','4','ABD',1,2,6,'2019-10-30 11:01:11'),(26,'舞台是创作、演示程序的场地。舞台宽( )个单位,高360个单位。舞台的中间位置为坐','480','240','500','400','BCD',1,2,6,'2019-10-30 11:01:11'),(27,'Scratch以角色为编程对象,以部件——积件式编程语言为编程工具,共8种部件,其中不属于，控制人物运动的是（）','动作',' 控制 ','外观 ','数字和逻辑运算','BCD',1,2,6,'2019-10-30 11:01:11'),(28,'开始运行Scratch程序，不应采用下列哪一条指令？','当红旗被点击时','当绿旗被点击时','当黄旗被点击时','当蓝旗被点击时','ACD',1,2,6,'2019-10-30 11:01:11'),(29,'下列菜单不可以设置Scratch使用界面的语言？','文件菜单','编辑菜单','地球仪菜单','问号菜单','ACD',1,2,6,'2019-10-30 11:01:11'),(30,'Scratch的文件在保存时，一般不建议的扩展名是？','TXT','EXE','HTML','SB2','ABD',1,2,6,'2019-10-30 11:01:11'),(31,'下列哪一种方式是Scratch角色造型的设计方式？','对着麦克风录入声音 ','从角色库中选取角色','在造型区绘制新角色','从本地文件中上传角色','BCD',1,2,6,'2019-10-30 11:01:11'),(32,'在Scratch中,舞台是创作和演示程序的场地，其坐标原点不位于舞台的是（）','左上角 ','左下角',' 右下角','中心','ABC',1,2,6,'2019-10-30 11:01:11'),(33,'在Scratch中,( )部件不是用来为角色设置不同的外观效果','动作 ','外观',' 控制',' 画笔','ABC',1,2,6,'2019-10-30 11:01:11'),(34,'不是C语言程序的基本单位是','程序行','函数','语句','字符','ACD',1,3,2,'2019-10-30 11:01:26'),(35,'以下说法中不正确的是','C语言程序中的main()函数必须放在程序的开始部分','C语言程序总是从第一个函数开始执行','在C语言程序中,要调用的函数必须在main()函数中定义','C语言程序总是从main()函数开始执行','ABC',1,3,2,'2019-10-30 11:01:26'),(36,'以下说法中不正确的是','C++语言程序总是从第一个函数开始执行','C++语言程序总是从main()函数开始执行','C++语言程序中的main()函数必须放在程序的开始部分','在C++语言程序中,要调用的函数必须在main()函数中定义数据类型','ACD',1,3,2,'2019-10-30 11:01:26'),(37,'在C语言提供的不合法关键字是','Case','swicth','cher','default','ABC',1,3,2,'2019-10-30 11:01:26'),(38,'请选出不可用作C语言用户标识符的选项','a3_b3 _123 IF','For -abc Case','void define WORD','2a DO sizeof','BCD',1,3,2,'2019-10-30 11:01:26'),(39,'C语言提供的非法的数据类型关键字是','short','Char','Double','integer','BCD',1,3,2,'2019-10-30 11:01:26'),(40,'以下为不合法的十六进制数是','0x2A','0x11Au','0X0','3A','BCD',1,3,2,'2019-10-30 11:01:26'),(41,'在C语言中,不合法的长整型常数是','2.1869e10','0L','4962710','0.054838743','ACD',1,3,2,'2019-10-30 11:01:26'),(42,'在C++语言中,不合法的字符常量是','\'\\x43\'','\'ab\'','\'\\084\'','&quot;\\0&quot;','BCD',1,3,2,'2019-10-30 11:01:26'),(43,'下列正确的转义字符是','\' \\ \'','\'\\0\'','\'\\\\\'','\'074\'','BCD',1,3,2,'2019-10-30 11:01:26'),(44,'下列运算符中,优先级相同的是','~','%','/','&gt;','BC',1,3,2,'2019-10-30 11:01:26'),(45,'若变量已正确定义并赋值,下面不符合C语言语法的表达式是','a:=b+1','a=b=c+2','int 18.5%3','a=a+7=c+b','ACD',1,3,2,'2019-10-30 11:01:26'),(46,'下面的表达式中值为0的是','3/5','5&gt;&gt;3','! 3','5%3','ABC',1,3,2,'2019-10-30 11:01:26'),(47,'已知x,y,z是整型变量,则下列选项中正确的是','if (x&amp;&amp;y) cout&lt;&lt;&quot;x&amp;&amp;y&quot;;','if (x=y) cout&lt;&lt;&quot;x=y&quot;;','if (x#y) cout&lt;&lt;&quot;x#y&quot;;','if(x&lt;&gt;y) cout&lt;&lt;&quot;x&lt;&gt;y&quot;;','ABD',1,3,2,'2019-10-30 11:01:26'),(48,'在下列选项中,正确的赋值语句是','k=i==j;','a=b+c=1;','n1=(n2=(n3=0));','++t;','ACD',1,3,2,'2019-10-30 11:01:26'),(49,'下列语句中不符合C语言语法的赋值语句是','a=7+b+c=a+7;','a=7+b++=a+7;','a=7+b,c=a+7;','a=7+b,b++,a+7','ABD',1,3,2,'2019-10-30 11:01:26'),(50,'请选出不合法的C语言赋值语句','i++;','a=58,b=58','k=int(a+b);','a=b=58','BD',1,3,2,'2019-10-30 11:01:26'),(51,'请选出不合法的C++语言赋值语句','i++;','a=a mod b','a=/b;','k=int(a+b);','BC',1,3,2,'2019-10-30 11:01:26'),(52,'以下程序段执行后,a的值为1的是','int a=0,b=1,c; b=c;b=a;c=a;','int a=0,b=1; a=a+b;b=a-b;a=a-b;','int a=0,b=1,c; c=a;a=b;b=c;','int a=0,b=1,c; c=a;b=a;b=c;','BC',1,3,2,'2019-10-30 11:01:26'),(53,'C++语言中,下面的描述不正确的是','do-while语句构成的循环,当while语句中的表达式值为非零时结束循环','do-while语句构成的循环必须用break语句才能退出','不能使用do-while语句构成的循环','do-while语句构成的循环,当while语句中的表达式值为零时结束循环数组','ABC',1,3,2,'2019-10-30 11:01:26'),(54,'以下不能对数组a进行正确初始化的语句是','int a[]={};','int a[3]={1, 2};','int a[3]={0,1,2,3};','int a[]={1};','AC',1,3,2,'2019-10-30 11:01:26'),(55,'不合法的数组定义是','char a[]={0,1,2,3,4,5};','int a[]=&quot;string&quot;;','int a[5]={0,1,2,3,4,5};','vhst s=&quot;string&quot;;','BCD',1,3,2,'2019-10-30 11:01:26'),(56,'下列关于数组初始化的说法正确的是','若对数组a定义:&quot;static int x[10];&quot;,则数组元素值均为0','&quot;int x[10]={1,2,3,4,5,6,7,8,9};&quot;表示x[9]元素值为9','对于&quot;int x[10];&quot;它的元素初值是不确定的','&quot;int x[10]={1,2,3,4,5};&quot;是不合法的,因为数组长度为10,而初始值仅有5个','AC',1,3,2,'2019-10-30 11:01:26'),(57,'能把字符串:&quot;Hello!&quot;赋给数组b的语句是','char b[10];strcpy(b,&quot;Hello!&quot;);','char b[10]={\'H\',\'e\',\'l\',\'l\',\'o\',\'!\'};','char b[10]=&quot;Hello!&quot;;','char b[10];b=&quot;Hello!&quot;;','ABC',1,3,2,'2019-10-30 11:01:26'),(58,'若有以下的定义:&quot;int x[2][3];&quot;,能正确表示x数组元素地址的表达式是','&amp;x[2][3]','x[0]','x[2]','x[1]','BD',1,3,2,'2019-10-30 11:01:26'),(59,'以下定义中,不正确的是','int x[3,4];','int x[1+2][3];','int x(3,4)','int x[ ][4];','ACD',1,3,2,'2019-10-30 11:01:26'),(60,'若有说明&quot;int x=3, y[3][3];&quot;,则对y数组元素的非法引用是','y[0][x]','y[x][2]','y[2][1+1]','y[1][3-x]','AB',1,3,2,'2019-10-30 11:01:26'),(61,'若x是整型变量,pb是基类型为整型的指针变量,则不正确的赋值表达式是','*pb=&amp;x;','pb=&amp;x','pb=x;','*pb=*x','ACD',1,3,2,'2019-10-30 11:01:26'),(62,'下面各语句行中,不能正确进行赋字符串操作的语句行是','char *s; scanf(&quot;%s&quot;,s);','char st[4][5]={&quot;ABCDE&quot;};','char s[5]={\'A\',\'B\',\'C\',\'D\',\'E\'};','char *s; s=&quot;ABCDE&quot;;','BC',1,3,2,'2019-10-30 11:01:26'),(63,'在css中，下面属于box模型属性的有','font','margin','padding','border','BCD',1,1,1,'2019-10-30 11:02:06'),(64,'下列网页设计的说法中正确的是','冷暖色调在均匀使用时不宜靠近','纯度适宜的两种颜色事宜放在一起','整个页面中最好有一个色调','抽象线条的构图很容易造成重心不稳','ACD',1,1,1,'2019-10-30 11:02:06'),(65,'关于IFrame表述正确的有','通过IFrame，网页可以嵌入其他网页内容，并可以动态更改','在相同域名下，内嵌的IFrame可以获取外层网页的对象','在相同域名下，外层网页脚本可以获取IFrame网页内的对象','可以通过脚本调整IFrame的大小','ABCD',1,1,1,'2019-10-30 11:02:06'),(66,'关于HTML5说法错误的是','HTML5只是对HTML4的一个简单升级','所有浏览器都支持HTML5','HTML5新增了离线缓存机制','HTML5书写格式要求必须按照书写规范','ABD',1,1,1,'2019-10-30 11:02:06'),(67,'下列哪些是设置有关边框的属性','border-color','border-back','border-style','border-width','ACD',1,1,1,'2019-10-30 11:02:06'),(68,'我们想要将页面中的文本采用项目符号的形式予以显示，\n采用哪些标记组合可以达到我们的要求？','&lt;P&gt;','&lt;UL&gt;','&lt;BR&gt;','&lt;LI&gt;','BD',1,1,1,'2019-10-30 11:02:06'),(69,'下面选项中，( )可以设置网页中某个标签的右外边距为10像素。','Margin:0 10px;','Margin:10px 0 0 0;','Margin:0 10 0 0px;','Padding-right:10px;','AC',1,1,1,'2019-10-30 11:02:06'),(70,'在制作HTML页面时，页面的布局技术主要分为','框架布局','表格布局','DIV层布局','CSS3 布局','ABC',1,1,1,'2019-10-30 11:02:06'),(71,'在CSS语言下列哪些选项是背景图像的属性（）','背景重复','背景附件','纵向排列','背景位置','ABCD',1,1,1,'2019-10-30 11:02:06'),(72,'CSS中的选择器包括（）','超文本标记选择器','类选择器','标签选择器','ID选择器','BCD',1,1,1,'2019-10-30 11:02:06'),(73,'CSS文本属性中，文本对齐属性的取值有（）','auto','justify','center','right','BCD',1,1,1,'2019-10-30 11:02:06'),(74,'CSS中的BOX的padding属性包括的属性有（）','上填充','地填充','填充','左填充','ABD',1,1,1,'2019-10-30 11:02:06'),(75,'CSS中，盒模型的属性包括（）','font','margin','padding','visible','BC',1,1,1,'2019-10-30 11:02:06'),(76,'下面关于CSS的说法正确的有（）','CSS可以控制网页背景图片','margin属性的属性值可以是百分比','整个BODY可以作为一个BOX','对于中文可以使用word-spacing','ABC',1,1,1,'2019-10-30 11:02:06'),(77,'CSS中的选择器包括( )','超文本标记选择器','类选择器','标签选择器','ID选择器','BCD',1,1,1,'2019-10-30 11:02:06'),(78,'关于CSS基本语法说法正确的是（）','属性必须要包含{}号之中','属性和属性值之间用等号连接','在有多个属性时，用“：”进行区分','如果一个属性有几个值，则每个属性值之间用分号分隔开','AC',1,1,1,'2019-10-30 11:02:06'),(79,'关于样式表的优先级说法正确的是（）','直接定义在标记上的CSS样式级别最高','内部样式表次之','外部样式表级别最低','当样式中属性重复时，先设的属性起作用','ABC',1,1,1,'2019-10-30 11:02:06'),(80,'关于内容，结构和表现说法正确的是（）','CSS可以控制网页背景颜色','position可以实现盒子模型精确定位','字体大小的单位可以使CM','一个BOX只能通过float进行定位','ABC',1,1,1,'2019-10-30 11:02:06'),(81,'以下属于超级链接的是？','文本链接','锚链接','图像链接','卯链接','ABC',1,1,1,'2019-10-30 11:02:06'),(82,'以下有关按钮说法中，正确的是：','可以作为图像作为提交按钮','可以用图像作为重置按钮','可以控制提交按钮的显示文字','可以控制重置按钮的显示文字','ACD',1,1,1,'2019-10-30 11:02:06'),(83,'创建选项菜单不应使用以下哪些标记符？','select和option','input和label','input','input和option','BCD',1,1,1,'2019-10-30 11:02:06'),(84,'下列关于CSS的说法正确的一项是','CSS可以控制网页背景图片','margin属性的属性值可以是百分比','整个BODY可以作为一个BOX','对于中文可以使用word-spacing属性对字间距进行调整','ABC',1,1,1,'2019-10-30 11:02:06'),(85,'以下说法正确的是？','网页的本质就是HTML源代码','网页就是主页','使用“记事本”编辑网页时，应将保存为.htm或者.html后缀','本地网站通常就是一个完整的文件夹','ACD',1,1,1,'2019-10-30 11:02:06'),(86,'以下说法错误的是？','p标记符和br标记符作用是一样的','多个p标记符可以产生多个空行','多个br标记符可以产生多个空行','p标记符的结束标记符通常不可以省略','ABD',1,1,1,'2019-10-30 11:02:06'),(87,'下面关于CSS表述正确的是()','CSS是一种制作网页的新技术，现在已经为大多数的浏览器所支持，成为网页设计必不可少的工具之一。','层叠样式表是HTML的辅助工具，缺点是设计者设计的网页缺少动感，网页内容的排版布局上也有很多困难','使用CSS能够简化网页的格式代码，加快下载显示的速度，也减少了需要上传的代码数量，大大减少了重复劳动的工作量。','CSS是Cascading Stylesheets的缩写，中文意思是层叠样式表','ACD',1,1,1,'2019-10-30 11:02:06'),(88,'以下有关列表的说法中,正确的是','在创建列表时,LI 标记符的结束标记符不可省略。','指定嵌套列表时,也可以具体指定项目符号或编号样式。','无序列表应使用 UL 和 LI 标记符进行创建。','有序列表和无序列表可以互相嵌套。','BCD',1,1,1,'2019-10-30 11:02:06'),(89,'以下标记符中,没有对应的结束标记的是','body','br','html','input','BD',1,1,1,'2019-10-30 11:02:06'),(90,'关于表格的描述不正确的一项是。','在单元格内不能继续插入整个表格','可以同时选定不相邻的单元格','粘贴表格时,可以粘贴表格的内容','在网页中,水平方向可以并排多个独立的表格','CD',1,1,1,'2019-10-30 11:02:06'),(91,'下面是HTML表格标记的是','&lt;table&gt;','&lt;tr&gt;','&lt;td&gt;','&lt;from&gt;','ABC',1,1,1,'2019-10-30 11:02:06'),(92,'在Oracle中，下面关于函数描述正确的是','SYSDATE函数返回Oracle服务器的日期和时间','ROUND数字函数按四舍五入原则返回指定十进制数最靠近的整数','ADD_MONTHS日期函数返回指定两个月份天数的和','SUBSTR函数从字符串指定的位置返回指定长度的子串','AD',1,1,4,'2019-10-30 11:02:21'),(93,'BEGIN\nINSERT INTO employee(salary,last_name,first_name)\nVALUES(35000,’Wang’,\'Fred’);\nSAVEPOINT save_a;\nINSERT INTO employee(salary,last_name,first_name)\nVALUES(40000,’Woo’,\'David’);\nSAVEPOINT save_b;\nDELETE FROM employee WHERE dept_no=10;\nSAVEPOINT save_c','DELETE FROM employee WHERE dept_no=10;','INSERT INTO employee(salary,last_name,first_name)VALUES(32000,’Chung’,\'Mike’);','INSERT INTO employee(salary,last_name,first_name)VALUES(35000,’Wang’,\'Fred’);','INSERT INTO employee(salary,last_name,first_name)VALUES(40000,’Woo’,\'David’);','CD',1,1,4,'2019-10-30 11:02:21'),(94,'Oracle的数据库由（）类型的文件组成','日志文件','控制文件','数据文件','配置文件','ABC',1,1,4,'2019-10-30 11:02:21'),(95,'在哪种情况下，会用到外连接查询？','要连接的表具有NOT NULL列','要连接的表只有匹配的数据','要连接的列具有NULL值','要连接的表具有匹配和不匹配的数据','CD',1,1,4,'2019-10-30 11:02:21'),(96,'关于where和having子句说法正确的有？','WHERE子句可用于限制行和组','WHERE子句只能用于限制行','HAVING子句可用于限制行和组','HAVING子句只能用于限制组','BD',1,1,4,'2019-10-30 11:02:21'),(97,'关于子查询下列叙述正确的有？','单行子查询只能检索一个列和一行','单行子查询只能检索一行，但能检索许多列','多行子查询可以检索多行、多列','单行子查询可以使用IN运算符','BCD',1,1,4,'2019-10-30 11:02:21'),(98,'我们需要在employee数据表中查出工号emp_no为29346,24323的记录，可以使用的SQL语句有？','SELECT * FROM employee WHERE emp_no=29346 OR emp_no=24323 ；','SELECT * FROM employee WHERE emp_no IN(29346,24323)','SELECT * FROM employee WHERE emp_no=29346 AND emp_no=24323；','SELECT * FROM employee WHERE emp_no  NOT IN(29346,24323)=\'dl\')；','AB',1,1,4,'2019-10-30 11:02:21'),(99,'下列查询姓张的学生的语句不正确的是？','select * from 表名 where 姓名 = \'%张%\'','select * from 表名 where 姓名 like \'张\'','select * from 表名 where 姓名 like \'张%\'','select * from 表名 where 姓名 = \'张\'','ABD',1,1,4,'2019-10-30 11:02:21'),(100,'数据库设计里，视图（View)可以使得我们为一个或多个数据表定义一个特殊的表现形式，视图在行为上与数据表没啥特别区别，可以使用基本的select,insert,update等命令修改数据，但对于update操作，也有一些限制，下面那些是受限的原因','初始View定义的Select语句里如果包含了GROUP BY,DISTINCT,LIMIT或HAVING等命令时','如果视图里数据来自多张字表时','如果视图里缺少主键索引，唯一索引，外键约束条件锁涉及的全部数据列时','当Creat View之后又使用Replace View对已存在视图做了更名操作后','AB',1,1,4,'2019-10-30 11:02:21'),(101,'在Oracle中，下面关于函数描述正确的是','SYSDATE函数返回Oracle服务器的日期和时间','ROUND数字函数返回指定十进制数最靠近的整数。','ADD_MONTHS日期函数返回指定两个月份天数的和','SUBSTR函数从字符串指定的位置返回指定长度的子串。','AD',1,1,4,'2019-10-30 11:02:21'),(102,'某查询语句运行后返回的结果集为： 1班 72 2班 75则可能的查询语句是：(  )','SELECT class, AVG(score) FROM test WHERE class&lt;3','SELECT class, AVG(score) FROM test WHERE class&lt;3 GROUP BY class','SELECT class, AVG(score) FROM test GROUP BY class HAVING class&lt;3','SELECT DISTINCT(class), AVG(score) FROM test WHERE class&lt;3','BC',1,1,4,'2019-10-30 11:02:21'),(103,'观察STUDENT表的表结构：\nSTD_ID     NUMBER(4)\nCOURSE_ID     VARCHAR2(10)\nSTART_DATE     DATE\nEND_DATE     DATE\n下面聚合函数的使用正确的有？()','SUM(start_date)','AVG(start_date)','COUNT(start_date)','MIN(start_date)','CD',1,1,4,'2019-10-30 11:02:21'),(104,'哪些字段适合建立索引?( )','在select子句中的字段','外键字段','主键字段','在where子句中的字段','BCD',1,1,4,'2019-10-30 11:02:21'),(105,'与进程管理有关的命令是','fdisk','kill','pstree','ps','BCD',1,4,5,'2019-10-30 11:02:23'),(106,'下列那一个指令可以删除目录','ls','cd','rm','rmdir','CD',1,4,5,'2019-10-30 11:02:23'),(107,'局域网的网络设备通常有','交换机','路由器','网桥','双绞线','ABCD',1,4,5,'2019-10-30 11:02:23'),(108,'下列哪些指令可以查找文件','find','grep','whereis','cat','ABC',1,4,5,'2019-10-30 11:02:23'),(109,'关于“GNOME”说法正确的是','一个用户界面友好的桌面环境，能够使用户很容易地使用和配置他们的计算机','包括一个面板（用来启动应用程序和显示状态），一个桌面（存放数据和应用程序的地方），一套标准的桌面工具和应用程序，和一套与其他人相互协同工作的协议集','其他操作系统的用户在使用GNOME不能提供的强大的图形驱动环境','是一个操作命令','AB',1,4,5,'2019-10-30 11:02:23'),(110,'如果要在一台Linux系统上配置WEB服务器，要可以支持动态页面，需要安装的软件是','Apache','httpd','M ySql','PHP','ACD',1,4,5,'2019-10-30 11:02:23'),(111,'Linux的基本文件类型有哪几种','普通文件','目录文件','链接文件','特殊文件','ABCD',1,4,5,'2019-10-30 11:02:23'),(112,'常见的域名服务器种类有','根（root）服务器','主域名服务器（Primary Servers）','辅助域名服务器（Secondary Servers）','专用缓存域名服务器（Cache-only servers）','ABCD',1,4,5,'2019-10-30 11:02:23'),(113,'用来显示文件内容的命令有','cat','more','less','head','ABCD',1,4,5,'2019-10-30 11:02:23'),(114,'linux中的用户类型有','超级用户','高级用户','普通用户','伪用户','ACD',1,4,5,'2019-10-30 11:02:23'),(115,'可以作为启动设备是','硬盘','光盘驱动器','软盘','USB盘','ABCD',1,4,5,'2019-10-30 11:02:23'),(116,' 对于pwd命令，下列哪个是错误的？','显示当前工作目录','显示最近一个处理的文件','关闭系统','显示家目录','BCD',1,4,5,'2019-10-30 11:02:23'),(117,'以下哪些是LINUX的文件类型','文本文件','目录文件','批处理文件','设备文件','ABD',1,4,5,'2019-10-30 11:02:23'),(118,'命令cp和mcopy在Linux下的功能是','cp具有文件拷贝的功能','mcopy也具有文件拷贝的功能','软驱没有加载的情况下，可以用mcopy直接拷贝软盘中数据','软驱没有加载的情况下，可以用cp直接拷贝软盘中数据','ABC',1,4,5,'2019-10-30 11:02:23'),(119,'以下哪个命令可以一次一页地显示一个大的文本文件','more','cat','type','less','AD',1,4,5,'2019-10-30 11:02:23'),(120,'Linux的每类用户拥有三种权限，分别是','r','w','x','m','ABC',1,4,5,'2019-10-30 11:02:23'),(121,'Linux的正常关机命令可以是',' shutdown -h now',' shutdown -r now ','halt','reboot','AC',1,4,5,'2019-10-30 11:02:23'),(122,'系统用户账号信息被储存在下面那些文件','/etc/fstab','/etc/shadow','/etc/passwd','/etc/inittab','BC',1,4,5,'2019-10-30 11:02:23'),(123,'假设用户当前目录是:/home/xu,现需要返回到用户主目录.则下面几种命令可以实现,','cd $HOME','CD HOME','CD','CD ~','AD',1,4,5,'2019-10-30 11:02:23'),(124,'以下哪几种是vi的工作模式','命令模式','删除模式','编辑模式','末行模式','ACD',1,4,5,'2019-10-30 11:02:23'),(125,'在Linux操作系统中/etc/passwd文件包括的基本选项有','用户ID','加密的密码值','用户登录shell','用户登录目录','ACD',1,4,5,'2019-10-30 11:02:23'),(126,'关于a  or  b的描述正确的是。','若a=True  b=True  则 a or b ==True','若a=True  b=False  则 a or b ==True','若a=True  b=True  则 a or b ==False','若a=False  b=False  则 a or b ==False','ABD',1,4,9,'2019-10-30 11:02:38'),(127,'下列哪些项是Python中对文件的读取操作：','read','readall','readlines','readline','ACD',1,4,9,'2019-10-30 11:02:38'),(128,'在读写文件之前，必须通过以下些方法不能创建文件对象：','create','folder','File','open','ABC',1,4,9,'2019-10-30 11:02:38'),(129,'下列哪些项类型数据是可变化的：','集合','字典','元组','列表','ABD',1,4,9,'2019-10-30 11:02:38'),(130,'以下那些选项不可以终结一个循环的执行的语句是','break','if','input','exit','BCD',1,4,9,'2019-10-30 11:02:38'),(131,'以下哪条语句不能定义了一个Python字典','{1:2,2:3 }','{1, 2, 3}','[1, 2, 3]','(1, 2, 3)','BCD',1,4,9,'2019-10-30 11:02:38'),(132,'下列运算符的使用正确的是：','100 + \'a\'','[1, 2, 3] + [4, 5, 6]','3 * \'abc\'','10 % 3','BCD',1,4,9,'2019-10-30 11:02:38'),(133,'下列哪个语句在Python中是正确的','x = y = z = 1   ','x = (y = z + 1) ','x, y = y, x  ','x  +=  y','ACD',1,4,9,'2019-10-30 11:02:38'),(134,'以下能创建一个字典的语句是 ','dict1 = {}  ','dict2 = { 3 : 5 }    ','dict3 = {[1,2,3]: “uestc”}   ','dict4 = {(1,2,3): “uestc”}','ABD',1,4,9,'2019-10-30 11:02:38'),(135,'下列表达式的值为False的是','(2**=3)&lt;(2*=3) ','3&gt;2&gt;2  ','1==1 and 2!=1 ','not(1==1 and 0!=1) ','ABD',1,4,9,'2019-10-30 11:02:38'),(136,'对算法描述不正确的是','数学的计算公式','程序设计语言的语句序列','问题的精确描述','.解决问题的精确步骤','ABC',1,4,9,'2019-10-30 11:02:38'),(137,'下列哪种说法是正确的','除字典类型外，所有标准对象均可以用于布尔测试 ','空字符串的布尔值是False ','空列表对象的布尔值是False ','值为0的任何数字对象的布尔值是False','BCD',1,4,9,'2019-10-30 11:02:38'),(138,'以下关于循环控制语句描述正确的是哪些项？','Python中的for语句可以在任意序列上进行迭代访问，例如列表、字符串和元组。','在Python中if…elif…elif…结构中必须包含else子句。','在Python中没有switch-case的关键词，可以用if…elif…elif…来等价表达。','循环可以嵌套使用，例如一个for语句中有另一个for语句，一个while语句中有一个for语句等。','ACD',1,4,9,'2019-10-30 11:02:38'),(139,'以下关于列表表述中正确的是哪些项？','可以用“==”比较两个列表是否相同。','Python的列表可以嵌套，形成二维列表。','“+”号可以用来拼接两个列表。','列表与字符串一样都是不可变的。','ABC',1,4,9,'2019-10-30 11:02:38'),(140,'在Python中，以下关于函数的描述 正确的是哪些项？','在Python中，关键字参数是让调用者通过使用参数名区分参数，在使用时不允许改变参数列表中的参数顺序。','在Python中，默认参数的值可以修改。','在Python中，引入了函数式编程的思想，函数本身亦为对象。','在Python中，函数的return语句可以以元组tuple的方式返回多个值。','BCD',1,4,9,'2019-10-30 11:02:38'),(141,'以下关于字符串处理的描述正确的是哪些项？','print （\'C:\\file\\time\'），输出结果是C:\\file\\time。','Python 2.x中字符串是以单引号或双引号括起来的任意文本，如果字符串赋值的时候，内部有单引号或双引号时如果不想使用转义字符常常可以使用r运算符来表示。','&quot;\\&quot;符号可以被用来表示转义符号，例如\'doesn\\\'t\'和&quot;doesn\'t&quot;都表示字符串doesn\'t。','被单引号(\'...\')或者双引号(&quot;...&quot;)包围的都是字符串。','BCD',1,4,9,'2019-10-30 11:02:38'),(142,'以下关于列表表述中正确的是哪些项？','可以用“==”比较两个列表是否相同。','Python的列表可以嵌套，形成二维列表。','“+”号可以用来拼接两个列表。','列表与字符串一样都是不可变的。','ABC',1,4,9,'2019-10-30 11:02:38'),(143,'以下关于Python自带数据结构的运算结果中正确的是哪些项？','l = [1, 2, 3, 4]; l.insert(2, -1); 则l为 [1, 2, -1, 4]。','l = [1, 2, 3, 4]; l.pop(1); 则l结果为[1, 3, 4]。','l = [1, 2, 3, 4]; l.pop(); 则l.index(3) 结果为2。','l = [1, 2, 3, 4]; l.rerverse(); 则l[1]为3','BCD',1,4,9,'2019-10-30 11:02:38'),(144,'下列是Python语言关键字的是','else','print','lambda','finally','BCD',1,4,9,'2019-10-30 11:02:38'),(145,'以下关于Python自带数据结构的运算结果中正确的是哪些项？','l = [1, 2, 3, 4]; l.rerverse(); 则l[1]为3。','l = [1, 2, 3, 4]; l.pop(1); 则l结果为[1, 3, 4]。','l = [1, 2, 3, 4]; l.pop(); 则l.index(3) 结果为2。','l = [1, 2, 3, 4]; l.insert(2, -1); 则l为 [1, 2, -1, 4]。','ABC',1,4,9,'2019-10-30 11:02:38'),(146,'下面关于Servlet的陈述正确的是：','我们在浏览器的地址栏直接输入要请求的Servlet，该Servlet默认会使用doPost方法处理请求','Servlet运行在服务器端','Servlet的生命周期包括：实例化，初始化，服务，破坏，不可以用','Servlet不能向浏览器发送Html标签','BC',1,1,8,'2019-10-30 11:02:40'),(147,'下面说法错误的是：','Http协议是无状态的协议','会话跟踪技术有：用户授权，隐藏表单域，URL重写，Cookie等','使用request.getSession(false)可以新建会话','使用request.addCookie()可以添加Cookie到客户端','CD',1,1,8,'2019-10-30 11:02:40'),(148,'可以用于发送邮件的协议有：','Pop3','SMTP','FTP','IMAP','BD',1,1,8,'2019-10-30 11:02:40'),(149,'下列标签使用正确的是：','&lt;jsp:forward page=&quot;XXX.jsp&quot;&gt;\n&lt;jsp:param name=&quot;xxx&quot; value=&quot;xxx&quot;/&gt;\n&lt;/jsp:forward&gt;','&lt;jsp:forward page=&quot;XXX.jsp&quot;&gt;\n&lt;/jsp:forward&gt;','&lt;jsp:forward page=&quot;XXX.jsp&quot;/&gt;','&lt;jsp:param name=&quot;xxx&quot; value=&quot;xxx&quot;/&gt;\n&lt;/jsp:forward&gt;','AC',1,1,8,'2019-10-30 11:02:40'),(150,'18)在input.jsp中存在如下的代码：\n&lt;input type=&quot;text&quot; name=&quot;stuid&quot; value=&quot;1001&quot;/&gt;\n则在display.jsp中可以使用可以使用哪些语句可以获取stuid的值：','&lt;%=request.getPramater(&quot;stuid&quot;)%&gt;','${param.stuid}','${param[stuid]}','${param[&quot;stuid&quot;]}','ABD',1,1,8,'2019-10-30 11:02:40'),(151,'关于MVC下面说法正确的是：','MVC表示模型，视图，控制器','在model 1体系结构中没有使用Servlet','model 1体系结构适合小型项目，开发效率较高，但大型项目会有维护问题','JavaBean可以访问数据库','ABCD',1,1,8,'2019-10-30 11:02:40'),(152,'一个Web应用程序的目录由两部分组成','一个classes目录，还有一个包含了html、Servlet、JSP等文件的目录','一个包含公有资源的目录，还有一个私有的目录','一个Web应用的根目录，和在根目录下的WEB-INF目录','一个可以访问任何文件的目录，一个禁止下载其中资源的目录','BCD',1,1,8,'2019-10-30 11:02:40'),(153,'三层体系结构包括','表示层','业务层','映射层','数据层','ABD',1,1,8,'2019-10-30 11:02:40'),(154,'一个servlet的生命周期包括下列','init()方法','service()方法','invalidate()方法','destroy()方法','ABD',1,1,8,'2019-10-30 11:02:40'),(155,'关于ServletContext说法正确的是','是一个Web应用程序的上下文环境','一个Servlet在ServletContext上设置属性可以被其他Servlet所共享','可以获取Servlet的配置信息','可以获取整个应用程序的初始化参数','ABD',1,1,8,'2019-10-30 11:02:40'),(156,'除了Session以外，还有（）也是会话跟踪技术 选三项','隐藏表单域','超链接','URL重写','Cookie','ACD',1,1,8,'2019-10-30 11:02:40'),(157,'Jsp页面由静态内容、注释、表达式、声明和（）组成 选三项','指令','EL语言','Scriptlet','动作','ACD',1,1,8,'2019-10-30 11:02:40'),(158,'jsp指令包括（）选三项','page指令','taglib指令','import指令','include指令','ABD',1,1,8,'2019-10-30 11:02:40'),(159,'关于输入和输出的隐式对象有','application','request','response','out','BCD',1,1,8,'2019-10-30 11:02:40'),(160,'40)如果a是b的父类，b是c的父类，c是d\n的父类，他们都在包中。则以下正确的是','&lt;jsp:usebean id=“mybean”scope=“page”\nclass=“mypackage.d”type=“b”&gt;','&lt;jsp:usebean id=“mybean”scope=“page”\nclass=“mypackage.d” type=“Object”/&gt;','&lt;jsp:usebean id=“mybean”scope=“page”\nclass=“mypackage.d” type=“mypackage.a”/&gt;','&lt;jsp:usebean id=“mybean”scope=“page”\nclass=“mypackage.d”type=“a”/&gt;','BC',1,1,8,'2019-10-30 11:02:40'),(161,'在JSP中，下面对JSP指令的描述，错误的是','指令以”&lt;%@开始,以”%&gt;”结束','指令以”&lt;%开始,以%&gt;”结束','指令以”&lt;”开始,以”&gt;”结束','指令以”&lt;jsp:”开始,以”/&gt;”结束','BCD',1,1,8,'2019-10-30 11:02:40'),(162,'下列关于JSP的scriptlet的陈述正确的是','Scriptlet是包含在&lt;%和%&gt;之间的','Scriptlet可以包含 import语句','Scriptlet不但包含Java代码，还可以包含html代码','整个JSP可以有多个&lt;%T和%&gt;对','AD',1,1,8,'2019-10-30 11:02:40'),(163,'下列选项中，（）是错位的表达式','&lt;%! Int a=0;%&gt;','&lt;%int a = 0;%&gt;','&lt;%=(3+5);%&gt;','&lt;%=(3+5)%&gt;','ABC',1,1,8,'2019-10-30 11:02:40'),(164,'Servlet通信方法包括那些（AB）','RequestDispatcher接口的forward()方法','RequestDispatcher接口的include()方法','RequestDispatcher接口的linked ()方法','RequestDispatcher接口的communion ()方法','AB',1,1,8,'2019-10-30 11:02:40'),(165,'下列语法错误的有','&lt;%! int num %&gt;','&lt;!-- hello world --!&gt;','&lt;%= 5 + 3 %&gt;','&lt;%@ page  import=”java.io.*; java.util.*”%&gt;','ABD',1,1,8,'2019-10-30 11:02:40'),(166,'以下选项中，哪些属于JDK工具','Java编译器 ','Java运行工具',' Java文档生成工具',' Java打包工具 ','ABCD',1,8,10,'2019-10-30 11:02:57'),(167,'Java属于以下哪种语言？','机器语言','汇编语言','高级语言','以上都不对','C',1,8,10,'2019-10-30 11:02:57'),(168,'以下选项中，哪些属于合法的标识符？','Hello_World ','class','123username ','username123','AD',1,8,10,'2019-10-30 11:02:57'),(169,'关于方法重载的描述，以下选项中哪些是正确的？','方法名必须一致','返回值类型必须不同','参数个数必须一致','参数的个数或类型不一致','AD',1,8,10,'2019-10-30 11:02:57'),(170,'以下选项中,switch语句判断条件可以接收的数据类型有哪些?','int ','byte ','char','short','ABCD',1,8,10,'2019-10-30 11:02:57'),(171,'下列语句哪些属于循环语句','for语句','if语句 ','while语句 ','switch语句','AB',1,8,10,'2019-10-30 11:02:57'),(172,'关于super关键字以下说法哪些是正确的?','super关键字可以调用父类的构造方法 ','super关键字可以调用父类的普通方法','super与this不能同时存在于同一个构造方法中','super与this可以同时存在于同一个构造方法中','ABC',1,8,10,'2019-10-30 11:02:57'),(173,'以下说法哪些是正确的?','Java语言中允许一个类实现多个接口','java语言中不允许一个类继承多个类','Java语言中允许一个类同时继承一个类并实现一个接口','Java语言中允许一个类同时继承一个类并实现一个接口','ABCD',1,8,10,'2019-10-30 11:02:57'),(174,'类中的一个成员方法被下面哪个修饰符修饰,该方法只能在本类被访问?','public','protected ','private','default','ABCD',1,8,10,'2019-10-30 11:02:57'),(175,'关于抽象类的说法哪些是正确的?','抽象类中可以有非抽象方法','如果父类是抽象类,则子类必须重写父类所有的抽象方法。','不能用抽象类去创建对象','接口和抽象类是同一个概念。','AC',1,8,10,'2019-10-30 11:02:57'),(176,'关于线程的创建过程,下面四种说法正确的有哪些?','定义Thread类的子类,重写Thread类的run()方法,创建该子类的实例对象,调用对象的start方法','定义Thread类的子类,重写Thread类的run()方法,创建该子类的实例对象,调用对象的run方法','定义一个实现Runnable 接口的类并实现run()方法,创建该类实例对象,将其作为参数传递给Thread类的构造方法来创建Thread对象,调用Thread对象的start()方法','定义一个实现Runnable 接口的类并实现run()方法,创建该类对象,然后调用run()方法','AC',1,8,10,'2019-10-30 11:02:57'),(177,'对于通过实现Runnable接口创建线程,下面说法正确的有哪些?','适合多个相同程序代码的线程去处理同一个资源的情况','适合多个相同程序代码的线程去处理同一个资源的情况','可以避免由于Java的单继承带来的局限性','编写简单,可以不通过Thread类直接创建线程','ABC',1,8,10,'2019-10-30 11:02:57'),(178,'对于线程的生命周期,下面四种说法正确的有哪些?','调用了线程的start()方法,该线程就进入运行状态 (就绪,还要获得CPU使用权)','线程的run()方法运行结束或被未catch的InterruptedException等异常终结,那么该线程进入死亡状态','线程进入死亡状态,但是该线程对象仍然是一个Thread对象,在没有被垃圾回收器回收之前仍可以像引用其它对象一样引用它','线程进入死亡状态后,调用它的start()方法仍然可以重新启动','BC',1,8,10,'2019-10-30 11:02:57'),(179,'对于死锁的描述,下面四种说法正确有哪些?','当两个线程互相等待对方释放同步锁时会发生死锁','Java虚拟机没有检测和处理死锁的措施 ','一旦出现死锁,程序会发生异常','处于死锁状态的线程处于阻塞状态,无法继续运行','ABD',1,8,10,'2019-10-30 11:02:57'),(180,'下面四个选项中,哪些是线程进入阻塞状态的原因?','线程试图获取某个对象的同步锁,而该锁被其它线程持有','线程调用了另一个线程的join()方法',' 当线程调用了一个阻塞式的IO方法','线程调用了setDaemon(boolean b)方法','ABC',1,8,10,'2019-10-30 11:02:57'),(181,'下面四个选项中,对线程同步的目的描述正确的有哪些?','锁定资源,使同一时刻只有一个线程去访问它,防止多个线程操作同一个资源引发错误','提高线程的执行效率 ','让线程独占一个资源','让多个线程同时使用一个资源','AB',1,8,10,'2019-10-30 11:02:57'),(182,'关于foreach循环的特点,以下说法哪些是正确的?','foreach循环的语法格式为:for(容器中元素类型 临时变量 :容器变量)。','foreach循环在遍历集合时,无需获得容器的长度','foreach循环在遍历集合时,无需循环条件,也无需迭代语句','foreach循环在遍历集合时非常繁琐','BCD',1,8,10,'2019-10-30 11:02:57'),(183,'下列哪些说法是正确的?','LinkedList集合在增删元素时效率较高 ','ArrayList集合在查询元素时效率较高','HashMap不允许出现一对null键null值','HashSet集合中元素可重复并且无序','AB',1,8,10,'2019-10-30 11:02:57'),(184,'以下哪些方法是LinkedList集合中定义的?','getLast()  ','getFirst()  ','remove (int index)   ','next()','ABC',1,8,10,'2019-10-30 11:02:57'),(185,'下面选项中,哪些是标准输入输出流?','System. In ','System. Out ','InputStream ','OutputStream','AB',1,8,10,'2019-10-30 11:02:57'),(186,'关于a  or  b的描述正确的是。','若a=True  b=True  则 a or b ==True','若a=True  b=False  则 a or b ==True','若a=True  b=True  则 a or b ==False','若a=False  b=False  则 a or b ==False','ABD',1,8,14,'2019-10-30 11:03:30'),(187,'下列哪些项是Python中对文件的读取操作：','read','readall','readlines','readline','ACD',1,8,14,'2019-10-30 11:03:30'),(188,'在读写文件之前，必须通过以下些方法不能创建文件对象：','create','folder','File','open','ABC',1,8,14,'2019-10-30 11:03:30'),(189,'下列哪些项类型数据是可变化的：','集合','字典','元组','列表','ABD',1,8,14,'2019-10-30 11:03:30'),(190,'以下那些选项不可以终结一个循环的执行的语句是','break','if','input','exit','BCD',1,8,14,'2019-10-30 11:03:30'),(191,'以下哪条语句不能定义了一个Python字典','{1:2,2:3 }','{1, 2, 3}','[1, 2, 3]','(1, 2, 3)','BCD',1,8,14,'2019-10-30 11:03:30'),(192,'下列运算符的使用正确的是：','100 + \'a\'','[1, 2, 3] + [4, 5, 6]','3 * \'abc\'','10 % 3','BCD',1,8,14,'2019-10-30 11:03:30'),(193,'下列哪个语句在Python中是正确的','x = y = z = 1   ','x = (y = z + 1) ','x, y = y, x  ','x  +=  y','ACD',1,8,14,'2019-10-30 11:03:30'),(194,'以下能创建一个字典的语句是 ','dict1 = {}  ','dict2 = { 3 : 5 }    ','dict3 = {[1,2,3]: “uestc”}   ','dict4 = {(1,2,3): “uestc”}','ABD',1,8,14,'2019-10-30 11:03:30'),(195,'下列表达式的值为False的是','(2**=3)&lt;(2*=3) ','3&gt;2&gt;2  ','1==1 and 2!=1 ','not(1==1 and 0!=1) ','ABD',1,8,14,'2019-10-30 11:03:30'),(196,'对算法描述不正确的是','数学的计算公式','程序设计语言的语句序列','问题的精确描述','.解决问题的精确步骤','ABC',1,8,14,'2019-10-30 11:03:30'),(197,'下列哪种说法是正确的','除字典类型外，所有标准对象均可以用于布尔测试 ','空字符串的布尔值是False ','空列表对象的布尔值是False ','值为0的任何数字对象的布尔值是False','BCD',1,8,14,'2019-10-30 11:03:30'),(198,'以下关于循环控制语句描述正确的是哪些项？','Python中的for语句可以在任意序列上进行迭代访问，例如列表、字符串和元组。','在Python中if…elif…elif…结构中必须包含else子句。','在Python中没有switch-case的关键词，可以用if…elif…elif…来等价表达。','循环可以嵌套使用，例如一个for语句中有另一个for语句，一个while语句中有一个for语句等。','ACD',1,8,14,'2019-10-30 11:03:30'),(199,'以下关于列表表述中正确的是哪些项？','可以用“==”比较两个列表是否相同。','Python的列表可以嵌套，形成二维列表。','“+”号可以用来拼接两个列表。','列表与字符串一样都是不可变的。','ABC',1,8,14,'2019-10-30 11:03:30'),(200,'在Python中，以下关于函数的描述 正确的是哪些项？','在Python中，关键字参数是让调用者通过使用参数名区分参数，在使用时不允许改变参数列表中的参数顺序。','在Python中，默认参数的值可以修改。','在Python中，引入了函数式编程的思想，函数本身亦为对象。','在Python中，函数的return语句可以以元组tuple的方式返回多个值。','BCD',1,8,14,'2019-10-30 11:03:30'),(201,'以下关于字符串处理的描述正确的是哪些项？','print （\'C:\\file\\time\'），输出结果是C:\\file\\time。','Python 2.x中字符串是以单引号或双引号括起来的任意文本，如果字符串赋值的时候，内部有单引号或双引号时如果不想使用转义字符常常可以使用r运算符来表示。','&quot;\\&quot;符号可以被用来表示转义符号，例如\'doesn\\\'t\'和&quot;doesn\'t&quot;都表示字符串doesn\'t。','被单引号(\'...\')或者双引号(&quot;...&quot;)包围的都是字符串。','BCD',1,8,14,'2019-10-30 11:03:30'),(202,'以下关于列表表述中正确的是哪些项？','可以用“==”比较两个列表是否相同。','Python的列表可以嵌套，形成二维列表。','“+”号可以用来拼接两个列表。','列表与字符串一样都是不可变的。','ABC',1,8,14,'2019-10-30 11:03:30'),(203,'以下关于Python自带数据结构的运算结果中正确的是哪些项？','l = [1, 2, 3, 4]; l.insert(2, -1); 则l为 [1, 2, -1, 4]。','l = [1, 2, 3, 4]; l.pop(1); 则l结果为[1, 3, 4]。','l = [1, 2, 3, 4]; l.pop(); 则l.index(3) 结果为2。','l = [1, 2, 3, 4]; l.rerverse(); 则l[1]为3','BCD',1,8,14,'2019-10-30 11:03:30'),(204,'下列是Python语言关键字的是','else','print','lambda','finally','BCD',1,8,14,'2019-10-30 11:03:30'),(205,'以下关于Python自带数据结构的运算结果中正确的是哪些项？','l = [1, 2, 3, 4]; l.rerverse(); 则l[1]为3。','l = [1, 2, 3, 4]; l.pop(1); 则l结果为[1, 3, 4]。','l = [1, 2, 3, 4]; l.pop(); 则l.index(3) 结果为2。','l = [1, 2, 3, 4]; l.insert(2, -1); 则l为 [1, 2, -1, 4]。','ABC',1,8,14,'2019-10-30 11:03:30'),(206,'下面哪几种是jquery中表单的对象属性？',':checked ',': enabled',':hidden',':selected','ABD',1,7,7,'2019-10-30 11:03:34'),(207,'下面哪几个不是属于jquery的事件处理?','bind(type)','click() ','change()','one(type) ','BC',1,7,7,'2019-10-30 11:03:34'),(208,'下面哪几种是属于jquery文档处理的？','包裹','替换',' 删除','内部和外部插入 ','ABCD',1,7,7,'2019-10-30 11:03:34'),(209,'在DOM对象模型中，下列选项中的（）对象位于DOM对象模型的第二层。','history','document','button','text ','AB',1,7,7,'2019-10-30 11:03:34'),(210,'在Javascript中，对于浏览器对象的层次关系理解正确的是','window对象是所有页面内容的根对象','document对象包含location对象和history对象','location对象包含history','document对象包含form对象','AD',1,7,7,'2019-10-30 11:03:34'),(211,'下列选项中，（）段HTML代码所表示的“返回”链接能够正确实现IE工具栏中“后退”按钮的功能。 ','&lt;a href=”javascript:history.go(-1)”&gt;返回&lt;/a&gt; ','&lt;a href=”javascript:location.back()”&gt;返回&lt;/a&gt;','&lt;a href=”javascript: location go(-1)”&gt;返回&lt;/a&gt; ','&lt;a href=”javascript:history.back()”&gt;返回&lt;/a&gt; ','AD',1,7,7,'2019-10-30 11:03:34'),(212,'在HTML页面中，定义了如下所示的Javascript函数，则正确调用该函数的HTML代码是function compute(op){ alert(op); } ','&lt;input name=”a” type=”button” onclick=”compute(this.value)” value=”+”&gt;','&lt;input name=”b” type=”button” onclick=”compute(„-„)” value=”-”&gt;','&lt;input name=”c” type=”button” onclick=”compute(“*”)” value=”*”&gt;','&lt;input name=”d” type=”button” onclick=”compute(/ )” value=”/”&gt;','AB',1,7,7,'2019-10-30 11:03:34'),(213,'关于bind( )方法与unbind( )方法说法正确的是','bind( )方法可用来移除单个或多个事件','unbind( )方法可以移除所有的或被选的事件处理程序','使用bind( )方法可绑定单个或多个事件','unbind( )方法是与bind( )方法对应的方法','BCD',1,7,7,'2019-10-30 11:03:34'),(214,'在jQuery中，通过jQuery对象.css( )可实现样式控制，以下说法正确的是','css( )方法会去除原有样式而设置新样式','正确语法：css(“属性”,”值”)','css( )方法不会去除原有样式','正确语法：css(“属性”)','AB',1,7,7,'2019-10-30 11:03:34'),(215,'在Jquery中，下列关于DOM操作的说法错误的是','$(A).append(B)表示将A追加到B中','$(A).appendTo(B)表示把A追加到B中','$(A).after(B)表示将A插入到B以后','$(A).insertAfter(B)表示将A插入到B以后','AC',1,7,7,'2019-10-30 11:03:34'),(216,'以下()选项能够正确地得到这个标签:&lt;input id=&quot;btnGo&quot;type=”buttom” value=”点击”class=”btn”&gt;','$(“#btnGo”)','$(“.btnGo”)','$(“.btn”)','$(“input[type=’button’]”)','ACD',1,7,7,'2019-10-30 11:03:34'),(217,'在jQuery中，返回元素内容宽高下列描述正确的是：1,Width()--width   \n\n2,innerwidth-- width + padding  \n\n3,outerwidth---width + padding + border  \n\n4,outerwidth(true)---width + padding + border + margin','width()方法设置或返回元素的宽度（不包括内边距、边框或外边距）','height()方法设置或返回元素的高度（包括内边距、边框或外边距）','innerwidth() 方法设置或返回元素的宽度（包括内边距）','innerheight() 方法设置或返回元素的高度（不包括内边距、边框或外边距）','AC',1,7,7,'2019-10-30 11:03:34'),(218,'jQuery中遍历节点的方法，错误的是','next() 取得匹配元素后面紧邻的同辈元素','prev() 取得匹配元素前面紧邻的同辈元素取得匹配元素的所有同辈元素','siblings() 取得匹配元素前的所有同辈元素','closest() 取得元素紧邻的后一个元素匹配\n\nclosest(‘div’) 方法获得匹配选择器的第\n\n一个祖先元素,从当前元素开始沿DOM树向上','CD',1,7,7,'2019-10-30 11:03:34'),(219,'以下关于Array数组对象的说法不正确的是','对数组里数据的排序可以用sort函数，如果排序效果非预期，可以给sort函数加\n一个排序函数的参数','reverse用于对数组数据的倒序排列','向数组的最后位置加一个新元素，可以用pop方法','unshift方法用于向数组删除第一个元素','CD',1,7,7,'2019-10-30 11:03:34'),(220,'点击页面的按钮，使之打开一个新窗口，加载一个网页，以下JavaScript代码中可行\n的是','&lt;input type=&quot;button&quot; value=&quot;new&quot; \nonclick=&quot;open(\'new.html\', \'_blank\') &quot;/&gt;','&lt;input type=&quot;button&quot; value=&quot;new&quot; \nonclick=&quot;window.location=\'new.html\';&quot;/&gt;','&lt;input type=&quot;button&quot; value=&quot;new&quot; \nonclick=&quot; location.assign(\'new.html\');&quot;/&gt;','&lt;form target=&quot;_blank&quot; action=&quot;new.html&quot;&gt; \n&lt;input type=&quot;submit&quot; value=&quot;new&quot;/&gt; &lt;/form&gt;','AD',1,7,7,'2019-10-30 11:03:34'),(221,'使用JavaScript向网页中输出&lt;h1&gt;hello&lt;/h1&gt;，以下代码中可行的是','&lt;script type=&quot;text/javascript&quot;&gt; \ndocument.write(&lt;h1&gt;hello&lt;/h1&gt;); &lt;/script&gt; ','&lt;script type=&quot;text/javascript&quot;&gt; \ndocument.write(&quot;&lt;h1&gt;hello&lt;/h1&gt;&quot;); &lt;/script&gt;','&lt;script type=&quot;text/javascript&quot;&gt; \n&lt;h1&gt;hello&lt;/h1&gt; &lt;/script&gt;',' &lt;h1&gt; &lt;script type=&quot;text/javascript&quot;&gt;   document.write(&quot;hello&quot;); &lt;/script&gt; &lt;/h1&gt; ','BD',1,7,7,'2019-10-30 11:03:34'),(222,'关于JavaScript里的xml处理，以下说明正确的是','Xml是种可扩展标记语言，格式更规范，是作为未来html的替代','Xml一般用于传输和存储数据，是对html的补充，两者的目的不同','在JavaScript里解析和处理xml数据时，因为浏览器的不同，其做法也不同','在IE浏览器里处理xml，首先需要创建ActiveXObject对象','BCD',1,7,7,'2019-10-30 11:03:34'),(223,'JavaScript数据类型包括原始类型和引用类型，以下属于原始类型的有?','Number（数值）Boolean（布尔）','String（字符串）','Object（对象）','Null（空） Undefined（未定义）','ABD',1,7,7,'2019-10-30 11:03:34'),(224,'面向对象的三大特征','封装','属性','继承','多态','ACD',1,7,7,'2019-10-30 11:03:34'),(225,'元素的type属性的取值可以是','image','checkbox','select','button','ABD',1,7,7,'2019-10-30 11:03:34'),(226,'以下选项中，哪些属于JDK工具','Java编译器 ','Java运行工具',' Java文档生成工具',' Java打包工具 ','ABCD',1,7,13,'2019-10-30 11:03:55'),(227,'Java属于以下哪种语言？','机器语言','汇编语言','高级语言','以上都不对','C',1,7,13,'2019-10-30 11:03:55'),(228,'以下选项中，哪些属于合法的标识符？','Hello_World ','class','123username ','username123','AD',1,7,13,'2019-10-30 11:03:55'),(229,'关于方法重载的描述，以下选项中哪些是正确的？','方法名必须一致','返回值类型必须不同','参数个数必须一致','参数的个数或类型不一致','AD',1,7,13,'2019-10-30 11:03:55'),(230,'以下选项中,switch语句判断条件可以接收的数据类型有哪些?','int ','byte ','char','short','ABCD',1,7,13,'2019-10-30 11:03:55'),(231,'下列语句哪些属于循环语句','for语句','if语句 ','while语句 ','switch语句','AB',1,7,13,'2019-10-30 11:03:55'),(232,'关于super关键字以下说法哪些是正确的?','super关键字可以调用父类的构造方法 ','super关键字可以调用父类的普通方法','super与this不能同时存在于同一个构造方法中','super与this可以同时存在于同一个构造方法中','ABC',1,7,13,'2019-10-30 11:03:55'),(233,'以下说法哪些是正确的?','Java语言中允许一个类实现多个接口','java语言中不允许一个类继承多个类','Java语言中允许一个类同时继承一个类并实现一个接口','Java语言中允许一个类同时继承一个类并实现一个接口','ABCD',1,7,13,'2019-10-30 11:03:55'),(234,'类中的一个成员方法被下面哪个修饰符修饰,该方法只能在本类被访问?','public','protected ','private','default','ABCD',1,7,13,'2019-10-30 11:03:55'),(235,'关于抽象类的说法哪些是正确的?','抽象类中可以有非抽象方法','如果父类是抽象类,则子类必须重写父类所有的抽象方法。','不能用抽象类去创建对象','接口和抽象类是同一个概念。','AC',1,7,13,'2019-10-30 11:03:55'),(236,'关于线程的创建过程,下面四种说法正确的有哪些?','定义Thread类的子类,重写Thread类的run()方法,创建该子类的实例对象,调用对象的start方法','定义Thread类的子类,重写Thread类的run()方法,创建该子类的实例对象,调用对象的run方法','定义一个实现Runnable 接口的类并实现run()方法,创建该类实例对象,将其作为参数传递给Thread类的构造方法来创建Thread对象,调用Thread对象的start()方法','定义一个实现Runnable 接口的类并实现run()方法,创建该类对象,然后调用run()方法','AC',1,7,13,'2019-10-30 11:03:55'),(237,'对于通过实现Runnable接口创建线程,下面说法正确的有哪些?','适合多个相同程序代码的线程去处理同一个资源的情况','适合多个相同程序代码的线程去处理同一个资源的情况','可以避免由于Java的单继承带来的局限性','编写简单,可以不通过Thread类直接创建线程','ABC',1,7,13,'2019-10-30 11:03:55'),(238,'对于线程的生命周期,下面四种说法正确的有哪些?','调用了线程的start()方法,该线程就进入运行状态 (就绪,还要获得CPU使用权)','线程的run()方法运行结束或被未catch的InterruptedException等异常终结,那么该线程进入死亡状态','线程进入死亡状态,但是该线程对象仍然是一个Thread对象,在没有被垃圾回收器回收之前仍可以像引用其它对象一样引用它','线程进入死亡状态后,调用它的start()方法仍然可以重新启动','BC',1,7,13,'2019-10-30 11:03:55'),(239,'对于死锁的描述,下面四种说法正确有哪些?','当两个线程互相等待对方释放同步锁时会发生死锁','Java虚拟机没有检测和处理死锁的措施 ','一旦出现死锁,程序会发生异常','处于死锁状态的线程处于阻塞状态,无法继续运行','ABD',1,7,13,'2019-10-30 11:03:55'),(240,'下面四个选项中,哪些是线程进入阻塞状态的原因?','线程试图获取某个对象的同步锁,而该锁被其它线程持有','线程调用了另一个线程的join()方法',' 当线程调用了一个阻塞式的IO方法','线程调用了setDaemon(boolean b)方法','ABC',1,7,13,'2019-10-30 11:03:55'),(241,'下面四个选项中,对线程同步的目的描述正确的有哪些?','锁定资源,使同一时刻只有一个线程去访问它,防止多个线程操作同一个资源引发错误','提高线程的执行效率 ','让线程独占一个资源','让多个线程同时使用一个资源','AB',1,7,13,'2019-10-30 11:03:55'),(242,'关于foreach循环的特点,以下说法哪些是正确的?','foreach循环的语法格式为:for(容器中元素类型 临时变量 :容器变量)。','foreach循环在遍历集合时,无需获得容器的长度','foreach循环在遍历集合时,无需循环条件,也无需迭代语句','foreach循环在遍历集合时非常繁琐','BCD',1,7,13,'2019-10-30 11:03:55'),(243,'下列哪些说法是正确的?','LinkedList集合在增删元素时效率较高 ','ArrayList集合在查询元素时效率较高','HashMap不允许出现一对null键null值','HashSet集合中元素可重复并且无序','AB',1,7,13,'2019-10-30 11:03:55'),(244,'以下哪些方法是LinkedList集合中定义的?','getLast()  ','getFirst()  ','remove (int index)   ','next()','ABC',1,7,13,'2019-10-30 11:03:55'),(245,'下面选项中,哪些是标准输入输出流?','System. In ','System. Out ','InputStream ','OutputStream','AB',1,7,13,'2019-10-30 11:03:55'),(246,'在css中，下面属于box模型属性的有','font','margin','padding','border','BCD',1,9,11,'2019-10-30 11:04:02'),(247,'下列网页设计的说法中正确的是','冷暖色调在均匀使用时不宜靠近','纯度适宜的两种颜色事宜放在一起','整个页面中最好有一个色调','抽象线条的构图很容易造成重心不稳','ACD',1,9,11,'2019-10-30 11:04:02'),(248,'关于IFrame表述正确的有','通过IFrame，网页可以嵌入其他网页内容，并可以动态更改','在相同域名下，内嵌的IFrame可以获取外层网页的对象','在相同域名下，外层网页脚本可以获取IFrame网页内的对象','可以通过脚本调整IFrame的大小','ABCD',1,9,11,'2019-10-30 11:04:02'),(249,'关于HTML5说法错误的是','HTML5只是对HTML4的一个简单升级','所有浏览器都支持HTML5','HTML5新增了离线缓存机制','HTML5书写格式要求必须按照书写规范','ABD',1,9,11,'2019-10-30 11:04:02'),(250,'下列哪些是设置有关边框的属性','border-color','border-back','border-style','border-width','ACD',1,9,11,'2019-10-30 11:04:02'),(251,'下列选项中关于浏览器对象说法正确的是','history对象记录了用户在一个浏览器中已经访问过的urls','location对象相当于IE浏览器中的地址栏','location对象是history对象的父对象','location对象是window对象的子对象','ABD',1,9,11,'2019-10-30 11:04:02'),(252,'我们想要将页面中的文本采用项目符号的形式予以显示，\n采用哪些标记组合可以达到我们的要求？','&lt;P&gt;','&lt;UL&gt;','&lt;BR&gt;','&lt;LI&gt;','BD',1,9,11,'2019-10-30 11:04:02'),(253,'下面选项中，( )可以设置网页中某个标签的右外边距为10像素。','Margin:0 10px;','Margin:10px 0 0 0;','Margin:0 10 0 0px;','Padding-right:10px;','AC',1,9,11,'2019-10-30 11:04:02'),(254,'在制作HTML页面时，页面的布局技术主要分为','框架布局','表格布局','DIV层布局','CSS3 布局','ABC',1,9,11,'2019-10-30 11:04:02'),(255,'在CSS语言下列哪些选项是背景图像的属性（）','背景重复','背景附件','纵向排列','背景位置','ABCD',1,9,11,'2019-10-30 11:04:02'),(256,'CSS中的选择器包括（）','超文本标记选择器','类选择器','标签选择器','ID选择器','BCD',1,9,11,'2019-10-30 11:04:02'),(257,'CSS文本属性中，文本对齐属性的取值有（）','auto','justify','center','right','BCD',1,9,11,'2019-10-30 11:04:02'),(258,'CSS中的BOX的padding属性包括的属性有（）','上填充','地填充','填充','左填充','ABD',1,9,11,'2019-10-30 11:04:02'),(259,'CSS中，盒模型的属性包括（）','font','margin','padding','visible','BC',1,9,11,'2019-10-30 11:04:02'),(260,'下面关于CSS的说法正确的有（）','CSS可以控制网页背景图片','margin属性的属性值可以是百分比','整个BODY可以作为一个BOX','对于中文可以使用word-spacing','ABC',1,9,11,'2019-10-30 11:04:02'),(261,'CSS中的选择器包括( )','超文本标记选择器','类选择器','标签选择器','ID选择器','BCD',1,9,11,'2019-10-30 11:04:02'),(262,'关于CSS基本语法说法正确的是（）','属性必须要包含{}号之中','属性和属性值之间用等号连接','在有多个属性时，用“：”进行区分','如果一个属性有几个值，则每个属性值之间用分号分隔开','AC',1,9,11,'2019-10-30 11:04:02'),(263,'关于样式表的优先级说法正确的是（）','直接定义在标记上的CSS样式级别最高','内部样式表次之','外部样式表级别最低','当样式中属性重复时，先设的属性起作用','ABC',1,9,11,'2019-10-30 11:04:02'),(264,'关于内容，结构和表现说法正确的是（）','CSS可以控制网页背景颜色','position可以实现盒子模型精确定位','字体大小的单位可以使CM','一个BOX只能通过float进行定位','ABC',1,9,11,'2019-10-30 11:04:02'),(265,'以下属于超级链接的是？','文本链接','锚链接','图像链接','卯链接','ABC',1,9,11,'2019-10-30 11:04:02'),(266,'以下有关按钮说法中，正确的是：','可以作为图像作为提交按钮','可以用图像作为重置按钮','可以控制提交按钮的显示文字','可以控制重置按钮的显示文字','ACD',1,9,11,'2019-10-30 11:04:02'),(267,'创建选项菜单不应使用以下哪些标记符？','select和option','input和label','input','input和option','BCD',1,9,11,'2019-10-30 11:04:02'),(268,'下列关于CSS的说法正确的一项是','CSS可以控制网页背景图片','margin属性的属性值可以是百分比','整个BODY可以作为一个BOX','对于中文可以使用word-spacing属性对字间距进行调整','ABC',1,9,11,'2019-10-30 11:04:02'),(269,'以下说法正确的是？','网页的本质就是HTML源代码','网页就是主页','使用“记事本”编辑网页时，应将保存为.htm或者.html后缀','本地网站通常就是一个完整的文件夹','ACD',1,9,11,'2019-10-30 11:04:02'),(270,'以下说法错误的是？','p标记符和br标记符作用是一样的','多个p标记符可以产生多个空行','多个br标记符可以产生多个空行','p标记符的结束标记符通常不可以省略','ABD',1,9,11,'2019-10-30 11:04:02'),(271,'下面关于CSS表述正确的是()','CSS是一种制作网页的新技术，现在已经为大多数的浏览器所支持，成为网页设计必不可少的工具之一。','层叠样式表是HTML的辅助工具，缺点是设计者设计的网页缺少动感，网页内容的排版布局上也有很多困难','使用CSS能够简化网页的格式代码，加快下载显示的速度，也减少了需要上传的代码数量，大大减少了重复劳动的工作量。','CSS是Cascading Stylesheets的缩写，中文意思是层叠样式表','ACD',1,9,11,'2019-10-30 11:04:02'),(272,'以下有关列表的说法中,正确的是','在创建列表时,LI 标记符的结束标记符不可省略。','指定嵌套列表时,也可以具体指定项目符号或编号样式。','无序列表应使用 UL 和 LI 标记符进行创建。','有序列表和无序列表可以互相嵌套。','BCD',1,9,11,'2019-10-30 11:04:02'),(273,'以下标记符中,没有对应的结束标记的是','body','br','html','input','BD',1,9,11,'2019-10-30 11:04:02'),(274,'关于表格的描述不正确的一项是。','在单元格内不能继续插入整个表格','可以同时选定不相邻的单元格','粘贴表格时,可以粘贴表格的内容','在网页中,水平方向可以并排多个独立的表格','CD',1,9,11,'2019-10-30 11:04:02'),(275,'下面是HTML表格标记的是','&lt;table&gt;','&lt;tr&gt;','&lt;td&gt;','&lt;from&gt;','ABC',1,9,11,'2019-10-30 11:04:02'),(276,'以下选项中，哪些属于JDK工具','Java编译器 ','Java运行工具',' Java文档生成工具',' Java打包工具 ','ABCD',1,9,12,'2019-10-30 11:04:11'),(277,'Java属于以下哪种语言？','机器语言','汇编语言','高级语言','以上都不对','C',1,9,12,'2019-10-30 11:04:11'),(278,'以下选项中，哪些属于合法的标识符？','Hello_World ','class','123username ','username123','AD',1,9,12,'2019-10-30 11:04:11'),(279,'关于方法重载的描述，以下选项中哪些是正确的？','方法名必须一致','返回值类型必须不同','参数个数必须一致','参数的个数或类型不一致','AD',1,9,12,'2019-10-30 11:04:11'),(280,'以下选项中,switch语句判断条件可以接收的数据类型有哪些?','int ','byte ','char','short','ABCD',1,9,12,'2019-10-30 11:04:11'),(281,'下列语句哪些属于循环语句','for语句','if语句 ','while语句 ','switch语句','AB',1,9,12,'2019-10-30 11:04:11'),(282,'关于super关键字以下说法哪些是正确的?','super关键字可以调用父类的构造方法 ','super关键字可以调用父类的普通方法','super与this不能同时存在于同一个构造方法中','super与this可以同时存在于同一个构造方法中','ABC',1,9,12,'2019-10-30 11:04:11'),(283,'以下说法哪些是正确的?','Java语言中允许一个类实现多个接口','java语言中不允许一个类继承多个类','Java语言中允许一个类同时继承一个类并实现一个接口','Java语言中允许一个类同时继承一个类并实现一个接口','ABCD',1,9,12,'2019-10-30 11:04:11'),(284,'类中的一个成员方法被下面哪个修饰符修饰,该方法只能在本类被访问?','public','protected ','private','default','ABCD',1,9,12,'2019-10-30 11:04:11'),(285,'关于抽象类的说法哪些是正确的?','抽象类中可以有非抽象方法','如果父类是抽象类,则子类必须重写父类所有的抽象方法。','不能用抽象类去创建对象','接口和抽象类是同一个概念。','AC',1,9,12,'2019-10-30 11:04:11'),(286,'关于线程的创建过程,下面四种说法正确的有哪些?','定义Thread类的子类,重写Thread类的run()方法,创建该子类的实例对象,调用对象的start方法','定义Thread类的子类,重写Thread类的run()方法,创建该子类的实例对象,调用对象的run方法','定义一个实现Runnable 接口的类并实现run()方法,创建该类实例对象,将其作为参数传递给Thread类的构造方法来创建Thread对象,调用Thread对象的start()方法','定义一个实现Runnable 接口的类并实现run()方法,创建该类对象,然后调用run()方法','AC',1,9,12,'2019-10-30 11:04:11'),(287,'对于通过实现Runnable接口创建线程,下面说法正确的有哪些?','适合多个相同程序代码的线程去处理同一个资源的情况','适合多个相同程序代码的线程去处理同一个资源的情况','可以避免由于Java的单继承带来的局限性','编写简单,可以不通过Thread类直接创建线程','ABC',1,9,12,'2019-10-30 11:04:11'),(288,'对于线程的生命周期,下面四种说法正确的有哪些?','调用了线程的start()方法,该线程就进入运行状态 (就绪,还要获得CPU使用权)','线程的run()方法运行结束或被未catch的InterruptedException等异常终结,那么该线程进入死亡状态','线程进入死亡状态,但是该线程对象仍然是一个Thread对象,在没有被垃圾回收器回收之前仍可以像引用其它对象一样引用它','线程进入死亡状态后,调用它的start()方法仍然可以重新启动','BC',1,9,12,'2019-10-30 11:04:11'),(289,'对于死锁的描述,下面四种说法正确有哪些?','当两个线程互相等待对方释放同步锁时会发生死锁','Java虚拟机没有检测和处理死锁的措施 ','一旦出现死锁,程序会发生异常','处于死锁状态的线程处于阻塞状态,无法继续运行','ABD',1,9,12,'2019-10-30 11:04:11'),(290,'下面四个选项中,哪些是线程进入阻塞状态的原因?','线程试图获取某个对象的同步锁,而该锁被其它线程持有','线程调用了另一个线程的join()方法',' 当线程调用了一个阻塞式的IO方法','线程调用了setDaemon(boolean b)方法','ABC',1,9,12,'2019-10-30 11:04:11'),(291,'下面四个选项中,对线程同步的目的描述正确的有哪些?','锁定资源,使同一时刻只有一个线程去访问它,防止多个线程操作同一个资源引发错误','提高线程的执行效率 ','让线程独占一个资源','让多个线程同时使用一个资源','AB',1,9,12,'2019-10-30 11:04:11'),(292,'关于foreach循环的特点,以下说法哪些是正确的?','foreach循环的语法格式为:for(容器中元素类型 临时变量 :容器变量)。','foreach循环在遍历集合时,无需获得容器的长度','foreach循环在遍历集合时,无需循环条件,也无需迭代语句','foreach循环在遍历集合时非常繁琐','BCD',1,9,12,'2019-10-30 11:04:11'),(293,'下列哪些说法是正确的?','LinkedList集合在增删元素时效率较高 ','ArrayList集合在查询元素时效率较高','HashMap不允许出现一对null键null值','HashSet集合中元素可重复并且无序','AB',1,9,12,'2019-10-30 11:04:11'),(294,'以下哪些方法是LinkedList集合中定义的?','getLast()  ','getFirst()  ','remove (int index)   ','next()','ABC',1,9,12,'2019-10-30 11:04:11'),(295,'下面选项中,哪些是标准输入输出流?','System. In ','System. Out ','InputStream ','OutputStream','AB',1,9,12,'2019-10-30 11:04:11'),(296,'下面哪几种是jquery中表单的对象属性？',':checked ',': enabled',':hidden',':selected','ABD',1,3,15,'2019-10-30 11:06:06'),(297,'下面哪几个不是属于jquery的事件处理?','bind(type)','click() ','change()','one(type) ','BC',1,3,15,'2019-10-30 11:06:06'),(298,'下面哪几种是属于jquery文档处理的？','包裹','替换',' 删除','内部和外部插入 ','ABCD',1,3,15,'2019-10-30 11:06:06'),(299,'在DOM对象模型中，下列选项中的（）对象位于DOM对象模型的第二层。','history','document','button','text ','AB',1,3,15,'2019-10-30 11:06:06'),(300,'在Javascript中，对于浏览器对象的层次关系理解正确的是','window对象是所有页面内容的根对象','document对象包含location对象和history对象','location对象包含history','document对象包含form对象','AD',1,3,15,'2019-10-30 11:06:06'),(301,'下列选项中，（）段HTML代码所表示的“返回”链接能够正确实现IE工具栏中“后退”按钮的功能。 ','&lt;a href=”javascript:history.go(-1)”&gt;返回&lt;/a&gt; ','&lt;a href=”javascript:location.back()”&gt;返回&lt;/a&gt;','&lt;a href=”javascript: location go(-1)”&gt;返回&lt;/a&gt; ','&lt;a href=”javascript:history.back()”&gt;返回&lt;/a&gt; ','AD',1,3,15,'2019-10-30 11:06:06'),(302,'在HTML页面中，定义了如下所示的Javascript函数，则正确调用该函数的HTML代码是function compute(op){ alert(op); } ','&lt;input name=”a” type=”button” onclick=”compute(this.value)” value=”+”&gt;','&lt;input name=”b” type=”button” onclick=”compute(„-„)” value=”-”&gt;','&lt;input name=”c” type=”button” onclick=”compute(“*”)” value=”*”&gt;','&lt;input name=”d” type=”button” onclick=”compute(/ )” value=”/”&gt;','AB',1,3,15,'2019-10-30 11:06:06'),(303,'关于bind( )方法与unbind( )方法说法正确的是','bind( )方法可用来移除单个或多个事件','unbind( )方法可以移除所有的或被选的事件处理程序','使用bind( )方法可绑定单个或多个事件','unbind( )方法是与bind( )方法对应的方法','BCD',1,3,15,'2019-10-30 11:06:06'),(304,'在jQuery中，通过jQuery对象.css( )可实现样式控制，以下说法正确的是','css( )方法会去除原有样式而设置新样式','正确语法：css(“属性”,”值”)','css( )方法不会去除原有样式','正确语法：css(“属性”)','AB',1,3,15,'2019-10-30 11:06:06'),(305,'在Jquery中，下列关于DOM操作的说法错误的是','$(A).append(B)表示将A追加到B中','$(A).appendTo(B)表示把A追加到B中','$(A).after(B)表示将A插入到B以后','$(A).insertAfter(B)表示将A插入到B以后','AC',1,3,15,'2019-10-30 11:06:06'),(306,'以下()选项能够正确地得到这个标签:&lt;input id=&quot;btnGo&quot;type=”buttom” value=”点击”class=”btn”&gt;','$(“#btnGo”)','$(“.btnGo”)','$(“.btn”)','$(“input[type=’button’]”)','ACD',1,3,15,'2019-10-30 11:06:06'),(307,'在jQuery中，返回元素内容宽高下列描述正确的是：1,Width()--width   \n\n2,innerwidth-- width + padding  \n\n3,outerwidth---width + padding + border  \n\n4,outerwidth(true)---width + padding + border + margin','width()方法设置或返回元素的宽度（不包括内边距、边框或外边距）','height()方法设置或返回元素的高度（包括内边距、边框或外边距）','innerwidth() 方法设置或返回元素的宽度（包括内边距）','innerheight() 方法设置或返回元素的高度（不包括内边距、边框或外边距）','AC',1,3,15,'2019-10-30 11:06:06'),(308,'jQuery中遍历节点的方法，错误的是','next() 取得匹配元素后面紧邻的同辈元素','prev() 取得匹配元素前面紧邻的同辈元素取得匹配元素的所有同辈元素','siblings() 取得匹配元素前的所有同辈元素','closest() 取得元素紧邻的后一个元素匹配\n\nclosest(‘div’) 方法获得匹配选择器的第\n\n一个祖先元素,从当前元素开始沿DOM树向上','CD',1,3,15,'2019-10-30 11:06:06'),(309,'以下关于Array数组对象的说法不正确的是','对数组里数据的排序可以用sort函数，如果排序效果非预期，可以给sort函数加\n一个排序函数的参数','reverse用于对数组数据的倒序排列','向数组的最后位置加一个新元素，可以用pop方法','unshift方法用于向数组删除第一个元素','CD',1,3,15,'2019-10-30 11:06:06'),(310,'点击页面的按钮，使之打开一个新窗口，加载一个网页，以下JavaScript代码中可行\n的是','&lt;input type=&quot;button&quot; value=&quot;new&quot; \nonclick=&quot;open(\'new.html\', \'_blank\') &quot;/&gt;','&lt;input type=&quot;button&quot; value=&quot;new&quot; \nonclick=&quot;window.location=\'new.html\';&quot;/&gt;','&lt;input type=&quot;button&quot; value=&quot;new&quot; \nonclick=&quot; location.assign(\'new.html\');&quot;/&gt;','&lt;form target=&quot;_blank&quot; action=&quot;new.html&quot;&gt; \n&lt;input type=&quot;submit&quot; value=&quot;new&quot;/&gt; &lt;/form&gt;','AD',1,3,15,'2019-10-30 11:06:06'),(311,'使用JavaScript向网页中输出&lt;h1&gt;hello&lt;/h1&gt;，以下代码中可行的是','&lt;script type=&quot;text/javascript&quot;&gt; \ndocument.write(&lt;h1&gt;hello&lt;/h1&gt;); &lt;/script&gt; ','&lt;script type=&quot;text/javascript&quot;&gt; \ndocument.write(&quot;&lt;h1&gt;hello&lt;/h1&gt;&quot;); &lt;/script&gt;','&lt;script type=&quot;text/javascript&quot;&gt; \n&lt;h1&gt;hello&lt;/h1&gt; &lt;/script&gt;',' &lt;h1&gt; &lt;script type=&quot;text/javascript&quot;&gt;   document.write(&quot;hello&quot;); &lt;/script&gt; &lt;/h1&gt; ','BD',1,3,15,'2019-10-30 11:06:06'),(312,'关于JavaScript里的xml处理，以下说明正确的是','Xml是种可扩展标记语言，格式更规范，是作为未来html的替代','Xml一般用于传输和存储数据，是对html的补充，两者的目的不同','在JavaScript里解析和处理xml数据时，因为浏览器的不同，其做法也不同','在IE浏览器里处理xml，首先需要创建ActiveXObject对象','BCD',1,3,15,'2019-10-30 11:06:06'),(313,'JavaScript数据类型包括原始类型和引用类型，以下属于原始类型的有?','Number（数值）Boolean（布尔）','String（字符串）','Object（对象）','Null（空） Undefined（未定义）','ABD',1,3,15,'2019-10-30 11:06:06'),(314,'面向对象的三大特征','封装','属性','继承','多态','ACD',1,3,15,'2019-10-30 11:06:06'),(315,'元素的type属性的取值可以是','image','checkbox','select','button','ABD',1,3,15,'2019-10-30 11:06:06');
/*!40000 ALTER TABLE `em_selection` ENABLE KEYS */;

#
# Structure for table "em_single"
#

DROP TABLE IF EXISTS `em_single`;
CREATE TABLE `em_single` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id编号',
  `single_name` varchar(255) NOT NULL COMMENT '题目',
  `A` varchar(255) NOT NULL COMMENT 'A选项',
  `B` varchar(255) NOT NULL COMMENT 'B选项',
  `C` varchar(255) NOT NULL COMMENT 'C选项',
  `D` varchar(255) NOT NULL COMMENT 'D选项',
  `right_key` varchar(255) NOT NULL COMMENT '正确答案',
  `status` tinyint(4) NOT NULL DEFAULT '1' COMMENT '状态:1是,0否',
  `major_id` int(10) NOT NULL COMMENT '专业id',
  `subject_id` int(10) NOT NULL COMMENT '科目id',
  `add_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '添加时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=315 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='单选题';

#
# Data for table "em_single"
#

/*!40000 ALTER TABLE `em_single` DISABLE KEYS */;
INSERT INTO `em_single` VALUES (1,'下列不属于ORACLE的逻辑结构的是','区','段',' 数据文件','表空间','C',1,2,3,'2019-10-30 11:00:45'),(2,'下面哪个用户不是ORACLE缺省安装后就存在的用户','SYSDBA','SYSTEM','SCOTT','SYS','A',1,2,3,'2019-10-30 11:00:45'),(3,'在Oracle中，你以SYSDBA登录，CUSTOMER表位于Mary用户方案中，下面哪条语句为数据库中的所有用户创建CUSTOMER表的同义词','CREATE PUBLIC SYNONYM cust ON mary.customer;','CREATE PUBLIC SYNONYM cust FOR mary.customer;','CREATE SYNONYM cust ON mary.customer FOR PUBLIC;','不能创建CUSTOMER的公用同义词','B',1,2,3,'2019-10-30 11:00:45'),(4,'在Oracle中，当FETCH语句从游标获得数据时，下面叙述正确的是','游标打开','游标关闭','当前记录的数据加载到变量中','创建变量保存当前记录的数据','C',1,2,3,'2019-10-30 11:00:45'),(5,'在Oracle中，以下不属于集合操作符的是','UNION','SUM','MINUS','INTERSECT','B',1,2,3,'2019-10-30 11:00:45'),(6,'在Oracle中，在以下情形建立位图索引可以获得较好的性能','在列值唯一的列上建立','在列值相差很小的列上建立','在列值频繁重复的列上建立','在用于保存位图的列上建立','C',1,2,3,'2019-10-30 11:00:45'),(7,'在Oracle中，关于PL/SQL下列描述正确的是','PL/SQL代表Power Language/SQL','PL/SQL不支持面向对象编程','PL/SQL块包括声明部分、可执行部分和异常处理部分','PL/SQL提供的四种内置数据类型是character,integer,float,boolean','C',1,2,3,'2019-10-30 11:00:45'),(8,'在Oracle中，关于触发器的描述正确的是','触发器可以删除，但不能禁用','触发器只能用于表','触发器可以分为行级和语句级两种','触发器是一个对关联表发出insert、update、delete或select … for update语句时触发的存储过程','D',1,2,3,'2019-10-30 11:00:45'),(9,'在Oracle中，不属于游标属性的是','%NOTFOUND','%FOUND','%ISCLOSE','%ISOPEN','C',1,2,3,'2019-10-30 11:00:45'),(10,'在Oracle中，用下列语句定义了一个过程：\nCREATE OR REPLACE PROCEDURE test(a IN VARCHAR2,\nb IN OUT NUMBER,\nc OUT VARCHAR2) IS\nBEGIN\n……\nEND;\n/\n假定使用的变量都已定义，下面对过程test的调用语法正确的是','test(‘String1’,50,v_str2)','test(v_str1,v_num1,’String2’)','test(‘String1’,v_num1,v_str2)','test(v_str1,20,v_str2)','C',1,2,3,'2019-10-30 11:00:45'),(11,'在Oracle中，关于程序包的描述不正确的是','程序包是一种数据库对象，它是对相关PL/SQL类型、子程序、游标、异常、变量和常量的封装','程序包中私有对象是通过PRIVATE关键字来标识的  程序包体可以包括没有在程序包说明中列出的对象，这些是私有对象，程序包的用户不能使用','PL/SQL允许两个或多个打包的子程序具有同一名称，只要子程序接受的参数数据类型不同','程序包具有模块化、信息隐藏、新增功能及性能更佳等优点','B',1,2,3,'2019-10-30 11:00:45'),(12,'在Oracle中，用户（）拥有所有内置的程序包','SYS','SYSTEM','PUBLIC','DEFAULT','A',1,2,3,'2019-10-30 11:00:45'),(13,'ORACLE中，执行语句：SELECT address1||’,\'||address2||’,\'||address2   ”Address” FROM employ；将会返回（）列','0','1','2','3','B',1,2,3,'2019-10-30 11:00:45'),(14,'在Oracle中，INSTEAD OF触发器主要用于','表','表和视图','基于单个表的视图','基于多个表的视图','D',1,2,3,'2019-10-30 11:00:45'),(15,'Oracle数据库中，下面（）可以作为有效的列名','Column','123_NUM','NUM_#123','#NUM123','C',1,2,3,'2019-10-30 11:00:45'),(16,'Oracle数据库中，通过（）访问能够以最快的方式访问表中的一行。','主键','Rowid','唯一索引','整表扫描','B',1,2,3,'2019-10-30 11:00:45'),(17,'Oralce数据库中，以下（）函数可以针对任意数据类型进行操作。','TO_CHAR','LOWER','MAX','CEIL','A',1,2,3,'2019-10-30 11:00:45'),(18,'以下语句中可以正确查看服务器时间的sql语句是','select sysdate from dual;','select systemdate from dual;','select current_date from dual;','以上说法均不正确。','A',1,2,3,'2019-10-30 11:00:45'),(19,'有一产品表(编号，名称，价格，数量，所属分类)，下列语法不正确的是','select * from 产品表 where 价格&gt;1000','select * from 产品表 where 编号，名称','select所属分类,价格*数量 from 产品表 where 价格&gt;1000','select所属分类, 价格*数量，名称 from 产品表','B',1,2,3,'2019-10-30 11:00:45'),(20,'下面的语句是不可以显示（）Select ename,sal,deptno from emp;','雇员名字','雇员职位类型','工资','部门编号','B',1,2,3,'2019-10-30 11:00:45'),(21,'在查询语句中用来去重的关键字是','distinct','distin','union','union all','A',1,2,3,'2019-10-30 11:00:45'),(22,'下列那组部件不是Scratch中提供的','动作部件','控制部件','外观部件 ','数学部件','D',1,2,6,'2019-10-30 11:01:11'),(23,'在Scratch中,舞台是创作和演示程序的场地,其坐标原点位于舞台的','左上角 ','左下角',' 右下角','中心','D',1,2,6,'2019-10-30 11:01:11'),(24,'在Scratch中,( )部件用来为角色设置不同的外观效果','动作 ','外观',' 控制',' 画笔','C',1,2,6,'2019-10-30 11:01:11'),(25,'舞台是创作、演示程序的场地。舞台宽( )个单位,高360个单位。舞台的中间位置为坐','480','240','500','400','A',1,2,6,'2019-10-30 11:01:11'),(26,'Scratch以角色为编程对象,以部件——积件式编程语言为编程工具,共8种部件,其中( ),控制人物运动','动作',' 控制 ','外观 ','数字和逻辑运算','B',1,2,6,'2019-10-30 11:01:11'),(27,'开始运行Scratch程序，应采用下列哪一条指令？','当红旗被点击时','当绿旗被点击时','当黄旗被点击时','当蓝旗被点击时','B',1,2,6,'2019-10-30 11:01:11'),(28,'下列哪个菜单可以设置Scratch使用界面的语言？','文件菜单','编辑菜单','地球仪菜单','问号菜单','C',1,2,6,'2019-10-30 11:01:11'),(29,'Scratch的文件在保存时，一般建议扩展名为下列哪一项？','TXT','EXE','HTML','SB2','D',1,2,6,'2019-10-30 11:01:11'),(30,'下列哪一种方式不是Scratch角色造型的设计方式？','对着麦克风录入声音 ','从角色库中选取角色','在造型区绘制新角色','从本地文件中上传角色','A',1,2,6,'2019-10-30 11:01:11'),(31,'想使用绘制好的图画作为Scratch的背景，应选择下列哪一项操作？','从背景库中选择背景','在造型区绘制新背景','从本地文件中上传背景','拍摄照片当作背景','C',1,2,6,'2019-10-30 11:01:11'),(32,'要使Scratch中的角色切换造型，可选用下列哪一条指令？','将角色的大小增加10',' 当作为克隆体启动时','碰到边缘就反弹','下一个造型','D',1,2,6,'2019-10-30 11:01:11'),(33,'Scratch中角色的旋转模式有几种？','1','2','3','4','C',1,2,6,'2019-10-30 11:01:11'),(34,'Scratch中的背景设计中，没有下列哪种类别的命令？','运动','外观','声音','画笔','A',1,2,6,'2019-10-30 11:01:11'),(35,'要使Scratch中的角色在舞台上绘图，应选用下列哪一条命令？','清空并抬笔','落笔并移动10步','将画笔颜色设定为0','将画笔粗细增加1','B',1,2,6,'2019-10-30 11:01:11'),(36,'下列哪一条指令可以用于接收键盘输入？','询问……并等待','说……2秒','连接……和……','在……之前一致等待','A',1,2,6,'2019-10-30 11:01:11'),(37,'在程序框图设计中下列哪种语句不是基本语句？','顺序语句','条件语句','循环语句','输入输出语句','C',1,2,6,'2019-10-30 11:01:11'),(38,'在Scratch的声音设计中，“弹奏音符60”对应中央C(哆)，下列哪一条语句是发出中音G(索)？','弹奏音符62','弹奏音符64','弹奏音符65','弹奏音符67','D',1,2,6,'2019-10-30 11:01:11'),(39,'控制画笔移动时，下列哪一条语句是向左移动？','面向90°方向','面向-90°方向','面向0°方向','面向180°方向','B',1,2,6,'2019-10-30 11:01:11'),(40,'想实现背景切换时，可采用下列哪一条指令？','将背景切换为……','清除所有图形特效','当背景切换到……','当收到消息1','A',1,2,6,'2019-10-30 11:01:11'),(41,'想让小猫一直在舞台上移动，应采用下列哪种程序结构?','重复执行100次','重复执行','如果……那么','如果……那么……否则','B',1,2,6,'2019-10-30 11:01:11'),(42,'下列类的定义中正确的是（    ）','class a{int x=0;int y=1;} ','class b{intx=0;int y=1;};','class c{int x;inty;}','class d{int x;inty;};','D',1,3,2,'2019-10-30 11:01:26'),(43,'在类定义的外部，可以被访问的成员有（    ）','所有类成员  ','private或protected的类成员','public的类成员 ','public或private的类成员','C',1,3,2,'2019-10-30 11:01:26'),(44,'下列关于类和对象的说法中，正确的是（    ）','编译器为每个类和类的对象分配内存  ','类的对象具有成员函数的副本','类的成员函数由类来调用                 ','编译器为每个对象的数据成员分配内存','D',1,3,2,'2019-10-30 11:01:26'),(45,'关于this指针的说法正确的是（   ）','this指针必须显式说明 ','定义一个类后，this指针就指向该类','成员函数拥有this指针        ','静态成员函数拥有this指针','C',1,3,2,'2019-10-30 11:01:26'),(46,'在面向对象方法中，不属于“对象”基本特点的是(  )','一致性','分类性','多态性','标识唯一性','A',1,3,2,'2019-10-30 11:01:26'),(47,'对类的构造函数和析构函数描述正确的是','构造函数可以重载，析构函数不能重载','构造函数不能重载，析构函数可以重载','构造函数可以重载，析构函数也可以重载','构造函数不能重载，析构函数也不能重裁','A',1,3,2,'2019-10-30 11:01:26'),(48,'C++系统预定义了4个用于标准数据流的对象，下列选项中不属于此类对象的是','cout','cin','cerr','cset','D',1,3,2,'2019-10-30 11:01:26'),(49,'下列情况中，不会调用拷贝构造函数的是','用一个对象去初始化同一类的另一个新对象时','将类的一个对象赋值给该类的另一个对象时','函数的形参是类的对象，调用函数进行形参和实参结合时','函数的返回值是类的对象，函数执行返回调用时','B',1,3,2,'2019-10-30 11:01:26'),(50,'C++语言对C语言做了很多改进，C++语言相对于C语言的最根本的变化是( )','增加了一些新的运算符','允许函数重载，并允许设置默认参数','规定函数说明符必须用原型','引进了类和对象的概念','D',1,3,2,'2019-10-30 11:01:26'),(51,'下列( )是C++语言的有效标识符','Nol','N0.1','12345','int','A',1,3,2,'2019-10-30 11:01:26'),(52,'没有定义int x;float Y;，则10+x+y值的数据类型是( )','int','double','float','不确定','C',1,3,2,'2019-10-30 11:01:26'),(53,'下面有关for循环的正确描述是( )','for循环只能用于循环次数已经确定的情况','for循环是先执行循环体语句，后判断表达式','在for循环中，不能用break语句跳出循环体','在for循环的循环体语句中，可以包含多条语句，但必须用花括号括起来','D',1,3,2,'2019-10-30 11:01:26'),(54,'假定int类型变量占用两个字节，其有定义int x[10]={0，2，4};，则数组x在内存中所占字节数是( )','3','6','10','20','D',1,3,2,'2019-10-30 11:01:26'),(55,'下面关于数组的初始化正确的是( )','char str[]={’a’，’b’，’C’}','char str[2]={’a’，’b’，’c’}','char str[2][3]={{’a’，’b’}，{’C’，’d’}，{’e’，’f’}}','char str()={～a，～b，～C}','A',1,3,2,'2019-10-30 11:01:26'),(56,'下列关于栈叙述正确的是','栈顶元素最先能被删除','栈顶元素最后才能被删除','栈底元素永远不能被删除','栈底元素最先被删除','A',1,3,2,'2019-10-30 11:01:26'),(57,'下列叙述中正确的是','在栈中，栈中元素随栈底指针与栈顶指针的变化而动态变化','在栈中，栈顶指针不变，栈中元素随栈底指针的变化而动态变化','在栈中，栈底指针不变，栈中元素随栈顶指针的变化而动态变化','以上说法都不正确','C',1,3,2,'2019-10-30 11:01:26'),(58,'某二叉树共有7个结点，其中叶子结点只有l个，则该二叉树的深度为(假设根结点在第1层)( )','3','4','6','7','D',1,3,2,'2019-10-30 11:01:26'),(59,'结构化程序所要求的基本结构不包括','顺序结构','GOT0跳转','选择(分支)结构','重复(循环)结构','B',1,3,2,'2019-10-30 11:01:26'),(60,'要求打开文件&quot;d:\\file.dat&quot;，可写入数据，正确的语句是','ifstream infile(&quot;d:\\file.dat&quot;,  ios::in)；','ifstream infile(&quot;d:\\file.dat&quot;,  ios::in)；','ofstream infile(&quot;d:\\file.dat&quot;,  ios::out)； ','fstream  infile(&quot;d:\\\\file.dat&quot;, ios::in|ios::out)；','B',1,3,2,'2019-10-30 11:01:26'),(61,'关于类和对象不正确的说法是','类是一种类型，它封装了数据和操作','对象是类的实例','一个类的对象只有一个','一个对象必属于某个类','C',1,3,2,'2019-10-30 11:01:26'),(62,'下列字符串中可以用作C++标识符的是','_123','foo~bar','case','3var','A',1,3,2,'2019-10-30 11:01:26'),(63,'字符串&quot;student&quot;占用几个字节的空间','7','6','5','8','D',1,3,2,'2019-10-30 11:01:26'),(64,'在int a[][3]={{1},{3,2},{4,5,6},{0}}中，a[2][2]的值是','3','2','6','4','C',1,3,2,'2019-10-30 11:01:26'),(65,'在C++语言中，对函数参数默认值描述正确的是','函数参数的默认值只能设定一个','一个函数的参数若有多个，则参数默认值的设定可以不连续','函数参数必须设定默认值','在设定了参数的默认值后，该参数后面定义的所有参数都必须设定默认值','D',1,3,2,'2019-10-30 11:01:26'),(66,'声明类Test的拷贝构造函数的正确形式是','int Test','void Test','Test(void)','Test(Test &amp;)','D',1,3,2,'2019-10-30 11:01:26'),(67,'下列关于构造函数的描述中，错误的是','构造函数可以设置默认参数','构造函数在声明对象时自动执行','构造函数可以对静态数据成员进行初始化','构造函数可以重载','C',1,3,2,'2019-10-30 11:01:26'),(68,'循环语句whlie(int i=0 )i--;的循环次数是','0','1','5','无限','A',1,3,2,'2019-10-30 11:01:26'),(69,'一个函数无返回值时，应选择的说明符是','static','extern','void','无说明符','C',1,3,2,'2019-10-30 11:01:26'),(70,'若数组名作实参而指针变量作形参，函数调用时实参传给形参的是','数组的长度','数组第一个元素的值','数组所有元素的值','数组第一个元素的地址','D',1,3,2,'2019-10-30 11:01:26'),(71,'能够释放对象所占资源的是','析构函数','数据成员','构造函数','静态成员函数','A',1,3,2,'2019-10-30 11:01:26'),(72,'下列关于C++函数的叙述中，正确的是','每个函数至少要具有一个参数','每个函数都必须返回一个值','函数在被调用之前必须先声明','函数不能自己调用自己','C',1,3,2,'2019-10-30 11:01:26'),(73,'下列关于类和对象的叙述中，错误的是','一个类只能有一个对象','对象是类的具体实例','类是对某一类对象的抽象','类和对象的关系是一种数据类型与变量的关系','A',1,3,2,'2019-10-30 11:01:26'),(74,'将两个字符串连接起来组成一个字符串时，应选用的函数是','strlen()','strcpy()','strcat()','strcmp()','C',1,3,2,'2019-10-30 11:01:26'),(75,'在HTML页面中，我们通常在（）标签内书写显示在页面中的内容。','&lt;head&gt;','&lt;body&gt;','&lt;style&gt;','&lt;script&gt;','B',1,1,1,'2019-10-30 11:02:06'),(76,'在html代码中，&lt;!DOCTYPE html&gt;元素的作用是（）?','该元素用来声明命名空间。','该元素用来定义文档类型。','该元素用来向搜索引擎声明关键字。','该元素用来声明网页标题','B',1,1,1,'2019-10-30 11:02:06'),(77,'在网页浮动布局中，如果对浮动后面的元素产生了影响，那么下列操作可以清除浮动影响的是（）？','浮动元素结尾处书写一个空元素加入clear:botn；属性','给后面的元素加入float:none;','设定受影响元素的边框','浮动元素结尾处书写一个空元素并加入float：right属性','A',1,1,1,'2019-10-30 11:02:06'),(78,'在超链接标签&lt;a&gt;标签中，（）不是超链接标签的target属性','_self','_top','_blank','_int','D',1,1,1,'2019-10-30 11:02:06'),(79,'下面几个标签中，哪一个是可以实现换行效果的标签（）','&lt;hr&gt;','&lt;div&gt;','&lt;font&gt;','&lt;br&gt;','D',1,1,1,'2019-10-30 11:02:06'),(80,'在页面中内嵌一个css效果时，下面哪种方法不能实现效果变化（）','引入css样式文件','在页面head处添加style标签并将效果写入style标签内','对着网页大喊样式变换','在元素内部加入style属性','C',1,1,1,'2019-10-30 11:02:06'),(81,'下列元素中，为行内元素的是','div','span','p','h2','B',1,1,1,'2019-10-30 11:02:06'),(82,'HTML指的是什么语言？','超文本标记语言（Hyper Text Markup Language）','面向对象编程语言（Object-Oriented Language）','超链接和文本标记语言（Hyperlinks and Text Markup Language）','家庭工具标记语言（Home Tool Markup Language）','A',1,1,1,'2019-10-30 11:02:06'),(83,'下列属性能够实现层的隐藏的是?','display:fals','display:hidden','display:” ”','display:none','D',1,1,1,'2019-10-30 11:02:06'),(84,'需要在 html 页面上引用脚本文件xinhua.js，下列语句中，正确的是','&lt;script   language=&quot;javascript&quot; href=&quot;xinhua.js&quot; type=&quot;text/javascript&quot; /&gt;','&lt;script language=&quot;javascript&quot; src=&quot;xinhua.js&quot; type=&quot;text/javascript&quot; /&gt;','&lt;script language=&quot;javascript&quot; href=&quot;xinhua.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;','&lt;script language=&quot;javascript&quot; src=&quot;xinhua.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;','D',1,1,1,'2019-10-30 11:02:06'),(85,'下列HTML代码中，能在新窗口中打开百度首页的是','&lt;a src=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;','&lt;a src=&quot; http://www.baidu.com &quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt;','&lt;a href=&quot; http://www.baidu.com&quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt;','&lt;a href=&quot; http://www.baidu.com &quot;&gt;百度&lt;/a&gt;','C',1,1,1,'2019-10-30 11:02:06'),(86,'阅读以下代码，此代码在网页中显示的效果是？\n\n&lt;div style=&quot;float:left;&quot;&gt;DIV&lt;/div&gt;\n&lt;p style=&quot;color:red;&quot;&gt;正文&lt;/p&gt;','&lt;div&gt; 中的文本和 &lt;p&gt; 中的文本分两行显示，且文本红色','&lt;div&gt; 中的文本和 &lt;p&gt; 中的文本在一行上显示，且文本绿色','&lt;div&gt; 中的文本和 &lt;p&gt; 中的文本分两行显示，且文本绿色','&lt;div&gt; 中的文本和 &lt;p&gt; 中的文本在一行上显示，且文本红色','D',1,1,1,'2019-10-30 11:02:06'),(87,'下列引用外部样式表 style1.css 的语句中，正确的是','&lt;link src=&quot;style1.css&quot; type=&quot;text/css&quot;  /&gt;','&lt;link src=&quot;style1.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; /&gt;','&lt;link href=&quot;style1.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; /&gt;','&lt;link href=&quot;style1.css&quot; type=&quot;css&quot;  /&gt;','C',1,1,1,'2019-10-30 11:02:06'),(88,'Display属性值的常用值不包括哪一个','inline ','hidden','block','none','B',1,1,1,'2019-10-30 11:02:06'),(89,'下列说法错误的是','ID选择器的优先级高于class选择器','ID选择器应用具有唯一性','Class选择器可以重复应用于多个网页元素','伪类选择器只能应用于超链接状态','D',1,1,1,'2019-10-30 11:02:06'),(90,'下列关于div与span的说法 ，正确的是','span标签在浏览器中占满一行','span标签只能用于文本内容','div标签显示时独占一行','多个div在页面内会同行显示','C',1,1,1,'2019-10-30 11:02:06'),(91,'下面选项中，哪个使用了行内样式','&lt;p class=&quot;style&quot;&gt;','&lt;p style=&quot;color:red;&quot;&gt;','&lt;p style=red&gt;','&lt;p id=&quot;content&quot;&gt;','B',1,1,1,'2019-10-30 11:02:06'),(92,'创建选项下拉菜单时，使用的标签是','select和option','input和lable','input','input和span','A',1,1,1,'2019-10-30 11:02:06'),(93,'下列有关按钮的说法错误的是','可以用图片作为提交按钮','可以用图片作为重置按钮','可以控制提交按钮的显示文字','可以控制重置按钮的显示文字','B',1,1,1,'2019-10-30 11:02:06'),(94,'下列不属于ORACLE的逻辑结构的是','区','段',' 数据文件','表空间','C',1,1,4,'2019-10-30 11:02:21'),(95,'下面哪个用户不是ORACLE缺省安装后就存在的用户','SYSDBA','SYSTEM','SCOTT','SYS','A',1,1,4,'2019-10-30 11:02:21'),(96,'在Oracle中，你以SYSDBA登录，CUSTOMER表位于Mary用户方案中，下面哪条语句为数据库中的所有用户创建CUSTOMER表的同义词','CREATE PUBLIC SYNONYM cust ON mary.customer;','CREATE PUBLIC SYNONYM cust FOR mary.customer;','CREATE SYNONYM cust ON mary.customer FOR PUBLIC;','不能创建CUSTOMER的公用同义词','B',1,1,4,'2019-10-30 11:02:21'),(97,'在Oracle中，当FETCH语句从游标获得数据时，下面叙述正确的是','游标打开','游标关闭','当前记录的数据加载到变量中','创建变量保存当前记录的数据','C',1,1,4,'2019-10-30 11:02:21'),(98,'在Oracle中，以下不属于集合操作符的是','UNION','SUM','MINUS','INTERSECT','B',1,1,4,'2019-10-30 11:02:21'),(99,'在Oracle中，在以下情形建立位图索引可以获得较好的性能','在列值唯一的列上建立','在列值相差很小的列上建立','在列值频繁重复的列上建立','在用于保存位图的列上建立','C',1,1,4,'2019-10-30 11:02:21'),(100,'在Oracle中，关于PL/SQL下列描述正确的是','PL/SQL代表Power Language/SQL','PL/SQL不支持面向对象编程','PL/SQL块包括声明部分、可执行部分和异常处理部分','PL/SQL提供的四种内置数据类型是character,integer,float,boolean','C',1,1,4,'2019-10-30 11:02:21'),(101,'在Oracle中，关于触发器的描述正确的是','触发器可以删除，但不能禁用','触发器只能用于表','触发器可以分为行级和语句级两种','触发器是一个对关联表发出insert、update、delete或select … for update语句时触发的存储过程','D',1,1,4,'2019-10-30 11:02:21'),(102,'在Oracle中，不属于游标属性的是','%NOTFOUND','%FOUND','%ISCLOSE','%ISOPEN','C',1,1,4,'2019-10-30 11:02:21'),(103,'在Oracle中，用下列语句定义了一个过程：\nCREATE OR REPLACE PROCEDURE test(a IN VARCHAR2,\nb IN OUT NUMBER,\nc OUT VARCHAR2) IS\nBEGIN\n……\nEND;\n/\n假定使用的变量都已定义，下面对过程test的调用语法正确的是','test(‘String1’,50,v_str2)','test(v_str1,v_num1,’String2’)','test(‘String1’,v_num1,v_str2)','test(v_str1,20,v_str2)','C',1,1,4,'2019-10-30 11:02:21'),(104,'在Oracle中，关于程序包的描述不正确的是','程序包是一种数据库对象，它是对相关PL/SQL类型、子程序、游标、异常、变量和常量的封装','程序包中私有对象是通过PRIVATE关键字来标识的  程序包体可以包括没有在程序包说明中列出的对象，这些是私有对象，程序包的用户不能使用','PL/SQL允许两个或多个打包的子程序具有同一名称，只要子程序接受的参数数据类型不同','程序包具有模块化、信息隐藏、新增功能及性能更佳等优点','B',1,1,4,'2019-10-30 11:02:21'),(105,'在Oracle中，用户（）拥有所有内置的程序包','SYS','SYSTEM','PUBLIC','DEFAULT','A',1,1,4,'2019-10-30 11:02:21'),(106,'ORACLE中，执行语句：SELECT address1||’,\'||address2||’,\'||address2   ”Address” FROM employ；将会返回（）列','0','1','2','3','B',1,1,4,'2019-10-30 11:02:21'),(107,'在Oracle中，INSTEAD OF触发器主要用于','表','表和视图','基于单个表的视图','基于多个表的视图','D',1,1,4,'2019-10-30 11:02:21'),(108,'Oracle数据库中，下面（）可以作为有效的列名','Column','123_NUM','NUM_#123','#NUM123','C',1,1,4,'2019-10-30 11:02:21'),(109,'Oracle数据库中，通过（）访问能够以最快的方式访问表中的一行。','主键','Rowid','唯一索引','整表扫描','B',1,1,4,'2019-10-30 11:02:21'),(110,'Oralce数据库中，以下（）函数可以针对任意数据类型进行操作。','TO_CHAR','LOWER','MAX','CEIL','A',1,1,4,'2019-10-30 11:02:21'),(111,'以下语句中可以正确查看服务器时间的sql语句是','select sysdate from dual;','select systemdate from dual;','select current_date from dual;','以上说法均不正确。','A',1,1,4,'2019-10-30 11:02:21'),(112,'有一产品表(编号，名称，价格，数量，所属分类)，下列语法不正确的是','select * from 产品表 where 价格&gt;1000','select * from 产品表 where 编号，名称','select所属分类,价格*数量 from 产品表 where 价格&gt;1000','select所属分类, 价格*数量，名称 from 产品表','B',1,1,4,'2019-10-30 11:02:21'),(113,'下面的语句是不可以显示（）Select ename,sal,deptno from emp;','雇员名字','雇员职位类型','工资','部门编号','B',1,1,4,'2019-10-30 11:02:21'),(114,'在查询语句中用来去重的关键字是','distinct','distin','union','union all','A',1,1,4,'2019-10-30 11:02:21'),(115,'在Ubuntu Linux中，系统默认的（）用户对整个系统拥有完全的控制权','root','guest','administrator ','supervistor','A',1,4,5,'2019-10-30 11:02:23'),(116,'Linux的发展始于（    ）年，它是有（    ）的一名大学生开发的。(  )',' 1990、芬兰','1991、芬兰','1992、芬兰','1991、波兰 ','B',1,4,5,'2019-10-30 11:02:23'),(117,'Linux 中权限最大的账户是','admin','root','guest','super','B',1,4,5,'2019-10-30 11:02:23'),(118,'在通常情况下，登录Linux 桌面环境，需要（   ）','任意一个帐户','有效合法的账号密码','任意一个密码登录','本机IP地址','B',1,4,5,'2019-10-30 11:02:23'),(119,'下面哪个命令不是用来查看网络故障的？','ping','init','telnet','netstat','B',1,4,5,'2019-10-30 11:02:23'),(120,'etc/hosts文件中至少包含一行，它是（）','127.1.1.1localhost  ','127.0.0.1localhost','127.0.0.155hostname','202.38.126.12dns','B',1,4,5,'2019-10-30 11:02:23'),(121,'除非特别指定，cp假定要拷贝的文件在下面哪个目录下','用户目录','home目录','root目录','当前目录','D',1,4,5,'2019-10-30 11:02:23'),(122,'大部分主要的Linux系统文件是存放在下面的哪个目录之中的','/lib','/tmp','/bin','/root','C',1,4,5,'2019-10-30 11:02:23'),(123,' KDE是UNIX操作系统下','桌面环境','系统环境','操作环境','应用环境','A',1,4,5,'2019-10-30 11:02:23'),(124,'在以下的文件中，属于Apache主配置文件的是','／etc／httpd/httpD.conf','／etc／Apache2／Apache2.conf','／etc／Apache2／ports.conf','／etc／Apache2/httpD.conf','A',1,4,5,'2019-10-30 11:02:23'),(125,'对于文件扩展名为tar的源代码发布的软件安装包解压和解压缩，正确的tar命令参数是','tar Zxvf文件名','tar xvf文件名','tar zxvf文件名','tar jxvf文件名','B',1,4,5,'2019-10-30 11:02:23'),(126,'怎样显示当前目录','pwd','cd','who','ls','A',1,4,5,'2019-10-30 11:02:23'),(127,'下列那一个指令可以显示目前的路径','show','cd','pwd','more','C',1,4,5,'2019-10-30 11:02:23'),(128,'建立一个新文件可以使用的命令为','chmod','more','cp','touch（指令改变档案的时间记录。）','D',1,4,5,'2019-10-30 11:02:23'),(129,'m命令可删除文件或目录，其主要差别就是是否使用递归开关','-r或-R','-r或-A','-R或-a','-a或-A','A',1,4,5,'2019-10-30 11:02:23'),(130,'为了修改文件test的许可模式，使其文件属主具有读、写、和运行的权限，组和其它用户可以读和运行，可以采用（）方法。','chmod 755 test','chmod 700 test','chmod ux+rwx test','chmod g-w test','A',1,4,5,'2019-10-30 11:02:23'),(131,'我们可以修改默认的启动级别为（），使得系统重启后自动采用XWindow方式登录。','3','5','2','1','B',1,4,5,'2019-10-30 11:02:23'),(132,'用户可以在文件管理器中按鼠标右键选择“新建”来创建新的文件','只可创建文本格式文件（.TXT）','可创建除目录以外的多种格式文件','创建的文件中已含有默认模板信息','创建的只是相关格式的空文件','D',1,4,5,'2019-10-30 11:02:23'),(133,'下列那一个指令可以变更系统时间？','time','date','clock','settime','B',1,4,5,'2019-10-30 11:02:23'),(134,'下列那一个指令可以开设空目录','mk','Dir','Rmdir','mkdir','D',1,4,5,'2019-10-30 11:02:23'),(135,'下列哪个语句在Python中是非法的？','x = y = z =1 ','x = (y = z + 1)','x, y = y, x','x  +=  y','B',1,4,9,'2019-10-30 11:02:38'),(136,'关于Python内存管理，下列说法错误的是','变量不必事先声明 ','变量无须先创建和赋值而直接使用 ','变量无须指定类型','可以使用del释放资源','B',1,4,9,'2019-10-30 11:02:38'),(137,'下面哪个不是Python合法的标识符','int32 ','40XL','self   ','name','B',1,4,9,'2019-10-30 11:02:38'),(138,'下列哪种说法是错误的','除字典类型外，所有标准对象均可以用于布尔测试','空字符串的布尔值是False','空列表对象的布尔值是False','值为0的任何数字对象的布尔值是False','D',1,4,9,'2019-10-30 11:02:38'),(139,'Python不支持的数据类型有','char','int','float','list','A',1,4,9,'2019-10-30 11:02:38'),(140,'关于字符串下列说法错误的是','字符应该视为长度为1的字符串','字符串以\\0标志字符串的结束','既可以用单引号，也可以用双引号创建字符串 ','在三引号字符串中可以包含换行回车等特殊字符','B',1,4,9,'2019-10-30 11:02:38'),(141,'以下不能创建一个字典的语句是','dict1 = {}','dict2 = { 3 : 5 }','dict3 ={[1,2,3]: “uestc”}    ','dict4 = {(1,2,3): “uestc”}','C',1,4,9,'2019-10-30 11:02:38'),(142,'下列Python语句正确的是：','min = x if x&lt; y = y','max = x &gt; y ?x:y','if (x &gt;y)        print x      ','while True :pass','D',1,4,9,'2019-10-30 11:02:38'),(143,'下列哪种不是Python元组的定义方式?','（1）','(1, )','(1, 2)','(1, 2, (3, 4))','A',1,4,9,'2019-10-30 11:02:38'),(144,'Python脚本文件的扩展名为','.python','.py','.pt','.pg','B',1,4,9,'2019-10-30 11:02:38'),(145,'当需要在字符串中使用特殊字符时，python使用（   ）作为转义字符。','\\','/','#','%','A',1,4,9,'2019-10-30 11:02:38'),(146,'使用（  ）关键字来创建python自定义函数。','function','func','procedure','def','D',1,4,9,'2019-10-30 11:02:38'),(147,'Python定义私有变量的方法为（   ）。','使用__private 关键字','使用public关键字','使用__xxx__定义变量名','使用__xxx定义变量名','D',1,4,9,'2019-10-30 11:02:38'),(148,'(   )不是用于处理中文的字符编码。','gb2312','gbk','big5','ascii','D',1,4,9,'2019-10-30 11:02:38'),(149,'可以返回x的整数部分','math.ceil()','math.fabs()','math.pow(x,y)','math.trunc(x)','D',1,4,9,'2019-10-30 11:02:38'),(150,'（ ）函数是指直接或间接调用函数本身的函数','递归','闭包','lambda','匿名','A',1,4,9,'2019-10-30 11:02:38'),(151,'与x &gt; y and y &gt; z 语句等价的是','x &gt; y &gt; z','not x &lt; y or not y &lt; z','not x &lt; y or y &lt; z','x &gt; y or not y &lt; z','A',1,4,9,'2019-10-30 11:02:38'),(152,'for i in range(0,2):\n       print (i)\n上述程序的输出结果是：','0 1 2','1 2','0 1','1','C',1,4,9,'2019-10-30 11:02:38'),(153,'下列程序共输出_______个值：\nage = 23\nstart = 2\nif age % 2 != 0:\nstart = 1\n for x in range(start, age + 2, 2):\n   print(x)','10','16','12','14','C',1,4,9,'2019-10-30 11:02:38'),(154,'对于字典d={\'abc\':1, \'qwe\':2, \'zxc\':3}，len(d)的结果为：','6','3','12','9','B',1,4,9,'2019-10-30 11:02:38'),(155,'下面对Http请求消息使用GET和POST方法陈述正确的是：','POST方法提交信息可以保存为书签，而GET则不行','可以使用GET方法提交敏感数据','使用POST提交数据量没有限制','使用POST方法提交数据比GET方法快','C',1,1,8,'2019-10-30 11:02:40'),(156,'Web应用程序打包后的扩展名是：','EAR','WAR','JAR','RAR','B',1,1,8,'2019-10-30 11:02:40'),(157,'在Web应用程序中web.xml配置了Servlet的信息，如果你的项目为LoginDemo，那么web.xml最可能位于哪个目录下','LoginDemo/','LoginDemo/src/','LoginDemo/logindemo/WEB-INF/bin/','LoginDemo/logindemo/WEB-INF/','D',1,1,8,'2019-10-30 11:02:40'),(158,'6)在login.html中存在如下代码\n&lt;form action=”/logindemo/login”&gt;\nusername:&lt;input type=’text’ name=’userName’ id=’myName’  value=’your name’&gt;\n&lt;/form&gt;\n在login servlet中获得文本框的值正确的是：','无法获取，因为代码在Html中','request.getAttribute（“userName”）','request.getParameter（“myName”）','request.getParameter（“userName”）','D',1,1,8,'2019-10-30 11:02:40'),(159,'Jsp在转译阶段生成文件的扩展名是','class','java','exe','bin','B',1,1,8,'2019-10-30 11:02:40'),(160,'下面的说法错误的是：','Jsp可以处理动态内容和静态内容','在Jsp最终会编译成字节码后执行','在jsp中可以使用脚本控制Html的标签生成','Jsp中不能使用//注释Java脚本中的代码','D',1,1,8,'2019-10-30 11:02:40'),(161,'关于下面这段代码说法正确的是：&lt;%!   \nString temp;\nString convertMoney(String money){\ntemp = money+”.00”\nout.println(temp);\nretrun temp;\n}\n%&gt;','这里不能调用temp，超出temp的生命周期','这里不能使用out','程序通过编译','不能在这里定义方法','B',1,1,8,'2019-10-30 11:02:40'),(162,'在myjsp.jsp中，关于下面的代码说法错误的是：\n&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; errorPage=&quot;error.jsp&quot; isErrorPage=&quot;false&quot; %&gt;','该页面可以使用exception对象','该页面发生异常会转向error.jsp','存在errorPage属性时，isErrorPage是必须的属性值且一定为false','error.jsp页面一定要有isErrorPage属性且值为true；','A',1,1,8,'2019-10-30 11:02:40'),(163,'下面不属于Jsp隐式对象的是：','session','config','pageScope','exception','B',1,1,8,'2019-10-30 11:02:40'),(164,'在jsp中作用域由小到大的组合是：','request page session application','page request session application','pageContext request session application','pageScope request sessionScope applicationScope','C',1,1,8,'2019-10-30 11:02:40'),(165,'${empty &quot;&quot;}的结果是：','not null','null','1','','C',1,1,8,'2019-10-30 11:02:40'),(166,'在标签处理类中返回值EVAL_PAGE的含义是：','重复执行标签','继续处理页面内容','跳过标签体内容','跳过页面内容','B',1,1,8,'2019-10-30 11:02:40'),(167,'标签文件的扩展名是：','tld','tag','dtd','xml','A',1,1,8,'2019-10-30 11:02:40'),(168,'FilterConfig的哪个方法可以返回init参数的名称','getServletContext()','getInitParameter(String name)','getFilterName()','getInitParameterNames()','D',1,1,8,'2019-10-30 11:02:40'),(169,'下面关于JSP自定义标记的描述正确的是','JSP自定义标记是用于添加新动作标记的扩展机制','标记库通常被打包成.jar文件，该文件包含实现库标记的Java文件','web.xml文件的&lt;taglib-location&gt;表示类文件的位置','标记的属性名在web.xml文件中描述','A',1,1,8,'2019-10-30 11:02:40'),(170,'在JSP中，在JSP中想要使用JavaBean:mypackage.mybean,则以下写法正确的是','&lt;jsp:usebean id=”mybean” scope=”pageContext” class=”mypackage.mybean”/&gt;','&lt; jsp:useBean class=” mypackage.mybean.class”/&gt;','&lt;jsp:usebean id=”mybean” class=” mypackage.mybean.java”&gt;','&lt;jsp:useBean id=”mybean” class=” mypackage.mybean”/&gt;','D',1,1,8,'2019-10-30 11:02:40'),(172,'29)在JSP中，如果使用标记：\n    &lt;jsp:getProperty name=”bean Name” property=” property Name”/&gt;准备取出bean的属性的值，但property Name属性在beanName中不存在，也就是说在beanName中没有这样的属性名：property Nam，也没有getPropertyName()方法，那么会在浏览器中显示','错误页面','null','0','什么也没有','D',1,1,8,'2019-10-30 11:02:40'),(173,'http协议默认使用','8080端口','7001端口','80端口','25端口','C',1,1,8,'2019-10-30 11:02:40'),(174,'http响应状态行中的状态码200表示','处理请求成功','资源找不到','内部错误','未知状态','A',1,1,8,'2019-10-30 11:02:40'),(175,'在java中， 如果父类中的某些方法不包含任何逻辑， 并且需要有子类重写，应该使用（ ）关键字来申明父类的这些方法。',' final','static','abstract','void','C',1,8,10,'2019-10-30 11:02:57'),(176,'2、给定两个java程序，如下：\npublic interface Face{\n  int counter = 40;\n}\npublic class Test implements Face{\n private static int counter;\n public static void main(String[] args) {\n  System.out.println(++counter);\n }\n}\nTest.java的运行结果是（ ）','40','41','0','1','B',1,8,10,'2019-10-30 11:02:57'),(177,'给定java代码，如下：\n public class Test{\n static int i;\n public int aMethod(){\n  i++;\n  return i;\n }\n public static void main(String[] args) {\n  Test test = new Test();\n  test.aMethod();\n  System.out.println(test.aMethod());\n }\n}编译运行后，输出结果是（ ）','0','1','2','3','C',1,8,10,'2019-10-30 11:02:57'),(178,'给定java代码，如下：\n public abstract class Shape{\n  abstract void draw();\n}要创建Shape类的子类Circle,以下代码正确的是（ ）','class Circle extends Shape{\nint draw(){}','abstract class Circle extends Shape{}','class Circle extends Shape{\nvoid draw();\n}','class Circle extends Shape{\nvoid draw(){}\n}','A',1,8,10,'2019-10-30 11:02:57'),(179,'给定java代码，如下：\npublic class Parent{\n public void count(){\n  System.out.println(10%3);\n }\n}\npublic class Test extends Parent{\n public void count(int i){\n  System.out.println(10%i);\n }\n public static void main(String[] args) {\n  Parent p = new Test();\n  p.cou','1','3','3.33333335','编译错误','D',1,8,10,'2019-10-30 11:02:57'),(180,'给定java程序，如下：\n public class Test {\n  private static final int counter = 10;\n  public static void main(String[] args) {\n   System.out.println(++counter);\n  }\n}编译运行Test.java，结果是（ ）','10','11','编译错误','运行时异常','C',1,8,10,'2019-10-30 11:02:57'),(181,'在java中， 以定义了两个接口B和C，要定义一个实现这两个接口的类， 以下语句正确的是（ ）','interface A extends B,C','interface A implements B,C','class A implements B,C','class A implements B,implements C','C',1,8,10,'2019-10-30 11:02:57'),(182,'此方法返回值是多少（ ）\npublic static int divide(){\n        int i = 3;\n        try {\n            int a = 10/0;\n            return i;\n        } catch (Exception e) {\n            i = 4;\n            return i;\n        }finally{\n            i = 5;\n        }\n    }','3','4','5','报异常错误','B',1,8,10,'2019-10-30 11:02:57'),(183,'定义字符串：String s1 =“hello”;对下面程序描述正确的是：\n  if(s1 == “hello”){\n   System.out.println(“s1 = “hello””);\n  }else{\n   System.out.println(“s1  != “hello””);\n  \n}','A、 输出s1  != “hello”','编译正确，运行错误','产生编译错误','输出s1 = “hello”','D',1,8,10,'2019-10-30 11:02:57'),(184,'以下代码段将创建几个对象？\n String s1 = “bc”;\n String s2 = “bc”;','2','3','0','1','D',1,8,10,'2019-10-30 11:02:57'),(185,'类的实例方法表示的是什么？（ ）','父类对象的行为','类的属性','类的对象的行为','类的行为','C',1,8,10,'2019-10-30 11:02:57'),(186,'在面向对象数据模型中， 子类不但可以从其超类中继承所有的属性和方法，而且还可以定义自己的的属性和方法， 这有利于实现（ ）','可移植性','可扩充性','可靠性','安全性','B',1,8,10,'2019-10-30 11:02:57'),(187,'要创建一个新目录，可以用下面（ ）类实现。','FileInputStream','FileOutputStream','RandomAccessFile','File','D',1,8,10,'2019-10-30 11:02:57'),(188,'下列不可作为java语言标识符的是','a1','1','_1','11','D',1,8,10,'2019-10-30 11:02:57'),(189,'Java 类可以作为','类型定义机制','数据封装机制','类型定义机制和数据封装机制','以上都不对','C',1,8,10,'2019-10-30 11:02:57'),(190,'在创建对象时必须()','先声明对象,然后才能使用对象','先声明对象,为对象分配内存空间,然后才能使用对象','先声明对象,为对象分配内存空间,对对象初始化,然后才能使用对象','上述说法都对','C',1,8,10,'2019-10-30 11:02:57'),(191,'类Test1定义如下: \n1.public class Test1{ \n2.  public float aMethod(float a,float b){}\n 3.\n4.}','public float aMethod(float a, float b,float c){ }','public float aMethod(float c,float d){ }','public float aMethod(float c,float d){ }','public float aMethod(float c,float d){ }','B',1,8,10,'2019-10-30 11:02:57'),(192,'java中（）','一个子类可以有多个父类,一个父类也可以有多个子类','一个子类可以有多个父类,但一个父类只可以有一个子类','一个子类可以有一个父类,但一个父类可以有多个子类','上述说法都不对','C',1,8,10,'2019-10-30 11:02:57'),(193,'以下关于变量的说法错误的是','变量名必须是一个有效的标识符 ','变量在定义时可以没有初始值','变量一旦被定义,在程序中的任何位置都可以被访问','在程序中,可以将一个byte类型的值赋给一个int类型的变量,不需要特殊声明','C',1,8,10,'2019-10-30 11:02:57'),(194,'在Java中,要想让一个类继承另一个类,可以使用以下哪个关键字?','inherits ','implements ','extends ','modifies','C',1,8,10,'2019-10-30 11:02:57'),(195,'下列哪个语句在Python中是非法的？','x = y = z =1 ','x = (y = z + 1)','x, y = y, x','x  +=  y','B',1,8,14,'2019-10-30 11:03:30'),(196,'关于Python内存管理，下列说法错误的是','变量不必事先声明 ','变量无须先创建和赋值而直接使用 ','变量无须指定类型','可以使用del释放资源','B',1,8,14,'2019-10-30 11:03:30'),(197,'下面哪个不是Python合法的标识符','int32 ','40XL','self   ','name','B',1,8,14,'2019-10-30 11:03:30'),(198,'下列哪种说法是错误的','除字典类型外，所有标准对象均可以用于布尔测试','空字符串的布尔值是False','空列表对象的布尔值是False','值为0的任何数字对象的布尔值是False','D',1,8,14,'2019-10-30 11:03:30'),(199,'Python不支持的数据类型有','char','int','float','list','A',1,8,14,'2019-10-30 11:03:30'),(200,'关于字符串下列说法错误的是','字符应该视为长度为1的字符串','字符串以\\0标志字符串的结束','既可以用单引号，也可以用双引号创建字符串 ','在三引号字符串中可以包含换行回车等特殊字符','B',1,8,14,'2019-10-30 11:03:30'),(201,'以下不能创建一个字典的语句是','dict1 = {}','dict2 = { 3 : 5 }','dict3 ={[1,2,3]: “uestc”}    ','dict4 = {(1,2,3): “uestc”}','C',1,8,14,'2019-10-30 11:03:30'),(202,'下列Python语句正确的是：','min = x if x&lt; y = y','max = x &gt; y ?x:y','if (x &gt;y)        print x      ','while True :pass','D',1,8,14,'2019-10-30 11:03:30'),(203,'下列哪种不是Python元组的定义方式?','（1）','(1, )','(1, 2)','(1, 2, (3, 4))','A',1,8,14,'2019-10-30 11:03:30'),(204,'Python脚本文件的扩展名为','.python','.py','.pt','.pg','B',1,8,14,'2019-10-30 11:03:30'),(205,'当需要在字符串中使用特殊字符时，python使用（   ）作为转义字符。','\\','/','#','%','A',1,8,14,'2019-10-30 11:03:30'),(206,'使用（  ）关键字来创建python自定义函数。','function','func','procedure','def','D',1,8,14,'2019-10-30 11:03:30'),(207,'Python定义私有变量的方法为（   ）。','使用__private 关键字','使用public关键字','使用__xxx__定义变量名','使用__xxx定义变量名','D',1,8,14,'2019-10-30 11:03:30'),(208,'(   )不是用于处理中文的字符编码。','gb2312','gbk','big5','ascii','D',1,8,14,'2019-10-30 11:03:30'),(209,'可以返回x的整数部分','math.ceil()','math.fabs()','math.pow(x,y)','math.trunc(x)','D',1,8,14,'2019-10-30 11:03:30'),(210,'（ ）函数是指直接或间接调用函数本身的函数','递归','闭包','lambda','匿名','A',1,8,14,'2019-10-30 11:03:30'),(211,'与x &gt; y and y &gt; z 语句等价的是','x &gt; y &gt; z','not x &lt; y or not y &lt; z','not x &lt; y or y &lt; z','x &gt; y or not y &lt; z','A',1,8,14,'2019-10-30 11:03:30'),(212,'for i in range(0,2):\n       print (i)\n上述程序的输出结果是：','0 1 2','1 2','0 1','1','C',1,8,14,'2019-10-30 11:03:30'),(213,'下列程序共输出_______个值：\nage = 23\nstart = 2\nif age % 2 != 0:\nstart = 1\n for x in range(start, age + 2, 2):\n   print(x)','10','16','12','14','C',1,8,14,'2019-10-30 11:03:30'),(214,'对于字典d={\'abc\':1, \'qwe\':2, \'zxc\':3}，len(d)的结果为：','6','3','12','9','B',1,8,14,'2019-10-30 11:03:30'),(215,'以下哪条语句会产生运行错误','var    obj    =    (    );','var    obj    =    [    ]','var    obj    =    {    };','var    obj    =    /    /; ','A',1,7,7,'2019-10-30 11:03:34'),(216,'以下哪个单词不属于javascript保留字：','with ','parent','class','void ','B',1,7,7,'2019-10-30 11:03:34'),(217,'请选择结果为真的表达式','null instance of Object','null===undefied','null==undefied','NaN==NaN','C',1,7,7,'2019-10-30 11:03:34'),(218,'HTTP服务的默认端口号是','20','80','25','21','B',1,7,7,'2019-10-30 11:03:34'),(219,'写“Hello World”的正确javascript语法是？','document.write(&quot;Hello World&quot;)','&quot;Hello World&quot; ','response.write(&quot;Hello World&quot;)','(&quot;Hello World&quot;) ','A',1,7,7,'2019-10-30 11:03:34'),(220,'下列JS的判断语句中( )是正确的 （A）','if(i==0) ','if(i=0) ','if(i==0)  then','if i=0 then','A',1,7,7,'2019-10-30 11:03:34'),(221,'下列JavaScript的循环语句中( )是正确的 ','if(i&lt;10;i++)','for(i=0;i&lt;10)','for i=1 to 10','for(i=0;i&lt;=10;i++)','D',1,7,7,'2019-10-30 11:03:34'),(222,'下列的哪一个表达式将返回假 ','!(3&lt;=1) ','(4&gt;=4)&amp;&amp;(5&lt;=2) ','(“a”==”a”)&amp;&amp;(“c”!=”d”) ','(2&lt;3)||(3&lt;2) ','B',1,7,7,'2019-10-30 11:03:34'),(223,'下列选项中,( )不是网页中的事件 ','onclick','onmouseover','onsubmit ','onpressbutton','D',1,7,7,'2019-10-30 11:03:34'),(224,'有语句“var x=0;while(____) x+=2;”，要使while循环体执行10次，空白处的循环判定式应写为：','x&lt;10','x&lt;=10 ','x&lt;20 ','x&lt;=20','C',1,7,7,'2019-10-30 11:03:34'),(225,'将字串s中的所有字母变为小写字母的方法是','s.toSmallCase() ','s.toLowerCase()   ','s.toUpperCase() ','s.toUpperChars()','B',1,7,7,'2019-10-30 11:03:34'),(226,'以下( )表达式产生一个0~7之间(含0,7)的随机整数. ','Math.floor(Math.random()*6) ','Math.floor(Math.random()*7) ','Math. floor(Math.random()*8) ','Math.ceil(Math.random()*8) ','C',1,7,7,'2019-10-30 11:03:34'),(227,'在使用Javascript实现省市级联菜单功能时，在添加城市列表前清空原来的下拉选项的代码是','document.myform.selCity.options.clear() ','document.myform.selCity.options.deleteAll() ','document.myform.selCity.options.length=0 ','document.myform.selCity.options.size=0 ','C',1,7,7,'2019-10-30 11:03:34'),(228,'分析下面的Javascript代码段，输出结果是\nvar mystring=”I am a student”; var a=mystring.substring(9,13); document.write(a); ','stud','tuden','uden','udent ','C',1,7,7,'2019-10-30 11:03:34'),(229,'下面哪一个是用来追加到指定元素的末尾的？','insertAfter()','append()','appendTo()',' after() ','C',1,7,7,'2019-10-30 11:03:34'),(230,'如果想要找到一个表格的指定行数的元素，用下面哪个方法可以快速找到指定元素？','text() ','get() ','eq()','contents（）','C',1,7,7,'2019-10-30 11:03:34'),(231,'在jquery中，如果想要获取当前窗口的宽度值，下面哪个是实现该功能的？','width() ','width(val)','width','innerWidth() ','A',1,7,7,'2019-10-30 11:03:34'),(232,'为每一个指定元素的指定事件（像click）绑定一个事件处理器函数，下面哪个是用来实现该功能的？ ','trigger (type) ','bind(type) ','one(type) ','bind ','B',1,7,7,'2019-10-30 11:03:34'),(233,'在一个表单中，如果想要给输入框添加一个输入验证，可以用下面的哪个事件实现？','hover(over ,out)','keypress（fn）','change()','change(fn) ','D',1,7,7,'2019-10-30 11:03:34'),(234,'如果需要匹配包含文本的元素，用下面哪种来实现？','text() ','contains()','input()','attr(name) ','B',1,7,7,'2019-10-30 11:03:34'),(235,'在java中， 如果父类中的某些方法不包含任何逻辑， 并且需要有子类重写，应该使用（ ）关键字来申明父类的这些方法。',' final','static','abstract','void','C',1,7,13,'2019-10-30 11:03:55'),(236,'2、给定两个java程序，如下：\npublic interface Face{\n  int counter = 40;\n}\npublic class Test implements Face{\n private static int counter;\n public static void main(String[] args) {\n  System.out.println(++counter);\n }\n}\nTest.java的运行结果是（ ）','40','41','0','1','B',1,7,13,'2019-10-30 11:03:55'),(237,'给定java代码，如下：\n public class Test{\n static int i;\n public int aMethod(){\n  i++;\n  return i;\n }\n public static void main(String[] args) {\n  Test test = new Test();\n  test.aMethod();\n  System.out.println(test.aMethod());\n }\n}编译运行后，输出结果是（ ）','0','1','2','3','C',1,7,13,'2019-10-30 11:03:55'),(238,'给定java代码，如下：\n public abstract class Shape{\n  abstract void draw();\n}要创建Shape类的子类Circle,以下代码正确的是（ ）','class Circle extends Shape{\nint draw(){}','abstract class Circle extends Shape{}','class Circle extends Shape{\nvoid draw();\n}','class Circle extends Shape{\nvoid draw(){}\n}','A',1,7,13,'2019-10-30 11:03:55'),(239,'给定java代码，如下：\npublic class Parent{\n public void count(){\n  System.out.println(10%3);\n }\n}\npublic class Test extends Parent{\n public void count(int i){\n  System.out.println(10%i);\n }\n public static void main(String[] args) {\n  Parent p = new Test();\n  p.cou','1','3','3.33333335','编译错误','D',1,7,13,'2019-10-30 11:03:55'),(240,'给定java程序，如下：\n public class Test {\n  private static final int counter = 10;\n  public static void main(String[] args) {\n   System.out.println(++counter);\n  }\n}编译运行Test.java，结果是（ ）','10','11','编译错误','运行时异常','C',1,7,13,'2019-10-30 11:03:55'),(241,'在java中， 以定义了两个接口B和C，要定义一个实现这两个接口的类， 以下语句正确的是（ ）','interface A extends B,C','interface A implements B,C','class A implements B,C','class A implements B,implements C','C',1,7,13,'2019-10-30 11:03:55'),(242,'此方法返回值是多少（ ）\npublic static int divide(){\n        int i = 3;\n        try {\n            int a = 10/0;\n            return i;\n        } catch (Exception e) {\n            i = 4;\n            return i;\n        }finally{\n            i = 5;\n        }\n    }','3','4','5','报异常错误','B',1,7,13,'2019-10-30 11:03:55'),(243,'定义字符串：String s1 =“hello”;对下面程序描述正确的是：\n  if(s1 == “hello”){\n   System.out.println(“s1 = “hello””);\n  }else{\n   System.out.println(“s1  != “hello””);\n  \n}','A、 输出s1  != “hello”','编译正确，运行错误','产生编译错误','输出s1 = “hello”','D',1,7,13,'2019-10-30 11:03:55'),(244,'以下代码段将创建几个对象？\n String s1 = “bc”;\n String s2 = “bc”;','2','3','0','1','D',1,7,13,'2019-10-30 11:03:55'),(245,'类的实例方法表示的是什么？（ ）','父类对象的行为','类的属性','类的对象的行为','类的行为','C',1,7,13,'2019-10-30 11:03:55'),(246,'在面向对象数据模型中， 子类不但可以从其超类中继承所有的属性和方法，而且还可以定义自己的的属性和方法， 这有利于实现（ ）','可移植性','可扩充性','可靠性','安全性','B',1,7,13,'2019-10-30 11:03:55'),(247,'要创建一个新目录，可以用下面（ ）类实现。','FileInputStream','FileOutputStream','RandomAccessFile','File','D',1,7,13,'2019-10-30 11:03:55'),(248,'下列不可作为java语言标识符的是','a1','1','_1','11','D',1,7,13,'2019-10-30 11:03:55'),(249,'Java 类可以作为','类型定义机制','数据封装机制','类型定义机制和数据封装机制','以上都不对','C',1,7,13,'2019-10-30 11:03:55'),(250,'在创建对象时必须()','先声明对象,然后才能使用对象','先声明对象,为对象分配内存空间,然后才能使用对象','先声明对象,为对象分配内存空间,对对象初始化,然后才能使用对象','上述说法都对','C',1,7,13,'2019-10-30 11:03:55'),(251,'类Test1定义如下: \n1.public class Test1{ \n2.  public float aMethod(float a,float b){}\n 3.\n4.}','public float aMethod(float a, float b,float c){ }','public float aMethod(float c,float d){ }','public float aMethod(float c,float d){ }','public float aMethod(float c,float d){ }','B',1,7,13,'2019-10-30 11:03:55'),(252,'java中（）','一个子类可以有多个父类,一个父类也可以有多个子类','一个子类可以有多个父类,但一个父类只可以有一个子类','一个子类可以有一个父类,但一个父类可以有多个子类','上述说法都不对','C',1,7,13,'2019-10-30 11:03:55'),(253,'以下关于变量的说法错误的是','变量名必须是一个有效的标识符 ','变量在定义时可以没有初始值','变量一旦被定义,在程序中的任何位置都可以被访问','在程序中,可以将一个byte类型的值赋给一个int类型的变量,不需要特殊声明','C',1,7,13,'2019-10-30 11:03:55'),(254,'在Java中,要想让一个类继承另一个类,可以使用以下哪个关键字?','inherits ','implements ','extends ','modifies','C',1,7,13,'2019-10-30 11:03:55'),(255,'在HTML页面中，我们通常在（）标签内书写显示在页面中的内容。','&lt;head&gt;','&lt;body&gt;','&lt;style&gt;','&lt;script&gt;','B',1,9,11,'2019-10-30 11:04:02'),(256,'在html代码中，&lt;!DOCTYPE html&gt;元素的作用是（）?','该元素用来声明命名空间。','该元素用来定义文档类型。','该元素用来向搜索引擎声明关键字。','该元素用来声明网页标题','B',1,9,11,'2019-10-30 11:04:02'),(257,'在网页浮动布局中，如果对浮动后面的元素产生了影响，那么下列操作可以清除浮动影响的是（）？','浮动元素结尾处书写一个空元素加入clear:botn；属性','给后面的元素加入float:none;','设定受影响元素的边框','浮动元素结尾处书写一个空元素并加入float：right属性','A',1,9,11,'2019-10-30 11:04:02'),(258,'在超链接标签&lt;a&gt;标签中，（）不是超链接标签的target属性','_self','_top','_blank','_int','D',1,9,11,'2019-10-30 11:04:02'),(259,'下面几个标签中，哪一个是可以实现换行效果的标签（）','&lt;hr&gt;','&lt;div&gt;','&lt;font&gt;','&lt;br&gt;','D',1,9,11,'2019-10-30 11:04:02'),(260,'在页面中内嵌一个css效果时，下面哪种方法不能实现效果变化（）','引入css样式文件','在页面head处添加style标签并将效果写入style标签内','对着网页大喊样式变换','在元素内部加入style属性','C',1,9,11,'2019-10-30 11:04:02'),(261,'下列元素中，为行内元素的是','div','span','p','h2','B',1,9,11,'2019-10-30 11:04:02'),(262,'HTML指的是什么语言？','超文本标记语言（Hyper Text Markup Language）','面向对象编程语言（Object-Oriented Language）','超链接和文本标记语言（Hyperlinks and Text Markup Language）','家庭工具标记语言（Home Tool Markup Language）','A',1,9,11,'2019-10-30 11:04:02'),(263,'下列属性能够实现层的隐藏的是?','display:fals','display:hidden','display:” ”','display:none','D',1,9,11,'2019-10-30 11:04:02'),(264,'下列有关按钮的说法错误的是','可以用图片作为提交按钮','可以用图片作为重置按钮','可以控制提交按钮的显示文字','可以控制重置按钮的显示文字','',1,9,11,'2019-10-30 11:04:02'),(265,'下列HTML代码中，能在新窗口中打开百度首页的是','&lt;a src=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;','&lt;a src=&quot; http://www.baidu.com &quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt;','&lt;a href=&quot; http://www.baidu.com&quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt;','&lt;a href=&quot; http://www.baidu.com &quot;&gt;百度&lt;/a&gt;','C',1,9,11,'2019-10-30 11:04:02'),(266,'阅读以下代码，此代码在网页中显示的效果是？\n\n&lt;div style=&quot;float:left;&quot;&gt;DIV&lt;/div&gt;\n&lt;p style=&quot;color:red;&quot;&gt;正文&lt;/p&gt;','&lt;div&gt; 中的文本和 &lt;p&gt; 中的文本分两行显示，且文本红色','&lt;div&gt; 中的文本和 &lt;p&gt; 中的文本在一行上显示，且文本绿色','&lt;div&gt; 中的文本和 &lt;p&gt; 中的文本分两行显示，且文本绿色','&lt;div&gt; 中的文本和 &lt;p&gt; 中的文本在一行上显示，且文本红色','D',1,9,11,'2019-10-30 11:04:02'),(267,'下列引用外部样式表 style1.css 的语句中，正确的是','&lt;link src=&quot;style1.css&quot; type=&quot;text/css&quot;  /&gt;','&lt;link src=&quot;style1.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; /&gt;','&lt;link href=&quot;style1.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; /&gt;','&lt;link href=&quot;style1.css&quot; type=&quot;css&quot;  /&gt;','C',1,9,11,'2019-10-30 11:04:02'),(268,'Display属性值的常用值不包括哪一个','inline ','hidden','block','none','B',1,9,11,'2019-10-30 11:04:02'),(269,'进行表单验证的目的是','把用户的正确信息提交给服务器','检查提交的数据必须符合实际','使得页面变得美观、大方','减轻服务器端的压力','B',1,9,11,'2019-10-30 11:04:02'),(270,'下列说法错误的是','ID选择器的优先级高于class选择器','ID选择器应用具有唯一性','Class选择器可以重复应用于多个网页元素','伪类选择器只能应用于超链接状态','D',1,9,11,'2019-10-30 11:04:02'),(271,'下列关于div与span的说法 ，正确的是','span标签在浏览器中占满一行','span标签只能用于文本内容','div标签显示时独占一行','多个div在页面内会同行显示','C',1,9,11,'2019-10-30 11:04:02'),(272,'下面选项中，哪个使用了行内样式','&lt;p class=&quot;style&quot;&gt;','&lt;p style=&quot;color:red;&quot;&gt;','&lt;p style=red&gt;','&lt;p id=&quot;content&quot;&gt;','B',1,9,11,'2019-10-30 11:04:02'),(273,'创建选项下拉菜单时，使用的标签是','select和option','input和lable','input','input和span','A',1,9,11,'2019-10-30 11:04:02'),(275,'在java中， 如果父类中的某些方法不包含任何逻辑， 并且需要有子类重写，应该使用（ ）关键字来申明父类的这些方法。',' final','static','abstract','void','C',1,9,12,'2019-10-30 11:04:11'),(276,'2、给定两个java程序，如下：\npublic interface Face{\n  int counter = 40;\n}\npublic class Test implements Face{\n private static int counter;\n public static void main(String[] args) {\n  System.out.println(++counter);\n }\n}\nTest.java的运行结果是（ ）','40','41','0','1','B',1,9,12,'2019-10-30 11:04:11'),(277,'给定java代码，如下：\n public class Test{\n static int i;\n public int aMethod(){\n  i++;\n  return i;\n }\n public static void main(String[] args) {\n  Test test = new Test();\n  test.aMethod();\n  System.out.println(test.aMethod());\n }\n}编译运行后，输出结果是（ ）','0','1','2','3','C',1,9,12,'2019-10-30 11:04:11'),(278,'给定java代码，如下：\n public abstract class Shape{\n  abstract void draw();\n}要创建Shape类的子类Circle,以下代码正确的是（ ）','class Circle extends Shape{\nint draw(){}','abstract class Circle extends Shape{}','class Circle extends Shape{\nvoid draw();\n}','class Circle extends Shape{\nvoid draw(){}\n}','A',1,9,12,'2019-10-30 11:04:11'),(279,'给定java代码，如下：\npublic class Parent{\n public void count(){\n  System.out.println(10%3);\n }\n}\npublic class Test extends Parent{\n public void count(int i){\n  System.out.println(10%i);\n }\n public static void main(String[] args) {\n  Parent p = new Test();\n  p.cou','1','3','3.33333335','编译错误','D',1,9,12,'2019-10-30 11:04:11'),(280,'给定java程序，如下：\n public class Test {\n  private static final int counter = 10;\n  public static void main(String[] args) {\n   System.out.println(++counter);\n  }\n}编译运行Test.java，结果是（ ）','10','11','编译错误','运行时异常','C',1,9,12,'2019-10-30 11:04:11'),(281,'在java中， 以定义了两个接口B和C，要定义一个实现这两个接口的类， 以下语句正确的是（ ）','interface A extends B,C','interface A implements B,C','class A implements B,C','class A implements B,implements C','C',1,9,12,'2019-10-30 11:04:11'),(282,'此方法返回值是多少（ ）\npublic static int divide(){\n        int i = 3;\n        try {\n            int a = 10/0;\n            return i;\n        } catch (Exception e) {\n            i = 4;\n            return i;\n        }finally{\n            i = 5;\n        }\n    }','3','4','5','报异常错误','B',1,9,12,'2019-10-30 11:04:11'),(283,'定义字符串：String s1 =“hello”;对下面程序描述正确的是：\n  if(s1 == “hello”){\n   System.out.println(“s1 = “hello””);\n  }else{\n   System.out.println(“s1  != “hello””);\n  \n}','A、 输出s1  != “hello”','编译正确，运行错误','产生编译错误','输出s1 = “hello”','D',1,9,12,'2019-10-30 11:04:11'),(284,'以下代码段将创建几个对象？\n String s1 = “bc”;\n String s2 = “bc”;','2','3','0','1','D',1,9,12,'2019-10-30 11:04:11'),(285,'类的实例方法表示的是什么？（ ）','父类对象的行为','类的属性','类的对象的行为','类的行为','C',1,9,12,'2019-10-30 11:04:11'),(286,'在面向对象数据模型中， 子类不但可以从其超类中继承所有的属性和方法，而且还可以定义自己的的属性和方法， 这有利于实现（ ）','可移植性','可扩充性','可靠性','安全性','B',1,9,12,'2019-10-30 11:04:11'),(287,'要创建一个新目录，可以用下面（ ）类实现。','FileInputStream','FileOutputStream','RandomAccessFile','File','D',1,9,12,'2019-10-30 11:04:11'),(288,'下列不可作为java语言标识符的是','a1','1','_1','11','D',1,9,12,'2019-10-30 11:04:11'),(289,'Java 类可以作为','类型定义机制','数据封装机制','类型定义机制和数据封装机制','以上都不对','C',1,9,12,'2019-10-30 11:04:11'),(290,'在创建对象时必须()','先声明对象,然后才能使用对象','先声明对象,为对象分配内存空间,然后才能使用对象','先声明对象,为对象分配内存空间,对对象初始化,然后才能使用对象','上述说法都对','C',1,9,12,'2019-10-30 11:04:11'),(291,'类Test1定义如下: \n1.public class Test1{ \n2.  public float aMethod(float a,float b){}\n 3.\n4.}','public float aMethod(float a, float b,float c){ }','public float aMethod(float c,float d){ }','public float aMethod(float c,float d){ }','public float aMethod(float c,float d){ }','B',1,9,12,'2019-10-30 11:04:11'),(292,'java中（）','一个子类可以有多个父类,一个父类也可以有多个子类','一个子类可以有多个父类,但一个父类只可以有一个子类','一个子类可以有一个父类,但一个父类可以有多个子类','上述说法都不对','C',1,9,12,'2019-10-30 11:04:11'),(293,'以下关于变量的说法错误的是','变量名必须是一个有效的标识符 ','变量在定义时可以没有初始值','变量一旦被定义,在程序中的任何位置都可以被访问','在程序中,可以将一个byte类型的值赋给一个int类型的变量,不需要特殊声明','C',1,9,12,'2019-10-30 11:04:11'),(294,'在Java中,要想让一个类继承另一个类,可以使用以下哪个关键字?','inherits ','implements ','extends ','modifies','C',1,9,12,'2019-10-30 11:04:11'),(295,'以下哪条语句会产生运行错误','var    obj    =    (    );','var    obj    =    [    ]','var    obj    =    {    };','var    obj    =    /    /; ','A',1,3,15,'2019-10-30 11:06:06'),(296,'以下哪个单词不属于javascript保留字：','with ','parent','class','void ','B',1,3,15,'2019-10-30 11:06:06'),(297,'请选择结果为真的表达式','null instance of Object','null===undefied','null==undefied','NaN==NaN','C',1,3,15,'2019-10-30 11:06:06'),(298,'HTTP服务的默认端口号是','20','80','25','21','B',1,3,15,'2019-10-30 11:06:06'),(299,'写“Hello World”的正确javascript语法是？','document.write(&quot;Hello World&quot;)','&quot;Hello World&quot; ','response.write(&quot;Hello World&quot;)','(&quot;Hello World&quot;) ','A',1,3,15,'2019-10-30 11:06:06'),(300,'下列JS的判断语句中( )是正确的 （A）','if(i==0) ','if(i=0) ','if(i==0)  then','if i=0 then','A',1,3,15,'2019-10-30 11:06:06'),(301,'下列JavaScript的循环语句中( )是正确的 ','if(i&lt;10;i++)','for(i=0;i&lt;10)','for i=1 to 10','for(i=0;i&lt;=10;i++)','D',1,3,15,'2019-10-30 11:06:06'),(302,'下列的哪一个表达式将返回假 ','!(3&lt;=1) ','(4&gt;=4)&amp;&amp;(5&lt;=2) ','(“a”==”a”)&amp;&amp;(“c”!=”d”) ','(2&lt;3)||(3&lt;2) ','B',1,3,15,'2019-10-30 11:06:06'),(303,'下列选项中,( )不是网页中的事件 ','onclick','onmouseover','onsubmit ','onpressbutton','D',1,3,15,'2019-10-30 11:06:06'),(304,'有语句“var x=0;while(____) x+=2;”，要使while循环体执行10次，空白处的循环判定式应写为：','x&lt;10','x&lt;=10 ','x&lt;20 ','x&lt;=20','C',1,3,15,'2019-10-30 11:06:06'),(305,'将字串s中的所有字母变为小写字母的方法是','s.toSmallCase() ','s.toLowerCase()   ','s.toUpperCase() ','s.toUpperChars()','B',1,3,15,'2019-10-30 11:06:06'),(306,'以下( )表达式产生一个0~7之间(含0,7)的随机整数. ','Math.floor(Math.random()*6) ','Math.floor(Math.random()*7) ','Math. floor(Math.random()*8) ','Math.ceil(Math.random()*8) ','C',1,3,15,'2019-10-30 11:06:06'),(307,'在使用Javascript实现省市级联菜单功能时，在添加城市列表前清空原来的下拉选项的代码是','document.myform.selCity.options.clear() ','document.myform.selCity.options.deleteAll() ','document.myform.selCity.options.length=0 ','document.myform.selCity.options.size=0 ','C',1,3,15,'2019-10-30 11:06:06'),(308,'分析下面的Javascript代码段，输出结果是\nvar mystring=”I am a student”; var a=mystring.substring(9,13); document.write(a); ','stud','tuden','uden','udent ','C',1,3,15,'2019-10-30 11:06:06'),(309,'下面哪一个是用来追加到指定元素的末尾的？','insertAfter()','append()','appendTo()',' after() ','C',1,3,15,'2019-10-30 11:06:06'),(310,'如果想要找到一个表格的指定行数的元素，用下面哪个方法可以快速找到指定元素？','text() ','get() ','eq()','contents（）','C',1,3,15,'2019-10-30 11:06:06'),(311,'在jquery中，如果想要获取当前窗口的宽度值，下面哪个是实现该功能的？','width() ','width(val)','width','innerWidth() ','A',1,3,15,'2019-10-30 11:06:06'),(312,'为每一个指定元素的指定事件（像click）绑定一个事件处理器函数，下面哪个是用来实现该功能的？ ','trigger (type) ','bind(type) ','one(type) ','bind ','B',1,3,15,'2019-10-30 11:06:06'),(313,'在一个表单中，如果想要给输入框添加一个输入验证，可以用下面的哪个事件实现？','hover(over ,out)','keypress（fn）','change()','change(fn) ','D',1,3,15,'2019-10-30 11:06:06'),(314,'如果需要匹配包含文本的元素，用下面哪种来实现？','text() ','contains()','input()','attr(name) ','B',1,3,15,'2019-10-30 11:06:06');
/*!40000 ALTER TABLE `em_single` ENABLE KEYS */;

#
# Structure for table "em_students"
#

DROP TABLE IF EXISTS `em_students`;
CREATE TABLE `em_students` (
  `id` int(20) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id编号',
  `username` varchar(10) NOT NULL COMMENT '姓名',
  `id_card` varchar(50) NOT NULL COMMENT '学生身份证',
  `sex` varchar(4) NOT NULL COMMENT '性别',
  `password` varchar(30) NOT NULL COMMENT '密码',
  `class_name` varchar(10) NOT NULL COMMENT '班级',
  `class_teacher` varchar(10) NOT NULL COMMENT '班主任',
  `tel` varchar(30) NOT NULL COMMENT '电话号码',
  `major_id` int(10) NOT NULL COMMENT '专业id',
  `status` smallint(4) NOT NULL DEFAULT '1' COMMENT '状态:1是,0否',
  `add_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '添加时间',
  `address` varchar(255) NOT NULL COMMENT '地址',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=255 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='学生表';

#
# Data for table "em_students"
#

/*!40000 ALTER TABLE `em_students` DISABLE KEYS */;
INSERT INTO `em_students` VALUES (1,'杨绍坤','513701200011125217','男','1','17三年软件2','李隆斌','13684481202',1,1,'2019-10-24 19:26:29','四号实训'),(2,'王三才','513722200011245413','男','1','17三年软件2','李隆斌','18200476159',1,1,'2019-10-24 19:26:29','四号实训'),(3,'马裕','140202200012190018','男','1','17三年软件2','李隆斌','17882454544',1,1,'2019-10-24 19:26:29','四号实训'),(4,'廖俊杰','513922200010104917','男','104917','17三年软件2','李隆斌','17695263713',1,1,'2019-10-24 19:26:29','四号实训'),(5,'鲜先禄','511322200101272577','男','272577','17三年软件2','李隆斌','13419124790',1,1,'2019-10-24 19:26:29','四号实训'),(6,'陈柏为','510683200101136311','男','136311','17三年软件2','李隆斌','18728032932',1,1,'2019-10-24 19:26:29','四号实训'),(7,'杨杰','510722200101151557','男','151557','17三年软件2','李隆斌','15884477042',1,1,'2019-10-24 19:26:29','四号实训'),(8,'柴炜淇','610722200105152219','男','152219','17三年软件2','李隆斌','17358662140',1,1,'2019-10-24 19:26:29','四号实训'),(9,'黄子健','510106200105174817','男','174817','17三年软件2','李隆斌','13980444671',1,1,'2019-10-24 19:26:29','四号实训'),(10,'唐涛','511722200106272551','男','272551','17三年软件2','李隆斌','18228696461',1,1,'2019-10-24 19:26:29','四号实训'),(11,'贾川','511722200108272838','男','272838','17三年软件2','李隆斌','15181870143',1,1,'2019-10-24 19:26:29','四号实训'),(12,'吴宇恒','510321200109236450','男','236450','17三年软件2','李隆斌','13990044778',1,1,'2019-10-24 19:26:29','四号实训'),(13,'刘宝升','511721200109086619','男','086619','17三年软件2','李隆斌','18282914264',1,1,'2019-10-24 19:26:29','四号实训'),(14,'王罗欢','510121200109051017','男','051017','17三年软件2','李隆斌','18084824098',1,1,'2019-10-24 19:26:29','四号实训'),(15,'夏姚伟','511102200110215711','男','215711','17三年软件2','李隆斌','15283369773',1,1,'2019-10-24 19:26:29','四号实训'),(16,'谭显杰','511011200110087095','男','087095','17三年软件2','李隆斌','13088228085',1,1,'2019-10-24 19:26:29','四号实训'),(17,'温昌义','511002200111066417','男','066417','17三年软件2','李隆斌','18283250620',1,1,'2019-10-24 19:26:29','四号实训'),(18,'曾宇','511028200111060836','男','060836','17三年软件2','李隆斌','13880529325',1,1,'2019-10-24 19:26:29','四号实训'),(19,'刘茂坪','511521200111241015','男','241015','17三年软件2','李隆斌','15680394230',1,1,'2019-10-24 19:26:29','四号实训'),(20,'肖杰','510524200111015673','男','015673','17三年软件2','李隆斌','15183079153',1,1,'2019-10-24 19:26:29','四号实训'),(21,'张红城','513723200112050013','男','050013','17三年软件2','李隆斌','17338980095',1,1,'2019-10-24 19:26:29','四号实训'),(22,'罗宏伟','511528200112163631','男','163631','17三年软件2','李隆斌','17628255812',1,1,'2019-10-24 19:26:29','四号实训'),(23,'江宏伟','510311200112311332','男','311332','17三年软件2','李隆斌','15281323799',1,1,'2019-10-24 19:26:29','四号实训'),(24,'何超','510121200112266676','男','266676','17三年软件2','李隆斌','18780085089',1,1,'2019-10-24 19:26:29','四号实训'),(25,'欧亚东','511025200112111114','男','111114','17三年软件2','李隆斌','13990505173',1,1,'2019-10-24 19:26:29','四号实训'),(26,'蒋波','510623199910059019','男','059019','17三年软件2','李隆斌','18781026570',1,1,'2019-10-24 19:26:29','四号实训'),(27,'徐江林','511923200009056950','男','056950','17三年软件2','李隆斌','15775720866',1,1,'2019-10-24 19:26:29','四号实训'),(28,'曾必文','511521200204120554','男','120554','17三年软件2','李隆斌','17321968720',1,1,'2019-10-24 19:26:29','四号实训'),(29,'孙光骜','211281200207174039','男','174039','17三年软件2','李隆斌','15228899246',1,1,'2019-10-24 19:26:29','四号实训'),(30,'曾育新','511725200204236318','男','236318','17三年软件2','李隆斌','15882706749',1,1,'2019-10-24 19:26:29','四号实训'),(31,'张宇','513902200208165455','男','165455','17三年软件2','李隆斌','18398023991',1,1,'2019-10-24 19:26:29','四号实训'),(32,'余雨昂','510402200204092615','男','092615','17三年软件2','李隆斌','18980355052',1,1,'2019-10-24 19:26:29','四号实训'),(33,'李郑杰','510724200204123711','男','123711','17三年软件2','李隆斌','17628060873',1,1,'2019-10-24 19:26:29','四号实训'),(34,'邱祯昊','512021200211265077','男','265077','17三年软件2','李隆斌','15883223120',1,1,'2019-10-24 19:26:29','四号实训'),(35,'曹琪','511324200211213394','男','213394','17三年软件2','李隆斌','15882023674',1,1,'2019-10-24 19:26:29','四号实训'),(36,'刘洋','511011200205101777','男','101777','17三年软件2','李隆斌','13890591489',1,1,'2019-10-24 19:26:29','四号实训'),(37,'薛承峰','500238200209193515','男','193515','17三年软件2','李隆斌','17783517397',1,1,'2019-10-24 19:26:29','四号实训'),(38,'刘俊翔','510107200210110010','男','110010','17三年软件2','李隆斌','15982050227',1,1,'2019-10-24 19:26:29','四号实训'),(39,'袁理想','510525200207233014','男','233014','17三年软件2','李隆斌','18349126179',1,1,'2019-10-24 19:26:29','四号实训'),(40,'黄祎程','513931200209136911','男','136911','17三年软件2','李隆斌','18628873925',1,1,'2019-10-24 19:26:29','四号实训'),(41,'王高','511025200211043559','男','043559','17三年软件2','李隆斌','15902867008',1,1,'2019-10-24 19:26:29','四号实训'),(42,'敖睿麒','510104200202100059','男','100059','17三年软件2','李隆斌','18981787101',1,1,'2019-10-24 19:26:29','四号实训'),(43,'曹洋帆','360202200207190019','男','190019','17三年软件2','李隆斌','18382271603',1,1,'2019-10-24 19:26:29','四号实训'),(44,'钱戌','510322200201191132','男','191132','17三年软件2','李隆斌','18382038092',1,1,'2019-10-24 19:26:29','四号实训'),(45,'任茂华','511381200204249353','男','249353','17三年软件2','李隆斌','18882301263',1,1,'2019-10-24 19:26:29','四号实训'),(46,'张羽','530628200209040239','女','040239','17三年软件2','李隆斌','15208173260',1,1,'2019-10-24 19:26:29','四号实训'),(47,'张羽','530628200209040239','女','040239','17三年软件2','李隆斌','15208173260',1,1,'2019-10-24 19:26:29','四号实训'),(48,'杜俊杰','510722199804257416','男','123456','18大数据2班','王宇航','15883794585',2,1,'2019-10-24 19:27:03','四川省绵阳市'),(49,'罗智文','513901199811264819','男','123456','18大数据2班','王宇航','13194997530',2,1,'2019-10-24 19:27:03','四川省资阳市'),(50,'杨才瑞','513822200103199317','男','123456','18大数据2班','王宇航','15182244797',2,1,'2019-10-24 19:27:03','四川省眉山市'),(51,'郭钟','510322200003092117','男','123456','18大数据2班','王宇航','18281381649',2,1,'2019-10-24 19:27:03','四川省自贡市'),(52,'李兴洋','513902200003265057','男','123456','18大数据2班','王宇航','18708272133',2,1,'2019-10-24 19:27:03','四川省简阳市'),(53,'刘玮','510722199710027433','男','123456','18大数据2班','王宇航','13662991375',2,1,'2019-10-24 19:27:03','四川省绵阳市'),(54,'熊晓杰','51382419990821151X','男','123456','18大数据2班','王宇航','19982637175',2,1,'2019-10-24 19:27:03','四川省眉山市'),(55,'周继帆','513902200009087191','男','123456','18大数据2班','王宇航','17608296742',2,1,'2019-10-24 19:27:03','四川省成都市'),(56,'李万','513021200001138476','男','123456','18大数据2班','王宇航','13548276291',2,1,'2019-10-24 19:27:03','四川省达州市'),(57,'李昆霖','513021199608100655','男','123456','18大数据2班','王宇航','18982820884',2,1,'2019-10-24 19:27:03','四川省达州市'),(58,'余西','511322199908075413','男','123456','18大数据2班','王宇航','17620406659',2,1,'2019-10-24 19:27:03','四川省南充市'),(59,'薛井山','513030199901135618','男','123456','18大数据2班','王宇航','15086770479',2,1,'2019-10-24 19:27:03','四川省达州市'),(60,'刘雷','511024200109300372','男','123456','18大数据2班','王宇航','18581520663',2,1,'2019-10-24 19:27:03','四川省成都市'),(61,'王彩莉','513822200109248706','女','123456','18大数据2班','王宇航','18628988176',2,1,'2019-10-24 19:27:03','四川省成都市'),(62,'熊锐华','511526200001140311','男','123456','18大数据2班','王宇航','13547717827',2,1,'2019-10-24 19:27:03','四川省宜宾市'),(63,'杨帅','513902200106085091','男','123456','18大数据2班','王宇航','15282258394',2,1,'2019-10-24 19:27:03','四川省简阳市'),(64,'罗璇','511011200107087633','男','123456','18大数据2班','王宇航','18384120783',2,1,'2019-10-24 19:27:03','四川省成都市'),(65,'周子敬','513021199701126673','男','123456','18大数据2班','王宇航','13632364183',2,1,'2019-10-24 19:27:03','四川省达州市'),(66,'陈力','511302200008311417','男','123456','18大数据2班','王宇航','17711411383',2,1,'2019-10-24 19:27:03','四川省南充市'),(67,'袁豪','513722200106122694','男','123456','18大数据2班','王宇航','18228869131',2,1,'2019-10-24 19:27:03','四川省巴中市'),(68,'汪洋','510124200205105715','男','123456','18大数据2班','王宇航','18483635709',2,1,'2019-10-24 19:27:03','四川省成都市'),(69,'詹惠麟','510183199712240019','男','123456','18大数据2班','王宇航','13547935281',2,1,'2019-10-24 19:27:03','四川省成都市'),(70,'杨航','511621199802154295','男','123456','18大数据2班','王宇航','13825242971',2,1,'2019-10-24 19:27:03','四川省成都市'),(71,'邹涛','511011199502286573','男','123456','18大数据2班','王宇航','19180452874',2,1,'2019-10-24 19:27:03',''),(72,'李俊杰','510821200208159152','男','123456','18大数据2班','王宇航','18583438134',2,1,'2019-10-24 19:27:03',''),(73,'苏敬凯','659001199912100036','男','123456','18大数据2班','王宇航','18364294810',2,1,'2019-10-24 19:27:03','新疆省石河子市'),(74,'周海涛','510322199710128435','男','123456','18大数据2班','王宇航','18723303424',2,1,'2019-10-24 19:27:03','四川省自贡市'),(75,'李嘉欣','513823199911074812','男','123456','18大数据2班','王宇航','13688004814',2,1,'2019-10-24 19:27:03','四川省眉山市'),(76,'乔童','640103200104141212','男','123456','18大数据2班','王宇航','19982015486',2,1,'2019-10-24 19:27:03','宁夏银川'),(77,'杜成鹏','510723199902171276','男','123456','18大数据2班','王宇航','16608164948',2,1,'2019-10-24 19:27:03','四川绵阳'),(78,'刘子汉','511023199902188118','男','123456','18大数据2班','王宇航','15082146867',2,1,'2019-10-24 19:27:03','四川资阳'),(79,'蓝亚','511602199607246195','男','123456','18大数据2班','王宇航','18161147790',2,1,'2019-10-24 19:27:03','四川广安'),(80,'孙瑞琦','510121200106238812','男','123456','18大数据2班','王宇航','18380187655',2,1,'2019-10-24 19:27:03','四川省成都市金堂县'),(81,'卿力文','511621200008208335','男','123456','18大数据2班','王宇航','18582044483',2,1,'2019-10-24 19:27:03','四川广安'),(82,'柯云路','513226199804242012','男','123456','18大数据2班','王宇航','16608377662',2,1,'2019-10-24 19:27:03',''),(83,'李嘉鑫','510121200202086476','男','123456','18大数据2班','王宇航','15882050094',2,1,'2019-10-24 19:27:03','四川省成都市金堂县'),(84,'张文亮','511126200112180015','男','123456','18大数据2班','王宇航','18090355503',2,1,'2019-10-24 19:27:03','四川乐山'),(85,'涂丰','513701200105273931','男','123456','18大数据2班','王宇航','18382733131',2,1,'2019-10-24 19:27:03','四川省巴中市'),(86,'张申兰','510723199803174000','女','123456','18大数据2班','王宇航','18398415916',2,1,'2019-10-24 19:27:03','四川省绵阳市盐亭县'),(87,'邱思豪','510821199912030015','男','123456','18大数据2班','王宇航','18111352895',2,1,'2019-10-24 19:27:03','四川省广元市旺苍县'),(88,'许蒙','513921200112085310','男','123456','18大数据2班','王宇航','17608015045',2,1,'2019-10-24 19:27:03','四川省资阳市安岳县'),(89,'曾华江','513030200002120856','男','123456','18大数据2班','王宇航','15892994953',2,1,'2019-10-24 19:27:03','四川达州'),(90,'曾华江','513030200002120856','男','123456','18大数据2班','王宇航','15892994953',2,1,'2019-10-24 19:27:03','四川达州'),(91,'陈佳龙','510781200006040031','男','123456','19智慧城市1','张兴强','18048601621',3,1,'2019-10-24 19:27:20',''),(92,'吴种愿','513821200011214579','男','123456','19智慧城市1','张兴强','17628033294',3,1,'2019-10-24 19:27:20',''),(93,'吴全程','510107200001152177','男','123456','19智慧城市1','张兴强','18781973928',3,1,'2019-10-24 19:27:20',''),(94,'代毅','510524200003151811','男','123456','19智慧城市1','张兴强','18380924397',3,1,'2019-10-24 19:27:20',''),(95,'刘方浩','513901200004050414','男','123456','19智慧城市1','张兴强','17780782007',3,1,'2019-10-24 19:27:20',''),(96,'黎子龙','510521200008125357','男','123456','19智慧城市1','张兴强','18180512605',3,1,'2019-10-24 19:27:20',''),(97,'牟云江','532130200103042138','男','123456','19智慧城市1','张兴强','18788997020',3,1,'2019-10-24 19:27:20',''),(98,'刘浪','511723200102082116','男','123456','19智慧城市1','张兴强','18123196818',3,1,'2019-10-24 19:27:20',''),(99,'熊信豪','510521199810294371','男','123456','19智慧城市1','张兴强','17360511679',3,1,'2019-10-24 19:27:20',''),(100,'袁辰','513002200108282751','男','123456','19智慧城市1','张兴强','13388200073',3,1,'2019-10-24 19:27:20',''),(101,'袁辰','513002200108282751','男','123456','19智慧城市1','张兴强','13388200073',3,1,'2019-10-24 19:27:20',''),(102,'杨思涵','510302200304161010','男','123456','17三年软件四','王智','13094438014',1,1,'2019-10-24 19:27:37','四川省自贡市'),(103,'刘帮君','511521200109070835','男','123456','17三年软件四','王智','15828403191',1,1,'2019-10-24 19:27:37','四川宜宾'),(104,'邓粤','513021200004180151','男','123456','17三年软件四','王智','18628051287',1,1,'2019-10-24 19:27:37','四川达州'),(105,'王鹏程','513701200101160219','男','123456','17三年软件四','王智','18282134453',1,1,'2019-10-24 19:27:37','四川巴中'),(106,'王思远','510623200107111119','男','123456','17三年软件四','王智','18728082216',1,1,'2019-10-24 19:27:37','四川德阳'),(107,'陈云浩','512021200311126218','男','123456','17三年软件四','王智','17628589752',1,1,'2019-10-24 19:27:37','四川资阳'),(108,'吴杰汶','51032120010831519x','男','123456','17三年软件四','王智','18512897167',1,1,'2019-10-24 19:27:37','四川自贡'),(109,'李宇','511324200210097432','男','123456','17三年软件四','王智','18584871153',1,1,'2019-10-24 19:27:37','四川南充'),(110,'禹长生','500382200206055011','男','123456','17三年软件四','王智','15708412099',1,1,'2019-10-24 19:27:37','重庆市'),(111,'张培森','513901200108120659','男','123456','17三年软件四','王智','18228433020',1,1,'2019-10-24 19:27:37','四川资阳'),(112,'宋鹏程','421126199905150310','男','123456','17三年软件四','王智','18581540515',1,1,'2019-10-24 19:27:37','新疆阿克苏'),(113,'杨洪权','513822200210047634','男','123456','17三年软件四','王智','18284557383',1,1,'2019-10-24 19:27:37','四川眉山'),(114,'李钰源','533221200007240011','男','123456','17三年软件四','王智','18582389475',1,1,'2019-10-24 19:27:37','云南省昆明市官渡区'),(115,'胡兴罗','511723200205203312','男','123456','17三年软件四','王智','15775621792',1,1,'2019-10-24 19:27:37','四川省达州市开江县'),(116,'杨仲欣','622201200206126014','男','123456','17三年软件四','王智','18884117828',1,1,'2019-10-24 19:27:37','甘肃'),(117,'王雷','51132420001105355X','男','123456','17三年软件四','王智','17781129615',1,1,'2019-10-24 19:27:37','四川省南充市仪陇县老木乡'),(118,'俞文彪','510184200206040016','男','123456','17三年软件四','王智','13518117858',1,1,'2019-10-24 19:27:37','四川省崇州市'),(119,'陶毅','51160220001127529X','男','123456','17三年软件四','王智','18108134941',1,1,'2019-10-24 19:27:37','成都'),(120,'邓鸿飞','510123200203250314','男','123456','17三年软件四','王智','18000594319',1,1,'2019-10-24 19:27:37','成都'),(121,'林志豪','513723200109194198','男','123456','17三年软件四','王智','18584818461',1,1,'2019-10-24 19:27:37','四川巴中'),(122,'栾国庆','511723200208010516','男','123456','17三年软件四','王智','13668383877',1,1,'2019-10-24 19:27:37','四川达州'),(123,'谢子良','513902200105086711','男','123456','17三年软件四','王智','18884133970',1,1,'2019-10-24 19:27:37','四川省简阳市养马镇'),(124,'邓川','512021200204236112','男','123456','17三年软件四','王智','13550397870',1,1,'2019-10-24 19:27:37','四川省成都市'),(125,'何文杰','513822200108148711','男','123456','17三年软件四','王智','18144204144',1,1,'2019-10-24 19:27:37','四川成都'),(126,'岳长春','511922200101100516','男','123456','17三年软件四','王智','15082730141',1,1,'2019-10-24 19:27:37','四川巴中'),(127,'邓超耀','51090220020203673X','男','123456','17三年软件四','王智','17345457913',1,1,'2019-10-24 19:27:37','四川遂宁'),(128,'马冲','513701200107016330','男','123456','17三年软件四','王智','17364792883',1,1,'2019-10-24 19:27:37','四川巴中'),(129,'钟伟杰','51032220030401821x','男','123456','17三年软件四','王智','18581560742',1,1,'2019-10-24 19:27:37','四川自贡'),(130,'钟伟杰','51032220030401821x','男','123456','17三年软件四','王智','18581560742',1,1,'2019-10-24 19:27:37','四川自贡'),(131,'赖瑞鹏','513822200110017657','男','1001','17三年软件三班','周鹏','13548240496',1,1,'2019-10-24 19:27:54','四川省眉山市仁寿县禾加镇'),(132,'赵佳洋','140311200201073015','男','0123456','17三年软件三班','周鹏','15719437701',1,1,'2019-10-24 19:27:54','四川省成都市金堂县赵镇'),(133,'罗超','51390120011124453x','男','12345','17三年软件三班','周鹏','18512864324',1,1,'2019-10-24 19:27:54','四川省资阳市雁江区伍隍镇'),(134,'罗茂伟','51322320030227001X','男','123456','17三年软件三班','周鹏','18328098949',1,1,'2019-10-24 19:27:54','成都'),(135,'谭芸','513023200004047118','男','47118','17三年软件三班','周鹏','17687474714',1,1,'2019-10-24 19:27:54','四川省达州市开江县任市镇'),(136,'何沁峰','510525200108118854','男','159357','17三年软件三班','周鹏','18428013720',1,1,'2019-10-24 19:27:54','成都市新都区三河场马鞍路'),(137,'廖启意','51178120010926475X','男','926475X','17三年软件三班','周鹏','18584874946',1,1,'2019-10-24 19:27:54','四川省万源市玉带乡'),(138,'陈鑫','510107200201146011','男','202001','17三年软件三班','周鹏','18190738993',1,1,'2019-10-24 19:27:54','四川省成都市高新区'),(139,'卢志林','513721199801250274','男','990601','17三年软件三班','周鹏','17683153934',1,1,'2019-10-24 19:27:54','四川省巴中市通江县'),(140,'陈龙','511722200104303975','男','123456','17三年软件三班','周鹏','18508396769',1,1,'2019-10-24 19:27:54','成都'),(141,'李强锋','511322200210113399','男','3137696005','17三年软件三班','周鹏','17683221970',1,1,'2019-10-24 19:27:54','四川省南充市营山县老林镇'),(142,' 张旭东','510311200012282917','男','123456','17三年软件三班','周鹏','15328356316',1,1,'2019-10-24 19:27:54','四川新华电脑学校'),(143,'刘涛','511423200112011518','男','123456','17三年软件三班','周鹏','18628168601',1,1,'2019-10-24 19:27:54','眉山市洪雅县三宝镇'),(144,'樊彬','51102520010706865X','男','123456','17三年软件三班','周鹏','15687879639',1,1,'2019-10-24 19:27:54','四川省内江市资中县孟塘镇'),(145,'吴圣祥','500234199912183537','男','123456','17三年软件三班','周鹏','15528434367',1,1,'2019-10-24 19:27:54','重庆市开州'),(146,'卢仁杰','511621200109128350','男','213389','17三年软件三班','周鹏','18582365650',1,1,'2019-10-24 19:27:54','四川省广安市岳池县中和镇'),(147,'吴圣祥','500234199912183537','男','123456','17三年软件三班','周鹏','15528434367',1,1,'2019-10-24 19:27:54','重庆市开州'),(148,'张强','513432200302052319','男','123456','17三年软件三班','周鹏','18581544660',1,1,'2019-10-24 19:27:54','四川凉山'),(149,'饶秋红','511324200209196791','男','769800','17三年软件三班','周鹏','18582579420',1,1,'2019-10-24 19:27:54','四川成都'),(150,'刘友刚 ','513821200105278856','男','123456','17三年软件三班','周鹏','17713789496',1,1,'2019-10-24 19:27:54','四川眉山'),(151,'王腾田曦','530128200301141512','男','123456','17三年软件三班','周鹏','18996901732',1,1,'2019-10-24 19:27:54','昆明盘龙区葡萄街区天宇花园'),(152,'杨嘉成','500382200302016418','男','123456','17三年软件三班','周鹏','18628955396',1,1,'2019-10-24 19:27:54','四川攀枝花市东区五十四'),(153,'彭浩然','513231200203270014','男','123456','17三年软件三班','周鹏','18908189967',1,1,'2019-10-24 19:27:54','成都市青羊区浣花北路'),(154,'彭浩然','513231200203270014','男','123456','17三年软件三班','周鹏','18908189967',1,1,'2019-10-24 19:27:54','成都市青羊区浣花北路'),(155,'查星宇','513822200112251797','男','000000','18人工智能三','母浩','18328193619',8,1,'2019-10-24 19:28:19','宇宙'),(156,'汪鑫','511402200209017658','男','000000','18人工智能三','母浩','18215545183',8,1,'2019-10-24 19:28:19','中国'),(157,'刘建','510724200404175815','男','000001','18人工智能三','母浩','15228371568',8,1,'2019-10-24 19:28:19','地球'),(158,'张瑶卿','510403200208100316','男','013579','18人工智能三','母浩','18328983584',8,1,'2019-10-24 19:28:19','西昌'),(159,'廖洋','510904200108134117','男','060606','18人工智能三','母浩','15882154227',8,1,'2019-10-24 19:28:19','成都'),(160,'何万里','511324200107223031','男','223031','18人工智能三','母浩','17581710551',8,1,'2019-10-24 19:28:19','成都'),(161,'王元松','511527200009226714','男','qweasd','18人工智能三','母浩','18882400201',8,1,'2019-10-24 19:28:19','银河系'),(162,'曾广涛','511529200203224635','男','000000','18人工智能三','母浩','15183126771',8,1,'2019-10-24 19:28:19','宜宾'),(163,'陆泰龙','510106200402250070','男','444444','18人工智能三','母浩','15881063525',8,1,'2019-10-24 19:28:19','中国'),(164,'徐天豪','510122200204082010','男','123456','18人工智能三','母浩','18208106238',8,1,'2019-10-24 19:28:19','成都'),(165,'万一超','510121200208297813','男','000000','18人工智能三','母浩','18583793981',8,1,'2019-10-24 19:28:19','成都'),(166,'加纳尔','652927200302052155','男','0302551','18人工智能三','母浩','13096388845',8,1,'2019-10-24 19:28:19','成都'),(167,'刘石','511323200107061953','男','020324','18人工智能三','母浩','17361378009',8,1,'2019-10-24 19:28:19','南充'),(168,'张瑶','511025200201035037','男','020106','18人工智能三','母浩','15992406133',8,1,'2019-10-24 19:28:19',''),(169,'沈伟伦','511724200304046275','男','654321','18人工智能三','母浩','17318433342',8,1,'2019-10-24 19:28:19','达州'),(170,'李杨','510502200302241915','男','131452','18人工智能三','母浩','15928173635',8,1,'2019-10-24 19:28:19','泸州'),(171,'谭右林','511323200302231815','男','202303tyl','18人工智能三','母浩','18728494007',8,1,'2019-10-24 19:28:19',''),(172,'姜豪','36068120011218051X','男','lbwNB','18人工智能三','母浩','18583510945',8,1,'2019-10-24 19:28:19','江西'),(173,'蒋全成','510422200309126215','男','258025','18人工智能三','母浩','18782341879',8,1,'2019-10-24 19:28:19','攀枝花'),(174,'任怡飞','510703200310242413','男','242413','18人工智能三','母浩','17381657030',8,1,'2019-10-24 19:28:19','你心里'),(175,'王志君','511921200210025918','男','025918','18人工智能三','母浩','13208373197',8,1,'2019-10-24 19:28:19','中国'),(176,'傅金巾','511621200009228338','男','200092','18人工智能三','母浩','17688425286',8,1,'2019-10-24 19:28:19','广安'),(177,'张正','51100200204086011','男','2532952','18人工智能三','母浩','15282163768',8,1,'2019-10-24 19:28:19','四川'),(178,'石鑫','522131200302090014','男','2864305','18人工智能三','母浩','19915646249',8,1,'2019-10-24 19:28:19','贵州'),(179,'王尹辰','511724200302207098','男','123456','18人工智能三','母浩','13258340640',8,1,'2019-10-24 19:28:19','四川'),(180,'覃晨','511902200303038110','男','123456','18人工智能三','母浩','18200483007',8,1,'2019-10-24 19:28:19','四川'),(181,'董大凛','511902200106085000','男','383838','18人工智能 三','母浩','17883678115',8,1,'2019-10-24 19:28:19','四川'),(182,'李浩洋','152632200305220317','男','123456','18人工智能三','母浩','13115931976',8,1,'2019-10-24 19:28:19','内蒙古'),(183,'李天蛟','532130200312152317','男','123456','18人工智能 三','母浩','15528375735',8,1,'2019-10-24 19:28:19','云南'),(184,'刘成','512023200207222373','男','131420','18人工智能 三','母浩','15308086890',8,1,'2019-10-24 19:28:19','四川'),(185,'李文超','51102520011115485X','男','3197026911','18人工智能三','母浩','18584160198',8,1,'2019-10-24 19:28:19','四川'),(186,'邓材东','511621200206298730','男','987654321','18人工智能三','母浩','15680572092',8,1,'2019-10-24 19:28:19','四川'),(187,'胡涛','511303200307160000','男','131452','18人工智能 三','母浩','18581742527',8,1,'2019-10-24 19:28:19','四川'),(188,'黄加劲','511724200203155878','男','202124','18人工智能 三','母浩','18781885753',8,1,'2019-10-24 19:28:19','四川'),(189,'李新团','513022199805193332','男','121300','18人工智能三','母浩','13183507725',8,1,'2019-10-24 19:28:19','四川'),(190,'李新团','513022199805193332','男','121300','18人工智能三','母浩','13183507725',8,1,'2019-10-24 19:28:19','四川'),(191,'杨云兮','510402200112120957','男','123456','17三年dt1,2','刘斯大','13060071263',9,1,'2019-10-24 19:28:30',''),(192,'吕昱霖','512022200309025297','男','123456','17三年dt1,2','刘斯大','17311324160',9,1,'2019-10-24 19:28:30',''),(193,'苏杭','511723200211230034','男','123456','17三年dt1,2','刘斯大','18583990385',9,1,'2019-10-24 19:28:30',''),(194,'蔡兴旺','511321200205022453','男','123456','17三年dt1,2','刘斯大','18582151185',9,1,'2019-10-24 19:28:30',''),(195,'邓源鑫','510902200206039014','男','123456','17三年dt1,2','刘斯大','18584195301',9,1,'2019-10-24 19:28:30',''),(196,'蒲俊中','510302200004291518','男','123456','17三年dt1,2','刘斯大','18581950235',9,1,'2019-10-24 19:28:30',''),(197,'潘岳','510522200108087294','男','123456','17三年dt1,2','刘斯大','18982494890',9,1,'2019-10-24 19:28:30',''),(198,'郑乾','510402200207246317','男','123456','17三年dt1,2','刘斯大','18508389572',9,1,'2019-10-24 19:28:30',''),(199,'杨朝浪','511781200108010037','男','123456','17三年dt1,2','刘斯大','16698597848',9,1,'2019-10-24 19:28:30',''),(200,'张成晨','511324200107030299','男','123456','17三年dt1,2','刘斯大','18512809907',9,1,'2019-10-24 19:28:30',''),(201,'罗智屏','511123200201283359','男','123456','17三年dt1,2','刘斯大','18582310389',9,1,'2019-10-24 19:28:30',''),(202,'刘国梁','429004200104291155','男','123456','17三年dt1,2','刘斯大','17764982756',9,1,'2019-10-24 19:28:30',''),(203,'邓书恒','510402200208070915','男','123456','17三年dt1,2','刘斯大','17616241289',9,1,'2019-10-24 19:28:30',''),(204,'王星雨','513433200111222721','女','123456','17三年dt1,2','刘斯大','17360068725',9,1,'2019-10-24 19:28:30',''),(205,'彭天笑','51343320010704271x','男','123456','17三年dt1,2','刘斯大','15390470036',9,1,'2019-10-24 19:28:30',''),(206,'廖宇杰','51382220020122319x','男','123456','17三年dt1,2','刘斯大','18084862002',9,1,'2019-10-24 19:28:30',''),(207,'王洋','511321200002010671','男','123456','17三年dt1,2','刘斯大','15208363190',9,1,'2019-10-24 19:28:30',''),(208,'刘凯','513221200207090317','男','123456','17三年dt1,2','刘斯大','15756595017',9,1,'2019-10-24 19:28:30',''),(209,'谭家乐','511011200202053554','男','123456','17三年dt1,2','刘斯大','17628006381',9,1,'2019-10-24 19:28:30',''),(210,'张宏铭','511123200107262914','男','123456','17三年dt1,2','刘斯大','15528332873',9,1,'2019-10-24 19:28:30',''),(211,'王鑫','511325200206282113','男','123456','17三年dt1,2','刘斯大','18584896282',9,1,'2019-10-24 19:28:30',''),(212,'谢虹宇','510822200112070010','男','123456','17三年dt1,2','刘斯大','17381987667',9,1,'2019-10-24 19:28:30',''),(213,'李小宝','513433200010186012','男','123456','17三年dt1,2','刘斯大','17343660684',9,1,'2019-10-24 19:28:30',''),(214,'李小宝','513433200010186012','男','123456','17三年dt1,2','刘斯大','17343660684',9,1,'2019-10-24 19:28:30',''),(215,'郭航','510922200103268274','男','123456','18大数据3班','潘涛','13547740223',7,1,'2019-10-31 10:44:59',''),(216,'郭林','510722199201297590','男','123456','18大数据3班','潘涛','18659801148',7,1,'2019-10-31 10:44:59',''),(217,'张超','500238200101095112','男','123456','18大数据3班','潘涛','17623535129',7,1,'2019-10-31 10:44:59',''),(218,'冯泽民','513701199808131512','男','123456','18大数据3班','潘涛','13109937793',7,1,'2019-10-31 10:44:59',''),(219,'余海浪','511721200012270890','男','123456','18大数据3班','潘涛','17628484147',7,1,'2019-10-31 10:44:59',''),(220,'黄正红','511523199811022873','男','123456','18大数据3班','潘涛','13605091093',7,1,'2019-10-31 10:44:59',''),(221,'李波','51152420010418551X','男','123456','18大数据3班','潘涛','15351359592',7,1,'2019-10-31 10:44:59',''),(222,'杨振宇','510802200005220532','男','123456','18大数据3班','潘涛','18980492726',7,1,'2019-10-31 10:44:59',''),(223,'闵杰权','511324199912147531','男','123456','18大数据3班','潘涛','15281743262',7,1,'2019-10-31 10:44:59',''),(224,'陈春祥','510304199802065811','男','123456','18大数据3班','潘涛','15108320760',7,1,'2019-10-31 10:44:59',''),(225,'雷月酉','510107200006223413','男','123456','18大数据3班','潘涛','13408548961',7,1,'2019-10-31 10:44:59',''),(226,'付国贤','510311200105045814','男','123456','18大数据3班','潘涛','15708298339',7,1,'2019-10-31 10:44:59',''),(227,'羊军','510722199910142612','男','123456','18大数据3班','潘涛','18780362232',7,1,'2019-10-31 10:44:59',''),(228,'唐林','51160219981109853X','男','123456','18大数据3班','潘涛','13350915793',7,1,'2019-10-31 10:44:59',''),(229,'苏智鹏','511023199801187415','男','123456','18大数据3班','潘涛','17521584998',7,1,'2019-10-31 10:44:59',''),(230,'王艺博','620402200103253438','男','123456','18大数据3班','潘涛','18089430261',7,1,'2019-10-31 10:44:59',''),(231,'马牛牛','511322199611241038','男','123456','18大数据3班','潘涛','17628190775',7,1,'2019-10-31 10:44:59',''),(232,'佘志成','510821200102238530','男','123456','18大数据3班','潘涛','17683095521',7,1,'2019-10-31 10:44:59',''),(233,'杨巧俊','511025200002162121','女','123456','18大数据3班','潘涛','15244897329',7,1,'2019-10-31 10:44:59',''),(234,'杨超','622626200203253017','男','123456','18移动APP1','李隆斌','18628380212',4,1,'2019-10-31 10:47:01','甘肃省陇南市文县'),(235,'兰浚峰','513125200304212216','男','123456','18移动APP1','李隆斌','18080093974',4,1,'2019-10-31 10:47:01','四川省雅安市石棉县'),(236,'陈辉','532625200209161318','男','123456','18移动APP1','李隆斌','17882576466',4,1,'2019-10-31 10:47:01','四川'),(237,'曾泓锦','511702200307040014','男`','123456','18移动APP1','李隆斌','17790310257',4,1,'2019-10-31 10:47:01','达州'),(238,'岳伦超','510682200308110016','男','123456','18移动APP1','李隆斌','18113626876',4,1,'2019-10-31 10:47:01','四川省德阳市'),(239,'夏嵬','511922200310271071','男','123456','18移动APP1','李隆斌','13541286075',4,1,'2019-10-31 10:47:01','四川巴中市南江县'),(240,'黄敏','512021200309187628','女','123456','18移动APP1','李隆斌','18581757613',4,1,'2019-10-31 10:47:01','资阳'),(241,'陈永祥','513125200205103815','男','123456','18移动APP1','李隆斌','15281276579',4,1,'2019-10-31 10:47:01','四川省雅安市石棉县'),(242,'方健宾','511529200302265811','男','123456','18移动APP1','李隆斌','15982820891',4,1,'2019-10-31 10:47:01','成都'),(243,'康昊','440281200202260431','男','123456','18移动APP1','李隆斌','13541581664',4,1,'2019-10-31 10:47:01','成都'),(244,'周效屿','510104200209090017','男','123456','18移动APP1','李隆斌','17318961370',4,1,'2019-10-31 10:47:01','成都'),(245,'罗耀辉','510182200211253818','男','123456','18移动APP1','李隆斌','19828639828',4,1,'2019-10-31 10:47:01','成都'),(246,'王杰','510921200110280814','男','123456','18移动APP1','李隆斌','15982555297',4,1,'2019-10-31 10:47:01','四川省遂宁市蓬溪县'),(247,'徐海顺','513322200102033537','男','123456','18移动APP1','李隆斌','18584846871',4,1,'2019-10-31 10:47:01','成都'),(248,'黄建军','510623200209066013','男','123456','18移动APP1','李隆斌','13541764978',4,1,'2019-10-31 10:47:01','四川省德阳市中江县'),(249,'廖鑫苹','511923200304027773','男','123456','18移动APP1','李隆斌','19940721356',4,1,'2019-10-31 10:47:01','四川省巴中市平昌县'),(250,'严宏论','510125200308191819','男','123456','18移动APP1','李隆斌','18980625668',4,1,'2019-10-31 10:47:01','四川省成都市新都区'),(251,'吴玉龙','511025200208078814','男','123456','18移动APP1','李隆斌','15828445430',4,1,'2019-10-31 10:47:01','成都'),(252,'扎巴','542301200210080536','男','123456','18移动app1','李隆斌','18584907554',4,1,'2019-10-31 10:47:01','四川省遂宁市射洪县'),(253,'杨绍坤坤','513701200011125218','男','1','17三年软件2','李隆斌','13684481202',1,1,'0000-00-00 00:00:00','四号实训'),(254,'王九才','513722200011245412','男','1','17三年软件2','李隆斌','18200476159',1,1,'0000-00-00 00:00:00','四号实训');
/*!40000 ALTER TABLE `em_students` ENABLE KEYS */;

#
# Structure for table "em_subject"
#

DROP TABLE IF EXISTS `em_subject`;
CREATE TABLE `em_subject` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id编号',
  `subject_name` varchar(255) NOT NULL COMMENT '科目名称',
  `status` smallint(4) NOT NULL DEFAULT '1' COMMENT '状态:1是,0否',
  `major_id` int(10) NOT NULL COMMENT '关联专业表id',
  `add_time` datetime NOT NULL COMMENT '添加时间',
  `on_off` tinyint(4) NOT NULL DEFAULT '1' COMMENT '开关状态 1开启 0关闭',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='科目表';

#
# Data for table "em_subject"
#

/*!40000 ALTER TABLE `em_subject` DISABLE KEYS */;
INSERT INTO `em_subject` VALUES (1,'html5+ccs',1,1,'2019-09-29 08:55:16',1),(2,'c++',1,3,'2019-09-29 09:49:59',1),(3,'mysql',1,2,'2019-09-29 09:54:46',1),(4,'oracle',1,1,'2019-10-09 15:06:39',1),(5,'linux',1,4,'2019-10-09 15:59:11',1),(6,'scratch',1,2,'2019-10-09 16:04:21',1),(7,'jquery',1,7,'2019-10-24 09:42:45',1),(8,'jsp',1,1,'2019-10-24 10:18:43',1),(9,'python',1,4,'2019-10-24 10:18:56',1),(10,'java',1,8,'2019-10-24 18:56:38',1),(11,'web前端',1,9,'2019-10-24 18:59:41',1),(12,'java',1,9,'2019-10-24 19:00:29',1),(13,'java',1,7,'2019-10-24 19:00:39',1),(14,'python',1,8,'2019-10-24 19:00:52',1),(15,'jquery',1,3,'2019-10-30 11:05:36',1);
/*!40000 ALTER TABLE `em_subject` ENABLE KEYS */;

#
# Structure for table "em_title"
#

DROP TABLE IF EXISTS `em_title`;
CREATE TABLE `em_title` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `title_name` varchar(30) DEFAULT NULL COMMENT '标签内容',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 COMMENT='标签表';

#
# Data for table "em_title"
#

/*!40000 ALTER TABLE `em_title` DISABLE KEYS */;
INSERT INTO `em_title` VALUES (1,'实用性强'),(2,'生动有趣'),(3,'精品'),(4,'科普'),(5,'大神著作'),(6,'价格优惠');
/*!40000 ALTER TABLE `em_title` ENABLE KEYS */;

#
# Structure for table "em_topic"
#

DROP TABLE IF EXISTS `em_topic`;
CREATE TABLE `em_topic` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '编号',
  `single` varchar(255) NOT NULL COMMENT '单选题',
  `selection` varchar(255) NOT NULL COMMENT '多选题',
  `judge` varchar(255) NOT NULL COMMENT '判断题',
  `operation` varchar(255) NOT NULL COMMENT '操作题',
  `id_card` varchar(30) NOT NULL COMMENT '学生身份证',
  `username` varchar(10) NOT NULL COMMENT '学生名字',
  `class_name` varchar(10) NOT NULL COMMENT '班级',
  `major_id` int(10) NOT NULL COMMENT '专业id',
  `subject_id` int(10) NOT NULL COMMENT '科目id',
  `add_time` datetime NOT NULL COMMENT '添加时间',
  `scroe` int(10) NOT NULL COMMENT '总分数',
  `status` tinyint(4) NOT NULL DEFAULT '1' COMMENT '状态 0已删除的成绩 1未删除的成绩',
  `not_read` tinyint(4) NOT NULL COMMENT '1 为已经阅卷 0为未阅卷  2为已阅卷等待教务处审核 ',
  `single_scroe` int(10) NOT NULL COMMENT '单选题分数',
  `selection_scroe` int(10) NOT NULL COMMENT '多选题分数',
  `judge_scroe` int(10) NOT NULL COMMENT '判断题分数',
  `operation_scroe` int(10) NOT NULL COMMENT '操作题分数',
  `pathinfo` varchar(255) NOT NULL COMMENT '操作题上传路径',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=44 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='提交试卷分数题库';

#
# Data for table "em_topic"
#

/*!40000 ALTER TABLE `em_topic` DISABLE KEYS */;
INSERT INTO `em_topic` VALUES (1,'single110-A,single113-C,single108-D,single100-C,single106-B,single105-D,single107-C,single104-C,single94-D,single111-C','selection93-BC,selection92-CD,selection95-CD,selection103-BC,selection94-BC,selection99-BC,selection101-BC,selection96-BC,selection97-BC,selection104-BC','judge91-1,judge94-1,judge96-1,judge85-1,judge92-0,judge87-1,judge90-1,judge84-1,judge89-1,judge88-1','operation8-题目：  题目：已知公司的员工表EMP(EID, ENAME, BDATE, SEX, CITY)，\n部门表DEPT（DID, DNAME, DCITY），\n工作表WORK（EID,DID,STARTDATE,SALARY）。各个字段说明如下：\nEID——员工编号，最多6个字符。例如A00001（主键）\nENAME——员工姓名，最多10个字符。例如SMITH\nBDATE——出生日期，日期型\nSEX——员工性别，单个字符。F或者M\nCITY——员工居住的城市，最多20个字符。例如：上海','513701200011125217','杨绍坤','17三年软件2',1,4,'2020-09-18 17:39:47',29,1,1,9,3,15,2,''),(2,'检测作弊，成绩不合格','检测作弊，成绩不合格','检测作弊，成绩不合格','检测作弊，成绩不合格','513722200011245413','王三才','17三年软件2',1,1,'2020-09-19 14:58:15',0,1,0,0,0,0,0,''),(3,'single101-D,single108-D,single98-C,single100-C,single94-B,single97-C,single103-B,single107-C,single96-B,single105-B','selection92-B,selection97-B,selection93-AC,selection99-BD,selection103-ACD,selection104-ABCD,selection95-ABC,selection100-ACD,selection102-ABC,selection101-ABC','judge84-0,judge86-1,judge89-1,judge96-0,judge85-0,judge94-1,judge90-0,judge88-1,judge87-1,judge93-0','operation8-题目：已知公司的员工表EMP(EID, ENAME, BDATE, SEX, CITY)，\n部门表DEPT（DID, DNAME, DCITY），\n工作表WORK（EID,DID,STARTDATE,SALARY）。各个字段说明如下：\nEID——员工编号，最多6个字符。例如A00001（主键）\nENAME——员工姓名，最多10个字符。例如SMITH\nBDATE——出生日期，日期型\nSEX——员工性别，单个字符。F或者M\nCITY——员工居住的城市，最多20个字符。例如：上海\nDID—','513722200011245413','王三才','17三年软件2',1,4,'2020-11-16 16:34:31',21,1,0,12,0,9,0,'public/uploads/operation/2\\20201116\\e31533c6ffce54f1b64b747c87ebbdb8.html'),(4,'single137-C,single145-D,single153-B,single136-C,single144-B,single151-C,single149-C,single152-C,single143-C,single146-B','selection144-D,selection143-BD,selection133-BD,selection140-BD,selection138-BD,selection132-BCD,selection139-ABC,selection126-ABCD,selection136-CD,selection142-AB','judge131-0,judge123-0,judge126-1,judge135-0,judge121-0,judge118-1,judge132-1,judge128-1,judge120-0,judge122-0','operation10-设计一个函数，统计字符串中英文字母和数字各自出现的次数','510623200209066013','黄建军','18移动APP1',4,9,'2020-11-16 16:42:53',27,1,1,6,6,15,10,'public/uploads/operation/248\\20201116\\45ce603c944b629b2c20e08d98e6d060.html'),(7,'single208-A,single211-C,single200-D,single201-B,single213-D,single214-B,single198-C,single202-D,single212-C,single196-D','selection204-B,selection198-BD,selection199-BCD,selection186-ACD,selection200-ABCD,selection203-ABCD,selection205-ABD,selection202-ABD,selection191-BC,selection195-AC','judge187-1,judge194-0,judge183-1,judge184-0,judge196-1,judge190-0,judge185-0,judge195-0,judge186-0,judge181-1','operation15-设计一个函数，统计字符串中英文字母和数字各自出现的次数','511724200302207098','王尹辰','18人工智能三',8,14,'2020-11-16 20:40:13',21,1,1,9,0,12,10,'public/uploads/operation/179\\20201116\\54d46e88cfe8a69f9b77e83f39fb36b8.html'),(24,'single177-C,single184-D,single194-C,single187-D,single176-A,single191-C,single183-B,single190-C,single175-B,single192-C','selection168-BCD,selection181-BCD,selection172-CD,selection169-ABCD,selection178-未填,selection166-ABC,selection183-未填,selection184-ABCD,selection182-未填,selection171-CD','judge158-0,judge173-0,judge169-1,judge170-1,judge167-0,judge162-0,judge172-1,judge163-1,judge161-0,judge177-0','operation14-设计一个单例模式','511724200302207098','王尹辰','18人工智能三',8,10,'2020-11-17 09:17:27',33,1,1,18,0,15,10,'public/uploads/operation/179\\20201117\\c32fd3159ce6a89555f5367e409c71b8.html'),(25,'single97-D,single108-B,single103-A,single101-D,single94-C,single105-B,single110-A,single95-C,single99-C,single106-B','selection92-BCD,selection102-未填,selection104-ABC,selection94-ABCD,selection99-ABC,selection93-ABC,selection103-ABC,selection101-BC,selection98-未填,selection100-ABC','judge94-0,judge88-0,judge91-1,judge87-0,judge93-0,judge86-1,judge92-0,judge85-1,judge89-0,judge96-1','operation8-题目：已知公司的员工表EMP(EID, ENAME, BDATE, SEX, CITY)，\n部门表DEPT（DID, DNAME, DCITY），\n工作表WORK（EID,DID,STARTDATE,SALARY）。各个字段说明如下：\nEID——员工编号，最多6个字符。例如A00001（主键）\nENAME——员工姓名，最多10个字符。例如SMITH\nBDATE——出生日期，日期型\nSEX——员工性别，单个字符。F或者M\nCITY——员工居住的城市，最多20个字符。例如：上海\nDID—','140202200012190018','马裕','17三年软件2',1,4,'2020-11-17 09:27:30',36,1,1,15,0,21,10,''),(26,'single87-C,single78-C,single91-D,single90-B,single80-B,single86-C,single84-D,single88-未填,single93-未填,single92-未填','selection65-未填,selection66-未填,selection70-未填,selection73-未填,selection67-未填,selection69-未填,selection90-未填,selection81-未填,selection72-未填,selection89-未填','judge83-未填,judge72-未填,judge67-未填,judge79-未填,judge68-未填,judge75-未填,judge71-未填,judge81-未填,judge78-未填,judge76-未填','operation7-请完成下载文件中题目二的效果','140202200012190018','马裕','17三年软件2',1,1,'2020-11-17 13:56:30',6,1,1,6,0,0,10,''),(35,'single167-C,single169-未填,single161-C,single174-未填,single168-未填,single162-未填,single163-C,single158-未填,single172-未填,single156-D','selection156-未填,selection150-未填,selection162-未填,selection148-未填,selection165-未填,selection158-C,selection160-未填,selection159-C,selection147-未填,selection149-未填','judge147-未填,judge142-未填,judge152-未填,judge155-未填,judge139-0,judge154-未填,judge138-0,judge143-未填,judge157-未填,judge153-0','operation11-完成用户登录和用户注册功能（jsp+oracle/mysql完成）\n要求：\n1.界面自己设计（设计越好分数越高，图片自己准备，风格不限）\n2.数据库自行设计\n3.至少完成用户登录和用户注册功能，其他功能可自行添加，可以加分。','140202200012190018','马裕','17三年软件2',1,8,'2020-11-19 21:23:47',9,1,1,0,0,9,5,''),(36,'single172-B,single156-D,single159-未填,single168-未填,single166-未填,single157-未填,single174-未填,single169-未填,single161-未填,single167-未填','selection165-未填,selection158-未填,selection154-未填,selection150-未填,selection148-未填,selection159-未填,selection155-未填,selection151-未填,selection164-未填,selection149-未填','judge142-未填,judge153-未填,judge144-未填,judge147-未填,judge152-未填,judge143-未填,judge151-未填,judge138-未填,judge146-未填,judge150-未填','operation11-完成用户登录和用户注册功能（jsp+oracle/mysql完成）\n要求：\n1.界面自己设计（设计越好分数越高，图片自己准备，风格不限）\n2.数据库自行设计\n3.至少完成用户登录和用户注册功能，其他功能可自行添加，可以加分。','513722200011245413','王三才','17三年软件2',1,8,'2020-12-02 17:25:53',2,1,1,0,0,0,2,''),(37,'single84-B,single87-C,single82-D,single80-D,single75-D,single83-未填,single86-未填,single92-未填,single77-未填,single78-未填','selection83-未填,selection66-未填,selection90-未填,selection72-C,selection80-D,selection87-未填,selection71-未填,selection86-未填,selection82-未填,selection73-未填','judge76-未填,judge75-未填,judge81-1,judge67-0,judge78-未填,judge72-0,judge70-1,judge83-0,judge74-1,judge79-未填','operation6-请完成下载文件中题目一的效果','513922200010104917','廖俊杰','17三年软件2',1,1,'2020-12-08 15:01:55',25,1,1,3,0,12,10,''),(38,'single99-A,single103-A,single100-D,single109-C,single112-B,single97-D,single110-B,single94-C,single98-C,single106-未填','selection95-BC,selection99-ACD,selection97-AD,selection92-未填,selection103-未填,selection96-未填,selection98-未填,selection104-未填,selection93-AB,selection102-CD','judge85-0,judge91-1,judge84-0,judge90-1,judge94-0,judge87-1,judge88-0,judge93-1,judge95-未填,judge92-0','operation8-题目：已知公司的员工表EMP(EID, ENAME, BDATE, SEX, CITY)，\n部门表DEPT（DID, DNAME, DCITY），\n工作表WORK（EID,DID,STARTDATE,SALARY）。各个字段说明如下：\nEID——员工编号，最多6个字符。例如A00001（主键）\nENAME——员工姓名，最多10个字符。例如SMITH\nBDATE——出生日期，日期型\nSEX——员工性别，单个字符。F或者M\nCITY——员工居住的城市，最多20个字符。例如：上海\nDID—','513922200010104917','廖俊杰','17三年软件2',1,4,'2020-12-08 15:06:35',31,1,1,6,0,18,7,''),(39,'single77-未填,single79-B,single75-未填,single88-未填,single80-未填,single82-未填,single89-未填,single91-未填,single90-未填,single92-未填','selection91-未填,selection89-未填,selection68-未填,selection84-未填,selection65-D,selection85-未填,selection72-未填,selection81-未填,selection80-未填,selection90-未填','judge67-未填,judge73-0,judge66-未填,judge79-未填,judge77-未填,judge69-未填,judge75-0,judge76-未填,judge74-未填,judge82-未填','operation6-请完成下载文件中题目一的效果','513701200011125217','杨绍坤','17三年软件2',1,1,'2020-12-09 20:11:59',3,1,0,0,0,3,0,''),(40,'single166-C,single156-C,single158-B,single159-D,single160-B,single157-C,single164-未填,single169-未填,single173-未填,single155-未填','selection163-未填,selection146-未填,selection158-未填,selection150-未填,selection155-未填,selection156-未填,selection160-未填,selection154-未填,selection165-BCD,selection148-C','judge143-未填,judge152-0,judge140-未填,judge154-未填,judge139-未填,judge149-未填,judge150-0,judge144-1,judge145-1,judge156-0','operation11-完成用户登录和用户注册功能（jsp+oracle/mysql完成）\n要求：\n1.界面自己设计（设计越好分数越高，图片自己准备，风格不限）\n2.数据库自行设计\n3.至少完成用户登录和用户注册功能，其他功能可自行添加，可以加分。','513701200011125217','杨绍坤','17三年软件2',1,8,'2020-12-09 20:13:15',3,1,0,0,0,3,0,''),(41,'single93-未填,single92-未填,single85-D,single86-未填,single91-未填,single75-未填,single82-未填,single87-未填,single88-未填,single79-未填','selection64-未填,selection68-未填,selection85-未填,selection73-未填,selection71-未填,selection88-未填,selection83-未填,selection91-未填,selection90-未填,selection84-未填','judge79-未填,judge65-未填,judge82-未填,judge72-未填,judge78-未填,judge64-未填,judge69-未填,judge76-未填,judge68-未填,judge71-未填','operation6-请完成下载文件中题目一的效果','511028200111060836','曾宇','17三年软件2',1,1,'2020-12-12 23:07:55',0,1,0,0,0,0,0,''),(42,'single88-B,single77-B,single83-D,single91-B,single87-B,single92-C,single79-B,single80-C,single78-B,single89-D','selection86-B,selection79-AB,selection72-BC,selection85-ABC,selection64-ABC,selection84-CD,selection70-BC,selection90-未填,selection65-未填,selection73-未填','judge79-未填,judge65-未填,judge80-未填,judge68-0,judge67-1,judge69-1,judge77-0,judge66-未填,judge76-未填,judge78-未填','operation6-请完成下载文件中题目一的效果','610722200105152219','柴炜淇','17三年软件2',1,1,'2020-12-14 16:08:09',26,1,1,15,0,6,5,'public/uploads/operation/8\\20201214\\1466fb1c9b9f6d011b9ba36df018bd9a.png'),(43,'single102-未填,single114-未填,single105-未填,single112-未填,single106-未填,single100-未填,single110-未填,single97-未填,single108-未填,single103-未填','selection99-未填,selection93-未填,selection102-未填,selection104-未填,selection96-未填,selection98-未填,selection97-未填,selection103-未填,selection100-未填,selection95-未填','judge85-未填,judge95-未填,judge86-未填,judge93-未填,judge88-未填,judge94-未填,judge89-未填,judge91-未填,judge84-未填,judge87-未填','operation8-题目：已知公司的员工表EMP(EID, ENAME, BDATE, SEX, CITY)，\n部门表DEPT（DID, DNAME, DCITY），\n工作表WORK（EID,DID,STARTDATE,SALARY）。各个字段说明如下：\nEID——员工编号，最多6个字符。例如A00001（主键）\nENAME——员工姓名，最多10个字符。例如SMITH\nBDATE——出生日期，日期型\nSEX——员工性别，单个字符。F或者M\nCITY——员工居住的城市，最多20个字符。例如：上海\nDID—','610722200105152219','柴炜淇','17三年软件2',1,4,'2020-12-14 16:19:28',0,1,0,0,0,0,0,'');
/*!40000 ALTER TABLE `em_topic` ENABLE KEYS */;
